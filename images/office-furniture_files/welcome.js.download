webpackJsonp([9, 30], [,
    function (e, t, i) {
        "use strict";
        var s, a, n, r = ("function" == typeof Symbol && Symbol.iterator, i(0));
        r.fn.selectFilter = function (e) {
                function t(e, t) {
                    var i = r(e).find(".filter-list"),
                        s = r(e).find(".filter-list")[0],
                        a = r(e)[0],
                        n = t.target;
                    s === n || r.contains(s, n) || r.contains(a, n) || (i.slideUp(50), r(e).find(".filter-list").removeClass("filter-open"), r(e).find(".icon-filter-arrow").removeClass("filter-show"))
                }
                var i = {
                        callBack: function (e) {}
                    },
                    s = r.extend({}, i, e),
                    a = r(this).find("select option"),
                    n = this,
                    o = "";
                o += '<ul class="filter-list">', r(a).each(function (e, t) {
                    var i = r(t).val(),
                        s = r(t).html(),
                        a = r(t).attr("selected"),
                        l = r(t).attr("disabled"),
                        d = a ? "filter-selected" : "",
                        h = l ? "filter-disabled" : "";
                    a ? (o += '<li class="' + d + '" data-value="' + i + '"><i class="aunon aunonarrow_left2"></i><a title="' + s + '">' + s + "</a></li>", r(n).find(".filter-title").not(".headline").val(s.replace(/&amp;/g, "&"))) : o += l ? '<li class="' + h + '" data-value="' + i + '"><i class="aunon aunonarrow_left2"></i><a>' + s + "</a></li>" : '<li data-value="' + i + '"><i class="aunon aunonarrow_left2"></i><a title="' + s + '">' + s + "</a></li>"
                }), o += "</ul>", r(n).append(o), r(n).find("select").hide(), r(n).on("focus", ".filter-title", function () {
                    r(n).find(".filter-list").slideDown(100), r(n).find(".filter-list").addClass("filter-open"), r(n).find(".icon-filter-arrow").addClass("filter-show")
                }), r(n).on("input propertychange", ".filter-title", function () {
                    var e = r(this).val().toLowerCase();
                    e ? r(n).find(".filter-list li").each(function (t, i) {
                        r(i).attr("data-value").toLowerCase().indexOf(e) < 0 ? r(i).hide() : r(i).show()
                    }) : r(n).find(".filter-list li").show()
                }), r(n).find(".filter-list li").not(".filter-disabled").on("click", function () {
                    var e = r(this).data("value"),
                        t = r(this).find("a").html();
                    r(n).find(".filter-title").not(".headline").val(t.replace(/&amp;/g, "&")), r(n).find(".icon-filter-arrow").toggleClass("filter-show"), r(this).addClass("filter-selected").siblings().removeClass("filter-selected"), r(this).parent().slideToggle(50);
                    for (var i = 0; i < a.length; i++) {
                        e == a.eq(i).val() && r(n).find("select").val(e)
                    }
                    s.callBack(e)
                }), r(document).on("mousedown", function (e) {
                    t(n, e)
                }), r(document).on("touchstart", function (e) {
                    t(n, e)
                })
            },
            function (r) {
                a = [i(0)], s = r, void 0 !== (n = "function" == typeof s ? s.apply(t, a) : s) && (e.exports = n)
            }(function (e) {
                function t(i, s) {
                    var a = this;
                    a.element = i, a.el = e(i), a.suggestions = [], a.badQueries = [], a.selectedIndex = -1, a.currentValue = a.element.value, a.timeoutId = null, a.cachedResponse = {}, a.onChangeTimeout = null, a.onChange = null, a.isLocal = !1, a.suggestionsContainer = null, a.noSuggestionsContainer = null, a.options = e.extend(!0, {}, t.defaults, s), a.classes = {
                        selected: "autocomplete-selected",
                        suggestion: "autocomplete-suggestion"
                    }, a.hint = null, a.hintValue = "", a.selection = null, a.initialize(), a.setOptions(s)
                }

                function i(e, t, i) {
                    return -1 !== e.value.toLowerCase().indexOf(i)
                }

                function s(t) {
                    return "string" == typeof t ? e.parseJSON(t) : t
                }

                function a(e, t) {
                    if (!t) return e.value;
                    var i = "(" + r.escapeRegExChars(t) + ")";
                    return e.value.replace(new RegExp(i, "gi"), "<strong>$1</strong>").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/&lt;(\/?strong)&gt;/g, "<$1>")
                }

                function n(e, t) {
                    return '<div class="autocomplete-group">' + t + "</div>"
                }
                var r = function () {
                        return {
                            escapeRegExChars: function (e) {
                                return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&")
                            }, createNode: function (e, t) {
                                var i = document.createElement("div");
                                return i.className = e, i.style.position = "absolute", i.style.display = "none", i
                            }
                        }
                    }(),
                    o = {
                        ESC: 27,
                        TAB: 9,
                        RETURN: 13,
                        LEFT: 37,
                        UP: 38,
                        RIGHT: 39,
                        DOWN: 40
                    },
                    l = e.noop;
                t.utils = r, e.Autocomplete = t, t.defaults = {
                    ajaxSettings: {},
                    autoSelectFirst: !1,
                    appendTo: "body",
                    serviceUrl: null,
                    lookup: null,
                    onSelect: null,
                    width: "auto",
                    minChars: 1,
                    maxHeight: 300,
                    deferRequestBy: 0,
                    params: {},
                    formatResult: a,
                    formatGroup: n,
                    delimiter: null,
                    zIndex: 9999,
                    type: "GET",
                    noCache: !1,
                    onSearchStart: l,
                    onSearchComplete: l,
                    onSearchError: l,
                    preserveInput: !1,
                    containerClass: "autocomplete-suggestions",
                    tabDisabled: !1,
                    dataType: "text",
                    currentRequest: null,
                    triggerSelectOnValidInput: !0,
                    preventBadQueries: !0,
                    lookupFilter: i,
                    paramName: "query",
                    transformResult: s,
                    showNoSuggestionNotice: !1,
                    noSuggestionNotice: "No results",
                    orientation: "bottom",
                    forceFixPosition: !1,
                    mask: !1
                }, t.prototype = {
                    initialize: function () {
                        var i, s, a = this,
                            n = "." + a.classes.suggestion,
                            r = a.classes.selected,
                            o = a.options;
                        a.element.setAttribute("autocomplete", "off"), a.noSuggestionsContainer = e('<div class="autocomplete-no-suggestion"></div>').html(this.options.noSuggestionNotice).get(0), a.suggestionsContainer = t.utils.createNode(o.containerClass), i = e(a.suggestionsContainer), o.mask && (s = e('<div class="autocomplete-mask"></div>'), s.appendTo(o.appendTo || "body")), i.appendTo(o.appendTo || "body"), "auto" !== o.width && i.css("width", o.width), i.on("mouseover.autocomplete", n, function () {
                            a.activate(e(this).data("index"))
                        }), i.on("mouseout.autocomplete", function () {
                            a.selectedIndex = -1, i.children("." + r).removeClass(r)
                        }), i.on("click.autocomplete", n, function () {
                            a.select(e(this).data("index"))
                        }), i.on("click.autocomplete", function () {
                            clearTimeout(a.blurTimeoutId)
                        }), a.fixPositionCapture = function () {
                            a.visible && a.fixPosition()
                        }, e(window).on("resize.autocomplete", a.fixPositionCapture), a.el.on("keydown.autocomplete", function (e) {
                            a.onKeyPress(e)
                        }), a.el.on("keyup.autocomplete", function (e) {
                            a.onKeyUp(e)
                        }), a.el.on("blur.autocomplete", function () {
                            a.onBlur()
                        }), a.el.on("focus.autocomplete", function () {
                            a.onFocus()
                        }), a.el.on("change.autocomplete", function (e) {
                            a.onKeyUp(e)
                        }), a.el.on("input.autocomplete", function (e) {
                            a.onKeyUp(e)
                        })
                    }, onFocus: function () {
                        var e = this;
                        e.disabled || (e.fixPosition(), e.el.val().length >= e.options.minChars && e.onValueChange())
                    }, onBlur: function () {
                        var t = this,
                            i = t.options,
                            s = t.el.val(),
                            a = t.getQuery(s);
                        t.blurTimeoutId = setTimeout(function () {
                            t.hide(), t.selection && t.currentValue !== a && (i.onInvalidateSelection || e.noop).call(t.element)
                        }, 200)
                    }, abortAjax: function () {
                        var e = this;
                        e.currentRequest && (e.currentRequest.abort(), e.currentRequest = null)
                    }, setOptions: function (t) {
                        var i = this,
                            s = e.extend({}, i.options, t);
                        i.isLocal = Array.isArray(s.lookup), i.isLocal && (s.lookup = i.verifySuggestionsFormat(s.lookup)), s.orientation = i.validateOrientation(s.orientation, "bottom"), e(i.suggestionsContainer).css({
                            "max-height": s.maxHeight + "px",
                            width: s.width + "px",
                            "z-index": s.zIndex
                        }), this.options = s
                    }, clearCache: function () {
                        this.cachedResponse = {}, this.badQueries = []
                    }, clear: function () {
                        this.clearCache(), this.currentValue = "", this.suggestions = []
                    }, disable: function () {
                        var e = this;
                        e.disabled = !0, clearTimeout(e.onChangeTimeout), e.abortAjax()
                    }, enable: function () {
                        this.disabled = !1
                    }, fixPosition: function () {
                        var t = this,
                            i = e(t.suggestionsContainer),
                            s = i.parent().get(0);
                        if (s === document.body || t.options.forceFixPosition) {
                            var a = t.options.orientation,
                                n = i.outerHeight(),
                                r = t.el.outerHeight(),
                                o = t.el.offset(),
                                l = {
                                    top: o.top,
                                    left: o.left
                                };
                            if ("auto" === a) {
                                var d = e(window).height(),
                                    h = e(window).scrollTop(),
                                    c = -h + o.top - n,
                                    u = h + d - (o.top + r + n);
                                a = Math.max(c, u) === c ? "top" : "bottom"
                            }
                            if (l.top += "top" === a ? -n : r, s !== document.body) {
                                var p, f = i.css("opacity");
                                t.visible || i.css("opacity", 0).show(), p = i.offsetParent().offset(), l.top -= p.top, l.top += s.scrollTop, l.left -= p.left, t.visible || i.css("opacity", f).hide()
                            }
                            "auto" === t.options.width && (l.width = t.el.outerWidth() + "px"), i.css(l)
                        }
                    }, isCursorAtEnd: function () {
                        var e, t = this,
                            i = t.el.val().length,
                            s = t.element.selectionStart;
                        return "number" == typeof s ? s === i : !document.selection || (e = document.selection.createRange(), e.moveStart("character", -i), i === e.text.length)
                    }, onKeyPress: function (e) {
                        var t = this;
                        if (!t.disabled && !t.visible && e.which === o.DOWN && t.currentValue) return void t.suggest();
                        if (!t.disabled && t.visible) {
                            switch (e.which) {
                            case o.ESC:
                                t.el.val(t.currentValue), t.hide();
                                break;
                            case o.RIGHT:
                                if (t.hint && t.options.onHint && t.isCursorAtEnd()) {
                                    t.selectHint();
                                    break
                                }
                                return;
                            case o.TAB:
                                if (t.hint && t.options.onHint) return void t.selectHint();
                                if (-1 === t.selectedIndex) return void t.hide();
                                if (t.select(t.selectedIndex), !1 === t.options.tabDisabled) return;
                                break;
                            case o.RETURN:
                                if (-1 === t.selectedIndex) return void t.hide();
                                t.select(t.selectedIndex);
                                break;
                            case o.UP:
                                t.moveUp();
                                break;
                            case o.DOWN:
                                t.moveDown();
                                break;
                            default:
                                return
                            }
                            e.stopImmediatePropagation(), e.preventDefault()
                        }
                    }, onKeyUp: function (e) {
                        var t = this;
                        if (!t.disabled) {
                            switch (e.which) {
                            case o.UP:
                            case o.DOWN:
                                return
                            }
                            clearTimeout(t.onChangeTimeout), t.currentValue !== t.el.val() && (t.findBestHint(), t.options.deferRequestBy > 0 ? t.onChangeTimeout = setTimeout(function () {
                                t.onValueChange()
                            }, t.options.deferRequestBy) : t.onValueChange())
                        }
                    }, onValueChange: function () {
                        if (this.ignoreValueChange) return void(this.ignoreValueChange = !1);
                        var t = this,
                            i = t.options,
                            s = t.el.val(),
                            a = t.getQuery(s);
                        if (t.selection && t.currentValue !== a && (t.selection = null, (i.onInvalidateSelection || e.noop).call(t.element)), clearTimeout(t.onChangeTimeout), t.currentValue = s, t.selectedIndex = -1, i.triggerSelectOnValidInput && t.isExactMatch(a)) return void t.select(0);
                        a.length < i.minChars ? t.hide() : t.getSuggestions(a)
                    }, isExactMatch: function (e) {
                        var t = this.suggestions;
                        return 1 === t.length && t[0].value.toLowerCase() === e.toLowerCase()
                    }, getQuery: function (t) {
                        var i, s = this.options.delimiter;
                        return s ? (i = t.split(s), e.trim(i[i.length - 1])) : t
                    }, getSuggestionsLocal: function (t) {
                        var i, s = this,
                            a = s.options,
                            n = t.toLowerCase(),
                            r = a.lookupFilter,
                            o = parseInt(a.lookupLimit, 10);
                        return i = {
                            suggestions: e.grep(a.lookup, function (e) {
                                return r(e, t, n)
                            })
                        }, o && i.suggestions.length > o && (i.suggestions = i.suggestions.slice(0, o)), i
                    }, getSuggestions: function (t) {
                        var i, s, a, n, r = this,
                            o = r.options,
                            l = o.serviceUrl;
                        if (o.params[o.paramName] = t, !1 !== o.onSearchStart.call(r.element, o.params)) {
                            if (s = o.ignoreParams ? null : o.params, e.isFunction(o.lookup)) return void o.lookup(t, function (e) {
                                r.suggestions = e.suggestions, r.suggest(), o.onSearchComplete.call(r.element, t, e.suggestions)
                            });
                            r.isLocal ? i = r.getSuggestionsLocal(t) : (e.isFunction(l) && (l = l.call(r.element, t)), a = l + "?" + e.param(s || {}), i = r.cachedResponse[a]), i && Array.isArray(i.suggestions) ? (r.suggestions = i.suggestions, r.suggest(), o.onSearchComplete.call(r.element, t, i.suggestions)) : r.isBadQuery(t) ? o.onSearchComplete.call(r.element, t, []) : (r.abortAjax(), n = {
                                url: l,
                                data: s,
                                type: o.type,
                                dataType: o.dataType
                            }, e.extend(n, o.ajaxSettings), r.currentRequest = e.ajax(n).done(function (e) {
                                var i;
                                r.currentRequest = null, i = o.transformResult(e, t), r.processResponse(i, t, a), o.onSearchComplete.call(r.element, t, i.suggestions)
                            }).fail(function (e, i, s) {
                                o.onSearchError.call(r.element, t, e, i, s)
                            }))
                        }
                    }, isBadQuery: function (e) {
                        if (!this.options.preventBadQueries) return !1;
                        for (var t = this.badQueries, i = t.length; i--;)
                            if (0 === e.indexOf(t[i])) return !0;
                        return !1
                    }, hide: function () {
                        var t = this,
                            i = e(t.suggestionsContainer);
                        e.isFunction(t.options.onHide) && t.visible && t.options.onHide.call(t.element, i), t.visible = !1, t.selectedIndex = -1, clearTimeout(t.onChangeTimeout), e(t.suggestionsContainer).hide(), t.options.mask && e(".autocomplete-mask").hide(), t.signalHint(null)
                    }, suggest: function () {
                        if (!this.suggestions.length) return void(this.options.showNoSuggestionNotice ? this.noSuggestions() : this.hide());
                        var t, i = this,
                            s = i.options,
                            a = s.groupBy,
                            n = s.formatResult,
                            r = i.getQuery(i.currentValue),
                            o = i.classes.suggestion,
                            l = i.classes.selected,
                            d = e(i.suggestionsContainer),
                            h = e(i.noSuggestionsContainer),
                            c = s.beforeRender,
                            u = "",
                            p = function (e, i) {
                                var n = e.data[a];
                                return t === n ? "" : (t = n, s.formatGroup(e, t))
                            };
                        if (s.triggerSelectOnValidInput && i.isExactMatch(r)) return void i.select(0);
                        e.each(i.suggestions, function (e, t) {
                            a && (u += p(t, 0)), u += '<div class="' + o + '" data-index="' + e + '">' + n(t, r, e) + "</div>"
                        }), this.adjustContainerWidth(), h.detach(), d.html(u), e.isFunction(c) && c.call(i.element, d, i.suggestions), i.fixPosition(), i.options.mask && e(".autocomplete-mask").show(), d.show(), s.autoSelectFirst && (i.selectedIndex = 0, d.scrollTop(0), d.children("." + o).first().addClass(l)), i.visible = !0, i.findBestHint()
                    }, noSuggestions: function () {
                        var t = this,
                            i = t.options.beforeRender,
                            s = e(t.suggestionsContainer),
                            a = e(t.noSuggestionsContainer);
                        this.adjustContainerWidth(), a.detach(), s.empty(), s.append(a), e.isFunction(i) && i.call(t.element, s, t.suggestions), t.fixPosition(), t.options.mask && e(".autocomplete-mask").show(), s.show(), t.visible = !0
                    }, adjustContainerWidth: function () {
                        var t, i = this,
                            s = i.options,
                            a = e(i.suggestionsContainer);
                        "auto" === s.width ? (t = i.el.outerWidth(), a.css("width", t > 0 ? t : 300)) : "flex" === s.width && a.css("width", "")
                    }, findBestHint: function () {
                        var t = this,
                            i = t.el.val().toLowerCase(),
                            s = null;
                        i && (e.each(t.suggestions, function (e, t) {
                            var a = 0 === t.value.toLowerCase().indexOf(i);
                            return a && (s = t), !a
                        }), t.signalHint(s))
                    }, signalHint: function (t) {
                        var i = "",
                            s = this;
                        t && (i = s.currentValue + t.value.substr(s.currentValue.length)), s.hintValue !== i && (s.hintValue = i, s.hint = t, (this.options.onHint || e.noop)(i))
                    }, verifySuggestionsFormat: function (t) {
                        return t.length && "string" == typeof t[0] ? e.map(t, function (e) {
                            return {
                                value: e,
                                data: null
                            }
                        }) : t
                    }, validateOrientation: function (t, i) {
                        return t = e.trim(t || "").toLowerCase(), -1 === e.inArray(t, ["auto", "bottom", "top"]) && (t = i), t
                    }, processResponse: function (e, t, i) {
                        var s = this,
                            a = s.options;
                        e.suggestions = s.verifySuggestionsFormat(e.suggestions), a.noCache || (s.cachedResponse[i] = e, a.preventBadQueries && !e.suggestions.length && s.badQueries.push(t)), t === s.getQuery(s.currentValue) && (s.suggestions = e.suggestions, s.suggest())
                    }, activate: function (t) {
                        var i, s = this,
                            a = s.classes.selected,
                            n = e(s.suggestionsContainer),
                            r = n.find("." + s.classes.suggestion);
                        return n.find("." + a).removeClass(a), s.selectedIndex = t, -1 !== s.selectedIndex && r.length > s.selectedIndex ? (i = r.get(s.selectedIndex), e(i).addClass(a), i) : null
                    }, selectHint: function () {
                        var t = this,
                            i = e.inArray(t.hint, t.suggestions);
                        t.select(i)
                    }, select: function (e) {
                        var t = this;
                        t.hide(), t.onSelect(e)
                    }, moveUp: function () {
                        var t = this;
                        if (-1 !== t.selectedIndex) return 0 === t.selectedIndex ? (e(t.suggestionsContainer).children("." + t.classes.suggestion).first().removeClass(t.classes.selected), t.selectedIndex = -1, t.ignoreValueChange = !1, t.el.val(t.currentValue), void t.findBestHint()) : void t.adjustScroll(t.selectedIndex - 1)
                    }, moveDown: function () {
                        var e = this;
                        e.selectedIndex !== e.suggestions.length - 1 && e.adjustScroll(e.selectedIndex + 1)
                    }, adjustScroll: function (t) {
                        var i = this,
                            s = i.activate(t);
                        if (s) {
                            var a, n, r, o = e(s).outerHeight();
                            a = s.offsetTop, n = e(i.suggestionsContainer).scrollTop(), r = n + i.options.maxHeight - o, a < n ? e(i.suggestionsContainer).scrollTop(a) : a > r && e(i.suggestionsContainer).scrollTop(a - i.options.maxHeight + o), i.options.preserveInput || (i.ignoreValueChange = !0, i.el.val(i.getValue(i.suggestions[t].value))), i.signalHint(null)
                        }
                    }, onSelect: function (t) {
                        var i = this,
                            s = i.options.onSelect,
                            a = i.suggestions[t];
                        i.currentValue = i.getValue(a.value), i.currentValue === i.el.val() || i.options.preserveInput || i.el.val(i.currentValue), i.signalHint(null), i.suggestions = [], i.selection = a, e.isFunction(s) && s.call(i.element, a)
                    }, getValue: function (e) {
                        var t, i, s = this,
                            a = s.options.delimiter;
                        return a ? (t = s.currentValue, i = t.split(a), 1 === i.length ? e : t.substr(0, t.length - i[i.length - 1].length) + e) : e
                    }, dispose: function () {
                        var t = this;
                        t.el.off(".autocomplete").removeData("autocomplete"), e(window).off("resize.autocomplete", t.fixPositionCapture), e(t.suggestionsContainer).remove()
                    }
                }, e.fn.devbridgeAutocomplete = function (i, s) {
                    return arguments.length ? this.each(function () {
                        var a = e(this),
                            n = a.data("autocomplete");
                        "string" == typeof i ? n && "function" == typeof n[i] && n[i](s) : (n && n.dispose && n.dispose(), n = new t(this, i), a.data("autocomplete", n))
                    }) : this.first().data("autocomplete")
                }, e.fn.autocomplete || (e.fn.autocomplete = e.fn.devbridgeAutocomplete)
            }), r(function () {
                r(document).on("change", ".check-box input[type='checkbox']", function () {
                    var e = r(this).prop("checked");
                    r(this).siblings(".aunon").hide(), e ? r(this).siblings(".aunoncheckbox").show() : r(this).siblings(".aunoncheckbox2").show()
                })
            })
    },
    function (e, t) {},
    function (e, t, i) {
        "use strict";
        i(4);
        var s = i(0);
        i(5), i(7), i(9), i(11);
        var a = {
            keywordList: "",
            init: function () {
                this.loadKeywords(), this.bindEvents(), s(".header-nav").css("visibility", "visible")
            }, loadKeywords: function () {
                var e = this;
                s.ajax({
                    url: window.location.origin + "/api.php",
                    type: "POST",
                    dataType: "json",
                    data: {
                        action: "keywords"
                    },
                    success: function (t) {
                        e.keywordList = t.list.map(function (e) {
                            return {
                                value: e.post_title,
                                data: e.post_title
                            }
                        }), e.initPlugin()
                    }
                })
            }, initPlugin: function () {
                var e = this;
                s("#autocomplete").autocomplete({
                    minChars: 0,
                    mask: !0,
                    forceFixPosition: !0,
                    lookup: function (t, i) {
                        i({
                            suggestions: e.keywordList
                        })
                    }, onSelect: function (e) {
                        console.log("You selected: " + e.value + ", " + e.data), window.location.href = window.location.origin + "/search/?keyword=" + e.value
                    }
                })
            }, bindEvents: function () {
                var e = s(window).width(),
                    t = s(".mobile-menu"),
                    i = s(".header");
                s(document).on("click", "#showroom", function () {
                    window.location.href = "showroom.html"
                }), s(document).on("click", "#contactus", function () {
                    window.location.href = "contact_us.html"
                }), s(document).on("click", "#search", function () {
                    s(window).width() > 800 ? i.hasClass("searching") || (i.addClass("searching"), s("#autocomplete").trigger("focus")) : s(".pop-container").slideDown()
                }), s(document).on("click", "#closeSearchBtn", function () {
                    i.removeClass("searching")
                }), s(document).on("click", ".menu-icon", function () {
                    s(this).hasClass("open") ? t.animate({
                        left: 0
                    }, 300) : t.animate({
                        left: 0 - e
                    }, 300)
                }), s(document).on("click", function (t) {
                    var e = s(t.target),
                        i = e.closest('div[data-ui="language2"]');
                    if (i.length > 0) {
                        e.addClass("check").siblings().removeClass("check");
                        var a = i.find("#language");
                        i.hasClass("drop") ? (e.hasClass("language-item") && a.text(e.text()), i.removeClass("drop")) : i.addClass("drop")
                    } else s('div[data-ui="language"]').removeClass("drop2")
                });
                var a = !1;
                s("#autocomplete").on("focus", function () {
                    a = !0
                }), s("#autocomplete").on("blur", function () {
                    a = !1
                }), s(document).keyup(function (e) {
                    13 == e.keyCode && i.hasClass("searching") && a && (window.location.href = window.location.origin + "/search/?keyword=" + s("#autocomplete").val())
                })
            }
        };
        s(function () {
            a.init()
        })
    },
    function (e, t) {},
    function (e, t, i) {
        "use strict";
        i(6);
        var s = i(0),
            a = {
                init: function () {
                    var e = null;
                    s(document).on("mouseover", ".nav-item", function (e) {
                        var t = s(e.currentTarget);
                        if (t.attr("t_nav")) {
                            s("header").addClass("active");
                            var i = t.attr("t_nav");
                            s("#" + i).stop(!0, !0).fadeIn(300), s("#" + i).siblings().stop(!0, !0).fadeOut(300), s(".navigation-down").stop(!0, !0).fadeIn(300)
                        } else s("header2").removeClass("active"), s(".nav-down-menu").stop(!0, !0).fadeOut(), s(".navigation-down").stop(!0, !0).fadeOut()
                    }), s(document).on("mouseleave", ".nav-down-menu", function (e) {
                        s("header2").removeClass("active"), s(".nav-down-menu").stop(!0, !0).fadeOut(), s(".navigation-down").stop(!0, !0).fadeOut()
                    }), s(document).on("click", ".navigation-down", function () {
                        clearTimeout(null), clearTimeout(e), s("a[t_nav]").removeClass("drop"), s(".nav-down-menu").stop(!0, !0).fadeOut(300), s(".navigation-down").stop(!0, !0).fadeOut(300), e = setTimeout(function () {
                            s(".header").removeClass("nav-hover")
                        }, 300)
                    })
                }
            };
        s(function () {
            a.init()
        })
    },
    function (e, t) {},
    function (e, t, i) {
        "use strict";
        i(8);
        var s = i(0),
            a = {
                init: function () {
                    this.bindEvents()
                }, bindEvents: function () {
                    var e = s(".model-mesk"),
                        t = s(".model-container"),
                        i = s(".header"),
                        a = s("html");
                    s(document).on("click", "#login", function () {
                        i.removeClass("searching"), e.addClass("pop-model"), t.removeClass("success-container"), a.css({
                            overflow: "hidden"
                        })
                    }), s(document).on("click", ".close-btn", function () {
                        e.removeClass("pop-model"), a.css({
                            overflow: ""
                        })
                    }), s(document).on("click", ".link-to-forgot", function () {
                        s(".login-form").hide(), s(".success-form").hide(), t.removeClass("success-container"), s(".forgot-form").show()
                    }), s(document).on("click", ".link-to-login", function () {
                        s(".forgot-form").hide(), s(".success-form").hide(), t.removeClass("success-container"), s(".login-form").show()
                    }), s(document).on("click", ".link-to-success", function () {
                        s(".forgot-form").hide(), s(".login-form").hide(), t.addClass("success-container"), s(".success-form").show()
                    })
                }
            };
        s(function () {
            a.init()
        })
    },
    function (e, t) {},
    function (e, t, i) {
        "use strict";
        i(10);
        var s = i(0),
            a = {
                init: function () {
                    this.bindEvents()
                }, bindEvents: function () {
                    s(document).on("click", ".menu-title2", function () {
                        s(this).hasClass("current") ? (s(this).removeClass("current"), s(this).next().removeClass("active").slideUp()) : (s(".menu-title.current").removeClass("current"), s(this).addClass("current"), s(".menu-content.active").removeClass("active").slideUp(), s(this).next().addClass("active").slideDown())
                    }), s(document).on("click", ".sub-menu-title2", function () {
                        s(this).hasClass("current") ? (s(this).removeClass("current"), s(this).next().removeClass("active").slideUp()) : (s(".sub-menu-title2.current").removeClass("current"), s(this).addClass("current"), s(".sub-menu-content.active").removeClass("active").slideUp(), s(this).next().addClass("active").slideDown())
                    })
                }
            };
        s(function () {
            a.init()
        })
    },
    function (e, t) {},
    function (e, t, i) {
        "use strict";
        i(12);
        var s = i(0),
            a = {
                init: function () {
                    this.bindEvents()
                }, bindEvents: function () {
                    var e = !1;
                    s('.pop-content [name="keywords"]').on("focus", function () {
                        e = !0
                    }), s('.pop-content [name="keywords"]').on("blur", function () {
                        e = !1
                    }), s(document).keyup(function (t) {
                        13 == t.keyCode && e && (window.location.href = window.location.origin + "/search/?keyword=" + s("#mob-header-search input").val())
                    }), s(document).on("click", "#popSearch", function () {
                        window.location.href = window.location.origin + "/search/?keyword=" + s("#mob-header-search input").val()
                    }), s(document).on("click", ".close-pop-model", function () {
                        s(".pop-container").slideUp()
                    }), s("#mob-header-search").on("submit", function (e) {
                        e.preventDefault(), window.location.href = window.location.origin + "/search/?keyword=" + s("#mob-header-search input").val()
                    })
                }
            };
        s(function () {
            a.init()
        })
    },
    function (e, t) {},
    function (e, t, i) {
        "use strict";
        i(14);
        var s = i(0);
        s(document).on("click", ".footer_main-block>.footer_nav-title2", function () {
            s(window).width() <= 800 && (s(this).hasClass("current") ? (s(this).removeClass("current"), s(this).next().removeClass("active").slideUp()) : (s(".footer_main-block>.footer_nav-title.current").removeClass("current"), s(this).addClass("current"), s(".footer_main-block>.footer_nav.active").removeClass("active").slideUp(), s(this).next().addClass("active").slideDown()))
        })
    },
    function (e, t) {},
    function (e, t) {}, ,
    function (e, t, i) {
        "use strict";
        var s, a, n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
        ! function (r, o) {
            "object" == n(t) && void 0 !== e ? e.exports = o() : (s = o, void 0 !== (a = "function" == typeof s ? s.call(t, i, t, e) : s) && (e.exports = a))
        }(0, function () {
            function e(e) {
                return null !== e && "object" == (void 0 === e ? "undefined" : n(e)) && "constructor" in e && e.constructor === Object
            }

            function t(i, s) {
                void 0 === i && (i = {}), void 0 === s && (s = {}), Object.keys(s).forEach(function (a) {
                    void 0 === i[a] ? i[a] = s[a] : e(s[a]) && e(i[a]) && Object.keys(s[a]).length > 0 && t(i[a], s[a])
                })
            }

            function i(e, t) {
                var i = [],
                    s = 0;
                if (e && !t && e instanceof v) return e;
                if (e)
                    if ("string" == typeof e) {
                        var a, n, r = e.trim();
                        if (r.indexOf("<") >= 0 && r.indexOf(">") >= 0) {
                            var o = "div";
                            for (0 === r.indexOf("<li") && (o = "ul"), 0 === r.indexOf("<tr") && (o = "tbody"), 0 !== r.indexOf("<td") && 0 !== r.indexOf("<th") || (o = "tr"), 0 === r.indexOf("<tbody") && (o = "table"), 0 === r.indexOf("<option") && (o = "select"), (n = u.createElement(o)).innerHTML = r, s = 0; s < n.childNodes.length; s += 1) i.push(n.childNodes[s])
                        } else
                            for (a = t || "#" !== e[0] || e.match(/[ .<>:~]/) ? (t || u).querySelectorAll(e.trim()) : [u.getElementById(e.trim().split("#")[1])], s = 0; s < a.length; s += 1) a[s] && i.push(a[s])
                    } else if (e.nodeType || e === f || e === u) i.push(e);
                else if (e.length > 0 && e[0].nodeType)
                    for (s = 0; s < e.length; s += 1) i.push(e[s]);
                return new v(i)
            }

            function s(e) {
                for (var t = [], i = 0; i < e.length; i += 1) - 1 === t.indexOf(e[i]) && t.push(e[i]);
                return t
            }

            function a(e) {
                var t = this.touchEventsData,
                    s = this.params,
                    a = this.touches;
                if (!this.animating || !s.preventInteractionOnTransition) {
                    var n = e;
                    n.originalEvent && (n = n.originalEvent);
                    var r = i(n.target);
                    if (("wrapper" !== s.touchEventsTarget || r.closest(this.wrapperEl).length) && (t.isTouchEvent = "touchstart" === n.type, (t.isTouchEvent || !("which" in n) || 3 !== n.which) && !(!t.isTouchEvent && "button" in n && n.button > 0 || t.isTouched && t.isMoved)))
                        if (s.noSwiping && r.closest(s.noSwipingSelector ? s.noSwipingSelector : "." + s.noSwipingClass)[0]) this.allowClick = !0;
                        else if (!s.swipeHandler || r.closest(s.swipeHandler)[0]) {
                        a.currentX = "touchstart" === n.type ? n.targetTouches[0].pageX : n.pageX, a.currentY = "touchstart" === n.type ? n.targetTouches[0].pageY : n.pageY;
                        var o = a.currentX,
                            l = a.currentY,
                            d = s.edgeSwipeDetection || s.iOSEdgeSwipeDetection,
                            h = s.edgeSwipeThreshold || s.iOSEdgeSwipeThreshold;
                        if (!d || !(o <= h || o >= f.screen.width - h)) {
                            if (g.extend(t, {
                                isTouched: !0,
                                isMoved: !1,
                                allowTouchCallbacks: !0,
                                isScrolling: void 0,
                                startMoving: void 0
                            }), a.startX = o, a.startY = l, t.touchStartTime = g.now(), this.allowClick = !0, this.updateSize(), this.swipeDirection = void 0, s.threshold > 0 && (t.allowThresholdMove = !1), "touchstart" !== n.type) {
                                var c = !0;
                                r.is(t.formElements) && (c = !1), u.activeElement && i(u.activeElement).is(t.formElements) && u.activeElement !== r[0] && u.activeElement.blur();
                                var p = c && this.allowTouchMove && s.touchStartPreventDefault;
                                (s.touchStartForcePreventDefault || p) && n.preventDefault()
                            }
                            this.emit("touchStart", n)
                        }
                    }
                }
            }

            function r(e) {
                var t = this.touchEventsData,
                    s = this.params,
                    a = this.touches,
                    n = this.rtlTranslate,
                    r = e;
                if (r.originalEvent && (r = r.originalEvent), t.isTouched) {
                    if (!t.isTouchEvent || "touchmove" === r.type) {
                        var o = "touchmove" === r.type && r.targetTouches && (r.targetTouches[0] || r.changedTouches[0]),
                            l = "touchmove" === r.type ? o.pageX : r.pageX,
                            d = "touchmove" === r.type ? o.pageY : r.pageY;
                        if (r.preventedByNestedSwiper) return a.startX = l, void(a.startY = d);
                        if (!this.allowTouchMove) return this.allowClick = !1, void(t.isTouched && (g.extend(a, {
                            startX: l,
                            startY: d,
                            currentX: l,
                            currentY: d
                        }), t.touchStartTime = g.now()));
                        if (t.isTouchEvent && s.touchReleaseOnEdges && !s.loop)
                            if (this.isVertical()) {
                                if (d < a.startY && this.translate <= this.maxTranslate() || d > a.startY && this.translate >= this.minTranslate()) return t.isTouched = !1, void(t.isMoved = !1)
                            } else if (l < a.startX && this.translate <= this.maxTranslate() || l > a.startX && this.translate >= this.minTranslate()) return;
                        if (t.isTouchEvent && u.activeElement && r.target === u.activeElement && i(r.target).is(t.formElements)) return t.isMoved = !0, void(this.allowClick = !1);
                        if (t.allowTouchCallbacks && this.emit("touchMove", r), !(r.targetTouches && r.targetTouches.length > 1)) {
                            a.currentX = l, a.currentY = d;
                            var h = a.currentX - a.startX,
                                c = a.currentY - a.startY;
                            if (!(this.params.threshold && Math.sqrt(Math.pow(h, 2) + Math.pow(c, 2)) < this.params.threshold)) {
                                var p;
                                if (void 0 === t.isScrolling && (this.isHorizontal() && a.currentY === a.startY || this.isVertical() && a.currentX === a.startX ? t.isScrolling = !1 : h * h + c * c >= 25 && (p = 180 * Math.atan2(Math.abs(c), Math.abs(h)) / Math.PI, t.isScrolling = this.isHorizontal() ? p > s.touchAngle : 90 - p > s.touchAngle)), t.isScrolling && this.emit("touchMoveOpposite", r), void 0 === t.startMoving && (a.currentX === a.startX && a.currentY === a.startY || (t.startMoving = !0)), t.isScrolling) t.isTouched = !1;
                                else if (t.startMoving) {
                                    this.allowClick = !1, !s.cssMode && r.cancelable && r.preventDefault(), s.touchMoveStopPropagation && !s.nested && r.stopPropagation(), t.isMoved || (s.loop && this.loopFix(), t.startTranslate = this.getTranslate(), this.setTransition(0), this.animating && this.$wrapperEl.trigger("webkitTransitionEnd transitionend"), t.allowMomentumBounce = !1, !s.grabCursor || !0 !== this.allowSlideNext && !0 !== this.allowSlidePrev || this.setGrabCursor(!0), this.emit("sliderFirstMove", r)), this.emit("sliderMove", r), t.isMoved = !0;
                                    var f = this.isHorizontal() ? h : c;
                                    a.diff = f, f *= s.touchRatio, n && (f = -f), this.swipeDirection = f > 0 ? "prev" : "next", t.currentTranslate = f + t.startTranslate;
                                    var v = !0,
                                        m = s.resistanceRatio;
                                    if (s.touchReleaseOnEdges && (m = 0), f > 0 && t.currentTranslate > this.minTranslate() ? (v = !1, s.resistance && (t.currentTranslate = this.minTranslate() - 1 + Math.pow(-this.minTranslate() + t.startTranslate + f, m))) : f < 0 && t.currentTranslate < this.maxTranslate() && (v = !1, s.resistance && (t.currentTranslate = this.maxTranslate() + 1 - Math.pow(this.maxTranslate() - t.startTranslate - f, m))), v && (r.preventedByNestedSwiper = !0), !this.allowSlideNext && "next" === this.swipeDirection && t.currentTranslate < t.startTranslate && (t.currentTranslate = t.startTranslate), !this.allowSlidePrev && "prev" === this.swipeDirection && t.currentTranslate > t.startTranslate && (t.currentTranslate = t.startTranslate), s.threshold > 0) {
                                        if (!(Math.abs(f) > s.threshold || t.allowThresholdMove)) return void(t.currentTranslate = t.startTranslate);
                                        if (!t.allowThresholdMove) return t.allowThresholdMove = !0, a.startX = a.currentX, a.startY = a.currentY, t.currentTranslate = t.startTranslate, void(a.diff = this.isHorizontal() ? a.currentX - a.startX : a.currentY - a.startY)
                                    }
                                    s.followFinger && !s.cssMode && ((s.freeMode || s.watchSlidesProgress || s.watchSlidesVisibility) && (this.updateActiveIndex(), this.updateSlidesClasses()), s.freeMode && (0 === t.velocities.length && t.velocities.push({
                                        position: a[this.isHorizontal() ? "startX" : "startY"],
                                        time: t.touchStartTime
                                    }), t.velocities.push({
                                        position: a[this.isHorizontal() ? "currentX" : "currentY"],
                                        time: g.now()
                                    })), this.updateProgress(t.currentTranslate), this.setTranslate(t.currentTranslate))
                                }
                            }
                        }
                    }
                } else t.startMoving && t.isScrolling && this.emit("touchMoveOpposite", r)
            }

            function o(e) {
                var t = this,
                    i = t.touchEventsData,
                    s = t.params,
                    a = t.touches,
                    n = t.rtlTranslate,
                    r = t.$wrapperEl,
                    o = t.slidesGrid,
                    l = t.snapGrid,
                    d = e;
                if (d.originalEvent && (d = d.originalEvent), i.allowTouchCallbacks && t.emit("touchEnd", d), i.allowTouchCallbacks = !1, !i.isTouched) return i.isMoved && s.grabCursor && t.setGrabCursor(!1), i.isMoved = !1, void(i.startMoving = !1);
                s.grabCursor && i.isMoved && i.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
                var h, c = g.now(),
                    u = c - i.touchStartTime;
                if (t.allowClick && (t.updateClickedSlide(d), t.emit("tap click", d), u < 300 && c - i.lastClickTime < 300 && t.emit("doubleTap doubleClick", d)), i.lastClickTime = g.now(), g.nextTick(function () {
                    t.destroyed || (t.allowClick = !0)
                }), !i.isTouched || !i.isMoved || !t.swipeDirection || 0 === a.diff || i.currentTranslate === i.startTranslate) return i.isTouched = !1, i.isMoved = !1, void(i.startMoving = !1);
                if (i.isTouched = !1, i.isMoved = !1, i.startMoving = !1, h = s.followFinger ? n ? t.translate : -t.translate : -i.currentTranslate, !s.cssMode)
                    if (s.freeMode) {
                        if (h < -t.minTranslate()) return void t.slideTo(t.activeIndex);
                        if (h > -t.maxTranslate()) return void(t.slides.length < l.length ? t.slideTo(l.length - 1) : t.slideTo(t.slides.length - 1));
                        if (s.freeModeMomentum) {
                            if (i.velocities.length > 1) {
                                var p = i.velocities.pop(),
                                    f = i.velocities.pop(),
                                    v = p.position - f.position,
                                    m = p.time - f.time;
                                t.velocity = v / m, t.velocity /= 2, Math.abs(t.velocity) < s.freeModeMinimumVelocity && (t.velocity = 0), (m > 150 || g.now() - p.time > 300) && (t.velocity = 0)
                            } else t.velocity = 0;
                            t.velocity *= s.freeModeMomentumVelocityRatio, i.velocities.length = 0;
                            var b = 1e3 * s.freeModeMomentumRatio,
                                w = t.velocity * b,
                                y = t.translate + w;
                            n && (y = -y);
                            var x, C, T = !1,
                                E = 20 * Math.abs(t.velocity) * s.freeModeMomentumBounceRatio;
                            if (y < t.maxTranslate()) s.freeModeMomentumBounce ? (y + t.maxTranslate() < -E && (y = t.maxTranslate() - E), x = t.maxTranslate(), T = !0, i.allowMomentumBounce = !0) : y = t.maxTranslate(), s.loop && s.centeredSlides && (C = !0);
                            else if (y > t.minTranslate()) s.freeModeMomentumBounce ? (y - t.minTranslate() > E && (y = t.minTranslate() + E), x = t.minTranslate(), T = !0, i.allowMomentumBounce = !0) : y = t.minTranslate(), s.loop && s.centeredSlides && (C = !0);
                            else if (s.freeModeSticky) {
                                for (var S, M = 0; M < l.length; M += 1)
                                    if (l[M] > -y) {
                                        S = M;
                                        break
                                    }
                                y = -(y = Math.abs(l[S] - y) < Math.abs(l[S - 1] - y) || "next" === t.swipeDirection ? l[S] : l[S - 1])
                            }
                            if (C && t.once("transitionEnd", function () {
                                t.loopFix()
                            }), 0 !== t.velocity) {
                                if (b = n ? Math.abs((-y - t.translate) / t.velocity) : Math.abs((y - t.translate) / t.velocity), s.freeModeSticky) {
                                    var k = Math.abs((n ? -y : y) - t.translate),
                                        P = t.slidesSizesGrid[t.activeIndex];
                                    b = k < P ? s.speed : k < 2 * P ? 1.5 * s.speed : 2.5 * s.speed
                                }
                            } else if (s.freeModeSticky) return void t.slideToClosest();
                            s.freeModeMomentumBounce && T ? (t.updateProgress(x), t.setTransition(b), t.setTranslate(y), t.transitionStart(!0, t.swipeDirection), t.animating = !0, r.transitionEnd(function () {
                                t && !t.destroyed && i.allowMomentumBounce && (t.emit("momentumBounce"), t.setTransition(s.speed), setTimeout(function () {
                                    t.setTranslate(x), r.transitionEnd(function () {
                                        t && !t.destroyed && t.transitionEnd()
                                    })
                                }, 0))
                            })) : t.velocity ? (t.updateProgress(y), t.setTransition(b), t.setTranslate(y), t.transitionStart(!0, t.swipeDirection), t.animating || (t.animating = !0, r.transitionEnd(function () {
                                t && !t.destroyed && t.transitionEnd()
                            }))) : t.updateProgress(y), t.updateActiveIndex(), t.updateSlidesClasses()
                        } else if (s.freeModeSticky) return void t.slideToClosest();
                        (!s.freeModeMomentum || u >= s.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses())
                    } else {
                        for (var z = 0, L = t.slidesSizesGrid[0], $ = 0; $ < o.length; $ += $ < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup) {
                            var I = $ < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;
                            void 0 !== o[$ + I] ? h >= o[$] && h < o[$ + I] && (z = $, L = o[$ + I] - o[$]) : h >= o[$] && (z = $, L = o[o.length - 1] - o[o.length - 2])
                        }
                        var O = (h - o[z]) / L,
                            D = z < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;
                        if (u > s.longSwipesMs) {
                            if (!s.longSwipes) return void t.slideTo(t.activeIndex);
                            "next" === t.swipeDirection && (O >= s.longSwipesRatio ? t.slideTo(z + D) : t.slideTo(z)), "prev" === t.swipeDirection && (O > 1 - s.longSwipesRatio ? t.slideTo(z + D) : t.slideTo(z))
                        } else {
                            if (!s.shortSwipes) return void t.slideTo(t.activeIndex);
                            !t.navigation || d.target !== t.navigation.nextEl && d.target !== t.navigation.prevEl ? ("next" === t.swipeDirection && t.slideTo(z + D), "prev" === t.swipeDirection && t.slideTo(z)) : d.target === t.navigation.nextEl ? t.slideTo(z + D) : t.slideTo(z)
                        }
                    }
            }

            function l() {
                var e = this.params,
                    t = this.el;
                if (!t || 0 !== t.offsetWidth) {
                    e.breakpoints && this.setBreakpoint();
                    var i = this.allowSlideNext,
                        s = this.allowSlidePrev,
                        a = this.snapGrid;
                    this.allowSlideNext = !0, this.allowSlidePrev = !0, this.updateSize(), this.updateSlides(), this.updateSlidesClasses(), ("auto" === e.slidesPerView || e.slidesPerView > 1) && this.isEnd && !this.isBeginning && !this.params.centeredSlides ? this.slideTo(this.slides.length - 1, 0, !1, !0) : this.slideTo(this.activeIndex, 0, !1, !0), this.autoplay && this.autoplay.running && this.autoplay.paused && this.autoplay.run(), this.allowSlidePrev = s, this.allowSlideNext = i, this.params.watchOverflow && a !== this.snapGrid && this.checkOverflow()
                }
            }

            function d(e) {
                this.allowClick || (this.params.preventClicks && e.preventDefault(), this.params.preventClicksPropagation && this.animating && (e.stopPropagation(), e.stopImmediatePropagation()))
            }

            function h() {
                var e = this.wrapperEl,
                    t = this.rtlTranslate;
                this.previousTranslate = this.translate, this.isHorizontal() ? this.translate = t ? e.scrollWidth - e.offsetWidth - e.scrollLeft : -e.scrollLeft : this.translate = -e.scrollTop, -0 === this.translate && (this.translate = 0), this.updateActiveIndex(), this.updateSlidesClasses();
                var i = this.maxTranslate() - this.minTranslate();
                (0 === i ? 0 : (this.translate - this.minTranslate()) / i) !== this.progress && this.updateProgress(t ? -this.translate : this.translate), this.emit("setTranslate", this.translate, !1)
            }

            function c() {}
            var u = "undefined" != typeof document ? document : {},
                p = {
                    body: {},
                    addEventListener: function () {}, removeEventListener: function () {}, activeElement: {
                        blur: function () {}, nodeName: ""
                    }, querySelector: function () {
                        return null
                    }, querySelectorAll: function () {
                        return []
                    }, getElementById: function () {
                        return null
                    }, createEvent: function () {
                        return {
                            initEvent: function () {}
                        }
                    }, createElement: function () {
                        return {
                            children: [],
                            childNodes: [],
                            style: {},
                            setAttribute: function () {}, getElementsByTagName: function () {
                                return []
                            }
                        }
                    }, createElementNS: function () {
                        return {}
                    }, importNode: function () {
                        return null
                    }, location: {
                        hash: "",
                        host: "",
                        hostname: "",
                        href: "",
                        origin: "",
                        pathname: "",
                        protocol: "",
                        search: ""
                    }
                };
            t(u, p);
            var f = "undefined" != typeof window ? window : {};
            t(f, {
                document: p,
                navigator: {
                    userAgent: ""
                },
                location: {
                    hash: "",
                    host: "",
                    hostname: "",
                    href: "",
                    origin: "",
                    pathname: "",
                    protocol: "",
                    search: ""
                },
                history: {
                    replaceState: function () {}, pushState: function () {}, go: function () {}, back: function () {}
                },
                CustomEvent: function () {
                    return this
                }, addEventListener: function () {}, removeEventListener: function () {}, getComputedStyle: function () {
                    return {
                        getPropertyValue: function () {
                            return ""
                        }
                    }
                }, Image: function () {}, Date: function () {}, screen: {}, setTimeout: function () {}, clearTimeout: function () {}, matchMedia: function () {
                    return {}
                }
            });
            var v = function (e) {
                for (var t = 0; t < e.length; t += 1) this[t] = e[t];
                return this.length = e.length, this
            };
            i.fn = v.prototype, i.Class = v, i.Dom7 = v;
            var m = {
                addClass: function (e) {
                    if (void 0 === e) return this;
                    for (var t = e.split(" "), i = 0; i < t.length; i += 1)
                        for (var s = 0; s < this.length; s += 1) void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.add(t[i]);
                    return this
                }, removeClass: function (e) {
                    for (var t = e.split(" "), i = 0; i < t.length; i += 1)
                        for (var s = 0; s < this.length; s += 1) void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.remove(t[i]);
                    return this
                }, hasClass: function (e) {
                    return !!this[0] && this[0].classList.contains(e)
                }, toggleClass: function (e) {
                    for (var t = e.split(" "), i = 0; i < t.length; i += 1)
                        for (var s = 0; s < this.length; s += 1) void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.toggle(t[i]);
                    return this
                }, attr: function (e, t) {
                    var i = arguments;
                    if (1 === arguments.length && "string" == typeof e) return this[0] ? this[0].getAttribute(e) : void 0;
                    for (var s = 0; s < this.length; s += 1)
                        if (2 === i.length) this[s].setAttribute(e, t);
                        else
                            for (var a in e) this[s][a] = e[a], this[s].setAttribute(a, e[a]);
                    return this
                }, removeAttr: function (e) {
                    for (var t = 0; t < this.length; t += 1) this[t].removeAttribute(e);
                    return this
                }, data: function (e, t) {
                    var i;
                    if (void 0 !== t) {
                        for (var s = 0; s < this.length; s += 1)(i = this[s]).dom7ElementDataStorage || (i.dom7ElementDataStorage = {}), i.dom7ElementDataStorage[e] = t;
                        return this
                    }
                    if (i = this[0]) {
                        if (i.dom7ElementDataStorage && e in i.dom7ElementDataStorage) return i.dom7ElementDataStorage[e];
                        return i.getAttribute("data-" + e) || void 0
                    }
                }, transform: function (e) {
                    for (var t = 0; t < this.length; t += 1) {
                        var i = this[t].style;
                        i.webkitTransform = e, i.transform = e
                    }
                    return this
                }, transition: function (e) {
                    "string" != typeof e && (e += "ms");
                    for (var t = 0; t < this.length; t += 1) {
                        var i = this[t].style;
                        i.webkitTransitionDuration = e, i.transitionDuration = e
                    }
                    return this
                }, on: function () {
                    function e(e) {
                        var t = e.target;
                        if (t) {
                            var s = e.target.dom7EventData || [];
                            if (s.indexOf(e) < 0 && s.unshift(e), i(t).is(o)) l.apply(t, s);
                            else
                                for (var a = i(t).parents(), n = 0; n < a.length; n += 1) i(a[n]).is(o) && l.apply(a[n], s)
                        }
                    }

                    function t(e) {
                        var t = e && e.target && e.target.dom7EventData || [];
                        t.indexOf(e) < 0 && t.unshift(e), l.apply(this, t)
                    }
                    for (var s, a = [], n = arguments.length; n--;) a[n] = arguments[n];
                    var r = a[0],
                        o = a[1],
                        l = a[2],
                        d = a[3];
                    "function" == typeof a[1] && (r = (s = a)[0], l = s[1], d = s[2], o = void 0), d || (d = !1);
                    for (var h, c = r.split(" "), u = 0; u < this.length; u += 1) {
                        var p = this[u];
                        if (o)
                            for (h = 0; h < c.length; h += 1) {
                                var f = c[h];
                                p.dom7LiveListeners || (p.dom7LiveListeners = {}), p.dom7LiveListeners[f] || (p.dom7LiveListeners[f] = []), p.dom7LiveListeners[f].push({
                                    listener: l,
                                    proxyListener: e
                                }), p.addEventListener(f, e, d)
                            } else
                                for (h = 0; h < c.length; h += 1) {
                                    var v = c[h];
                                    p.dom7Listeners || (p.dom7Listeners = {}), p.dom7Listeners[v] || (p.dom7Listeners[v] = []), p.dom7Listeners[v].push({
                                        listener: l,
                                        proxyListener: t
                                    }), p.addEventListener(v, t, d)
                                }
                    }
                    return this
                }, off: function () {
                    for (var e, t = [], i = arguments.length; i--;) t[i] = arguments[i];
                    var s = t[0],
                        a = t[1],
                        n = t[2],
                        r = t[3];
                    "function" == typeof t[1] && (s = (e = t)[0], n = e[1], r = e[2], a = void 0), r || (r = !1);
                    for (var o = s.split(" "), l = 0; l < o.length; l += 1)
                        for (var d = o[l], h = 0; h < this.length; h += 1) {
                            var c = this[h],
                                u = void 0;
                            if (!a && c.dom7Listeners ? u = c.dom7Listeners[d] : a && c.dom7LiveListeners && (u = c.dom7LiveListeners[d]), u && u.length)
                                for (var p = u.length - 1; p >= 0; p -= 1) {
                                    var f = u[p];
                                    n && f.listener === n || n && f.listener && f.listener.dom7proxy && f.listener.dom7proxy === n ? (c.removeEventListener(d, f.proxyListener, r), u.splice(p, 1)) : n || (c.removeEventListener(d, f.proxyListener, r), u.splice(p, 1))
                                }
                        }
                    return this
                }, trigger: function () {
                    for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
                    for (var i = e[0].split(" "), s = e[1], a = 0; a < i.length; a += 1)
                        for (var n = i[a], r = 0; r < this.length; r += 1) {
                            var o = this[r],
                                l = void 0;
                            try {
                                l = new f.CustomEvent(n, {
                                    detail: s,
                                    bubbles: !0,
                                    cancelable: !0
                                })
                            } catch (e) {
                                (l = u.createEvent("Event")).initEvent(n, !0, !0), l.detail = s
                            }
                            o.dom7EventData = e.filter(function (e, t) {
                                return t > 0
                            }), o.dispatchEvent(l), o.dom7EventData = [], delete o.dom7EventData
                        }
                    return this
                }, transitionEnd: function (e) {
                    function t(n) {
                        if (n.target === this)
                            for (e.call(this, n), i = 0; i < s.length; i += 1) a.off(s[i], t)
                    }
                    var i, s = ["webkitTransitionEnd", "transitionend"],
                        a = this;
                    if (e)
                        for (i = 0; i < s.length; i += 1) a.on(s[i], t);
                    return this
                }, outerWidth: function (e) {
                    if (this.length > 0) {
                        if (e) {
                            var t = this.styles();
                            return this[0].offsetWidth + parseFloat(t.getPropertyValue("margin-right")) + parseFloat(t.getPropertyValue("margin-left"))
                        }
                        return this[0].offsetWidth
                    }
                    return null
                }, outerHeight: function (e) {
                    if (this.length > 0) {
                        if (e) {
                            var t = this.styles();
                            return this[0].offsetHeight + parseFloat(t.getPropertyValue("margin-top")) + parseFloat(t.getPropertyValue("margin-bottom"))
                        }
                        return this[0].offsetHeight
                    }
                    return null
                }, offset: function () {
                    if (this.length > 0) {
                        var e = this[0],
                            t = e.getBoundingClientRect(),
                            i = u.body,
                            s = e.clientTop || i.clientTop || 0,
                            a = e.clientLeft || i.clientLeft || 0,
                            n = e === f ? f.scrollY : e.scrollTop,
                            r = e === f ? f.scrollX : e.scrollLeft;
                        return {
                            top: t.top + n - s,
                            left: t.left + r - a
                        }
                    }
                    return null
                }, css: function (e, t) {
                    var i;
                    if (1 === arguments.length) {
                        if ("string" != typeof e) {
                            for (i = 0; i < this.length; i += 1)
                                for (var s in e) this[i].style[s] = e[s];
                            return this
                        }
                        if (this[0]) return f.getComputedStyle(this[0], null).getPropertyValue(e)
                    }
                    if (2 === arguments.length && "string" == typeof e) {
                        for (i = 0; i < this.length; i += 1) this[i].style[e] = t;
                        return this
                    }
                    return this
                }, each: function (e) {
                    if (!e) return this;
                    for (var t = 0; t < this.length; t += 1)
                        if (!1 === e.call(this[t], t, this[t])) return this;
                    return this
                }, html: function (e) {
                    if (void 0 === e) return this[0] ? this[0].innerHTML : void 0;
                    for (var t = 0; t < this.length; t += 1) this[t].innerHTML = e;
                    return this
                }, text: function (e) {
                    if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;
                    for (var t = 0; t < this.length; t += 1) this[t].textContent = e;
                    return this
                }, is: function (e) {
                    var t, s, a = this[0];
                    if (!a || void 0 === e) return !1;
                    if ("string" == typeof e) {
                        if (a.matches) return a.matches(e);
                        if (a.webkitMatchesSelector) return a.webkitMatchesSelector(e);
                        if (a.msMatchesSelector) return a.msMatchesSelector(e);
                        for (t = i(e), s = 0; s < t.length; s += 1)
                            if (t[s] === a) return !0;
                        return !1
                    }
                    if (e === u) return a === u;
                    if (e === f) return a === f;
                    if (e.nodeType || e instanceof v) {
                        for (t = e.nodeType ? [e] : e, s = 0; s < t.length; s += 1)
                            if (t[s] === a) return !0;
                        return !1
                    }
                    return !1
                }, index: function () {
                    var e, t = this[0];
                    if (t) {
                        for (e = 0; null !== (t = t.previousSibling);) 1 === t.nodeType && (e += 1);
                        return e
                    }
                }, eq: function (e) {
                    if (void 0 === e) return this;
                    var t, i = this.length;
                    return new v(e > i - 1 ? [] : e < 0 ? (t = i + e) < 0 ? [] : [this[t]] : [this[e]])
                }, append: function () {
                    for (var e, t = [], i = arguments.length; i--;) t[i] = arguments[i];
                    for (var s = 0; s < t.length; s += 1) {
                        e = t[s];
                        for (var a = 0; a < this.length; a += 1)
                            if ("string" == typeof e) {
                                var n = u.createElement("div");
                                for (n.innerHTML = e; n.firstChild;) this[a].appendChild(n.firstChild)
                            } else if (e instanceof v)
                            for (var r = 0; r < e.length; r += 1) this[a].appendChild(e[r]);
                        else this[a].appendChild(e)
                    }
                    return this
                }, prepend: function (e) {
                    var t, i;
                    for (t = 0; t < this.length; t += 1)
                        if ("string" == typeof e) {
                            var s = u.createElement("div");
                            for (s.innerHTML = e, i = s.childNodes.length - 1; i >= 0; i -= 1) this[t].insertBefore(s.childNodes[i], this[t].childNodes[0])
                        } else if (e instanceof v)
                        for (i = 0; i < e.length; i += 1) this[t].insertBefore(e[i], this[t].childNodes[0]);
                    else this[t].insertBefore(e, this[t].childNodes[0]);
                    return this
                }, next: function (e) {
                    return new v(this.length > 0 ? e ? this[0].nextElementSibling && i(this[0].nextElementSibling).is(e) ? [this[0].nextElementSibling] : [] : this[0].nextElementSibling ? [this[0].nextElementSibling] : [] : [])
                }, nextAll: function (e) {
                    var t = [],
                        s = this[0];
                    if (!s) return new v([]);
                    for (; s.nextElementSibling;) {
                        var a = s.nextElementSibling;
                        e ? i(a).is(e) && t.push(a) : t.push(a), s = a
                    }
                    return new v(t)
                }, prev: function (e) {
                    if (this.length > 0) {
                        var t = this[0];
                        return new v(e ? t.previousElementSibling && i(t.previousElementSibling).is(e) ? [t.previousElementSibling] : [] : t.previousElementSibling ? [t.previousElementSibling] : [])
                    }
                    return new v([])
                }, prevAll: function (e) {
                    var t = [],
                        s = this[0];
                    if (!s) return new v([]);
                    for (; s.previousElementSibling;) {
                        var a = s.previousElementSibling;
                        e ? i(a).is(e) && t.push(a) : t.push(a), s = a
                    }
                    return new v(t)
                }, parent: function (e) {
                    for (var t = [], a = 0; a < this.length; a += 1) null !== this[a].parentNode && (e ? i(this[a].parentNode).is(e) && t.push(this[a].parentNode) : t.push(this[a].parentNode));
                    return i(s(t))
                }, parents: function (e) {
                    for (var t = [], a = 0; a < this.length; a += 1)
                        for (var n = this[a].parentNode; n;) e ? i(n).is(e) && t.push(n) : t.push(n), n = n.parentNode;
                    return i(s(t))
                }, closest: function (e) {
                    var t = this;
                    return void 0 === e ? new v([]) : (t.is(e) || (t = t.parents(e).eq(0)), t)
                }, find: function (e) {
                    for (var t = [], i = 0; i < this.length; i += 1)
                        for (var s = this[i].querySelectorAll(e), a = 0; a < s.length; a += 1) t.push(s[a]);
                    return new v(t)
                }, children: function (e) {
                    for (var t = [], a = 0; a < this.length; a += 1)
                        for (var n = this[a].childNodes, r = 0; r < n.length; r += 1) e ? 1 === n[r].nodeType && i(n[r]).is(e) && t.push(n[r]) : 1 === n[r].nodeType && t.push(n[r]);
                    return new v(s(t))
                }, filter: function (e) {
                    for (var t = [], i = 0; i < this.length; i += 1) e.call(this[i], i, this[i]) && t.push(this[i]);
                    return new v(t)
                }, remove: function () {
                    for (var e = 0; e < this.length; e += 1) this[e].parentNode && this[e].parentNode.removeChild(this[e]);
                    return this
                }, add: function () {
                    for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
                    var s, a, n = this;
                    for (s = 0; s < e.length; s += 1) {
                        var r = i(e[s]);
                        for (a = 0; a < r.length; a += 1) n[n.length] = r[a], n.length += 1
                    }
                    return n
                }, styles: function () {
                    return this[0] ? f.getComputedStyle(this[0], null) : {}
                }
            };
            Object.keys(m).forEach(function (e) {
                i.fn[e] = i.fn[e] || m[e]
            });
            var g = {
                    deleteProps: function (e) {
                        var t = e;
                        Object.keys(t).forEach(function (e) {
                            try {
                                t[e] = null
                            } catch (e) {}
                            try {
                                delete t[e]
                            } catch (e) {}
                        })
                    }, nextTick: function (e, t) {
                        return void 0 === t && (t = 0), setTimeout(e, t)
                    }, now: function () {
                        return Date.now()
                    }, getTranslate: function (e, t) {
                        var i, s, a;
                        void 0 === t && (t = "x");
                        var n = f.getComputedStyle(e, null);
                        return f.WebKitCSSMatrix ? ((s = n.transform || n.webkitTransform).split(",").length > 6 && (s = s.split(", ").map(function (e) {
                            return e.replace(",", ".")
                        }).join(", ")), a = new f.WebKitCSSMatrix("none" === s ? "" : s)) : i = (a = n.MozTransform || n.OTransform || n.MsTransform || n.msTransform || n.transform || n.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === t && (s = f.WebKitCSSMatrix ? a.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])), "y" === t && (s = f.WebKitCSSMatrix ? a.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])), s || 0
                    }, parseUrlQuery: function (e) {
                        var t, i, s, a, n = {},
                            r = e || f.location.href;
                        if ("string" == typeof r && r.length)
                            for (a = (i = (r = r.indexOf("?") > -1 ? r.replace(/\S*\?/, "") : "").split("&").filter(function (e) {
                                return "" !== e
                            })).length, t = 0; t < a; t += 1) s = i[t].replace(/#\S+/g, "").split("="), n[decodeURIComponent(s[0])] = void 0 === s[1] ? void 0 : decodeURIComponent(s[1]) || "";
                        return n
                    }, isObject: function (e) {
                        return "object" == (void 0 === e ? "undefined" : n(e)) && null !== e && e.constructor && e.constructor === Object
                    }, extend: function () {
                        for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
                        for (var i = Object(e[0]), s = 1; s < e.length; s += 1) {
                            var a = e[s];
                            if (null != a)
                                for (var n = Object.keys(Object(a)), r = 0, o = n.length; r < o; r += 1) {
                                    var l = n[r],
                                        d = Object.getOwnPropertyDescriptor(a, l);
                                    void 0 !== d && d.enumerable && (g.isObject(i[l]) && g.isObject(a[l]) ? g.extend(i[l], a[l]) : !g.isObject(i[l]) && g.isObject(a[l]) ? (i[l] = {}, g.extend(i[l], a[l])) : i[l] = a[l])
                                }
                        }
                        return i
                    }
                },
                b = {
                    touch: !!("ontouchstart" in f || f.DocumentTouch && u instanceof f.DocumentTouch),
                    pointerEvents: !!f.PointerEvent && "maxTouchPoints" in f.navigator && f.navigator.maxTouchPoints >= 0,
                    observer: "MutationObserver" in f || "WebkitMutationObserver" in f,
                    passiveListener: function () {
                        var e = !1;
                        try {
                            var t = Object.defineProperty({}, "passive", {
                                get: function () {
                                    e = !0
                                }
                            });
                            f.addEventListener("testPassiveListener", null, t)
                        } catch (e) {}
                        return e
                    }(),
                    gestures: "ongesturestart" in f
                },
                w = function (e) {
                    void 0 === e && (e = {});
                    var t = this;
                    t.params = e, t.eventsListeners = {}, t.params && t.params.on && Object.keys(t.params.on).forEach(function (e) {
                        t.on(e, t.params.on[e])
                    })
                },
                y = {
                    components: {
                        configurable: !0
                    }
                };
            w.prototype.on = function (e, t, i) {
                var s = this;
                if ("function" != typeof t) return s;
                var a = i ? "unshift" : "push";
                return e.split(" ").forEach(function (e) {
                    s.eventsListeners[e] || (s.eventsListeners[e] = []), s.eventsListeners[e][a](t)
                }), s
            }, w.prototype.once = function (e, t, i) {
                function s() {
                    for (var i = [], n = arguments.length; n--;) i[n] = arguments[n];
                    a.off(e, s), s.f7proxy && delete s.f7proxy, t.apply(a, i)
                }
                var a = this;
                return "function" != typeof t ? a : (s.f7proxy = t, a.on(e, s, i))
            }, w.prototype.off = function (e, t) {
                var i = this;
                return i.eventsListeners ? (e.split(" ").forEach(function (e) {
                    void 0 === t ? i.eventsListeners[e] = [] : i.eventsListeners[e] && i.eventsListeners[e].length && i.eventsListeners[e].forEach(function (s, a) {
                        (s === t || s.f7proxy && s.f7proxy === t) && i.eventsListeners[e].splice(a, 1)
                    })
                }), i) : i
            }, w.prototype.emit = function () {
                for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
                var i, s, a, n = this;
                return n.eventsListeners ? ("string" == typeof e[0] || Array.isArray(e[0]) ? (i = e[0], s = e.slice(1, e.length), a = n) : (i = e[0].events, s = e[0].data, a = e[0].context || n), (Array.isArray(i) ? i : i.split(" ")).forEach(function (e) {
                    if (n.eventsListeners && n.eventsListeners[e]) {
                        var t = [];
                        n.eventsListeners[e].forEach(function (e) {
                            t.push(e)
                        }), t.forEach(function (e) {
                            e.apply(a, s)
                        })
                    }
                }), n) : n
            }, w.prototype.useModulesParams = function (e) {
                var t = this;
                t.modules && Object.keys(t.modules).forEach(function (i) {
                    var s = t.modules[i];
                    s.params && g.extend(e, s.params)
                })
            }, w.prototype.useModules = function (e) {
                void 0 === e && (e = {});
                var t = this;
                t.modules && Object.keys(t.modules).forEach(function (i) {
                    var s = t.modules[i],
                        a = e[i] || {};
                    s.instance && Object.keys(s.instance).forEach(function (e) {
                        var i = s.instance[e];
                        t[e] = "function" == typeof i ? i.bind(t) : i
                    }), s.on && t.on && Object.keys(s.on).forEach(function (e) {
                        t.on(e, s.on[e])
                    }), s.create && s.create.bind(t)(a)
                })
            }, y.components.set = function (e) {
                this.use && this.use(e)
            }, w.installModule = function (e) {
                for (var t = [], i = arguments.length - 1; i-- > 0;) t[i] = arguments[i + 1];
                var s = this;
                s.prototype.modules || (s.prototype.modules = {});
                var a = e.name || Object.keys(s.prototype.modules).length + "_" + g.now();
                return s.prototype.modules[a] = e, e.proto && Object.keys(e.proto).forEach(function (t) {
                    s.prototype[t] = e.proto[t]
                }), e.static && Object.keys(e.static).forEach(function (t) {
                    s[t] = e.static[t]
                }), e.install && e.install.apply(s, t), s
            }, w.use = function (e) {
                for (var t = [], i = arguments.length - 1; i-- > 0;) t[i] = arguments[i + 1];
                var s = this;
                return Array.isArray(e) ? (e.forEach(function (e) {
                    return s.installModule(e)
                }), s) : s.installModule.apply(s, [e].concat(t))
            }, Object.defineProperties(w, y);
            var x, C, T, E, S, M, k, P, z, L, $, I, O, D, A, H = {
                    updateSize: function () {
                        var e, t, i = this.$el;
                        e = void 0 !== this.params.width ? this.params.width : i[0].clientWidth, t = void 0 !== this.params.height ? this.params.height : i[0].clientHeight, 0 === e && this.isHorizontal() || 0 === t && this.isVertical() || (e = e - parseInt(i.css("padding-left"), 10) - parseInt(i.css("padding-right"), 10), t = t - parseInt(i.css("padding-top"), 10) - parseInt(i.css("padding-bottom"), 10), g.extend(this, {
                            width: e,
                            height: t,
                            size: this.isHorizontal() ? e : t
                        }))
                    }, updateSlides: function () {
                        function e(e) {
                            return !t.cssMode || e !== l.length - 1
                        }
                        var t = this.params,
                            i = this.$wrapperEl,
                            s = this.size,
                            a = this.rtlTranslate,
                            n = this.wrongRTL,
                            r = this.virtual && t.virtual.enabled,
                            o = r ? this.virtual.slides.length : this.slides.length,
                            l = i.children("." + this.params.slideClass),
                            d = r ? this.virtual.slides.length : l.length,
                            h = [],
                            c = [],
                            u = [],
                            p = t.slidesOffsetBefore;
                        "function" == typeof p && (p = t.slidesOffsetBefore.call(this));
                        var v = t.slidesOffsetAfter;
                        "function" == typeof v && (v = t.slidesOffsetAfter.call(this));
                        var m = this.snapGrid.length,
                            b = this.snapGrid.length,
                            w = t.spaceBetween,
                            y = -p,
                            x = 0,
                            C = 0;
                        if (void 0 !== s) {
                            var T, E;
                            "string" == typeof w && w.indexOf("%") >= 0 && (w = parseFloat(w.replace("%", "")) / 100 * s), this.virtualSize = -w, a ? l.css({
                                marginLeft: "",
                                marginTop: ""
                            }) : l.css({
                                marginRight: "",
                                marginBottom: ""
                            }), t.slidesPerColumn > 1 && (T = Math.floor(d / t.slidesPerColumn) === d / this.params.slidesPerColumn ? d : Math.ceil(d / t.slidesPerColumn) * t.slidesPerColumn, "auto" !== t.slidesPerView && "row" === t.slidesPerColumnFill && (T = Math.max(T, t.slidesPerView * t.slidesPerColumn)));
                            for (var S, M = t.slidesPerColumn, k = T / M, P = Math.floor(d / t.slidesPerColumn), z = 0; z < d; z += 1) {
                                E = 0;
                                var L = l.eq(z);
                                if (t.slidesPerColumn > 1) {
                                    var $ = void 0,
                                        I = void 0,
                                        O = void 0;
                                    if ("row" === t.slidesPerColumnFill && t.slidesPerGroup > 1) {
                                        var D = Math.floor(z / (t.slidesPerGroup * t.slidesPerColumn)),
                                            A = z - t.slidesPerColumn * t.slidesPerGroup * D,
                                            H = 0 === D ? t.slidesPerGroup : Math.min(Math.ceil((d - D * M * t.slidesPerGroup) / M), t.slidesPerGroup);
                                        $ = (I = A - (O = Math.floor(A / H)) * H + D * t.slidesPerGroup) + O * T / M, L.css({
                                            "-webkit-box-ordinal-group": $,
                                            "-moz-box-ordinal-group": $,
                                            "-ms-flex-order": $,
                                            "-webkit-order": $,
                                            order: $
                                        })
                                    } else "column" === t.slidesPerColumnFill ? (O = z - (I = Math.floor(z / M)) * M, (I > P || I === P && O === M - 1) && (O += 1) >= M && (O = 0, I += 1)) : I = z - (O = Math.floor(z / k)) * k;
                                    L.css("margin-" + (this.isHorizontal() ? "top" : "left"), 0 !== O && t.spaceBetween && t.spaceBetween + "px")
                                }
                                if ("none" !== L.css("display")) {
                                    if ("auto" === t.slidesPerView) {
                                        var B = f.getComputedStyle(L[0], null),
                                            N = L[0].style.transform,
                                            G = L[0].style.webkitTransform;
                                        if (N && (L[0].style.transform = "none"), G && (L[0].style.webkitTransform = "none"), t.roundLengths) E = this.isHorizontal() ? L.outerWidth(!0) : L.outerHeight(!0);
                                        else if (this.isHorizontal()) {
                                            var V = parseFloat(B.getPropertyValue("width")),
                                                F = parseFloat(B.getPropertyValue("padding-left")),
                                                R = parseFloat(B.getPropertyValue("padding-right")),
                                                X = parseFloat(B.getPropertyValue("margin-left")),
                                                Y = parseFloat(B.getPropertyValue("margin-right")),
                                                W = B.getPropertyValue("box-sizing");
                                            E = W && "border-box" === W ? V + X + Y : V + F + R + X + Y
                                        } else {
                                            var q = parseFloat(B.getPropertyValue("height")),
                                                j = parseFloat(B.getPropertyValue("padding-top")),
                                                U = parseFloat(B.getPropertyValue("padding-bottom")),
                                                _ = parseFloat(B.getPropertyValue("margin-top")),
                                                K = parseFloat(B.getPropertyValue("margin-bottom")),
                                                Q = B.getPropertyValue("box-sizing");
                                            E = Q && "border-box" === Q ? q + _ + K : q + j + U + _ + K
                                        }
                                        N && (L[0].style.transform = N), G && (L[0].style.webkitTransform = G), t.roundLengths && (E = Math.floor(E))
                                    } else E = (s - (t.slidesPerView - 1) * w) / t.slidesPerView, t.roundLengths && (E = Math.floor(E)), l[z] && (this.isHorizontal() ? l[z].style.width = E + "px" : l[z].style.height = E + "px");
                                    l[z] && (l[z].swiperSlideSize = E), u.push(E), t.centeredSlides ? (y = y + E / 2 + x / 2 + w, 0 === x && 0 !== z && (y = y - s / 2 - w), 0 === z && (y = y - s / 2 - w), Math.abs(y) < .001 && (y = 0), t.roundLengths && (y = Math.floor(y)), C % t.slidesPerGroup == 0 && h.push(y), c.push(y)) : (t.roundLengths && (y = Math.floor(y)), (C - Math.min(this.params.slidesPerGroupSkip, C)) % this.params.slidesPerGroup == 0 && h.push(y), c.push(y), y = y + E + w), this.virtualSize += E + w, x = E, C += 1
                                }
                            }
                            if (this.virtualSize = Math.max(this.virtualSize, s) + v, a && n && ("slide" === t.effect || "coverflow" === t.effect) && i.css({
                                width: this.virtualSize + t.spaceBetween + "px"
                            }), t.setWrapperSize && (this.isHorizontal() ? i.css({
                                width: this.virtualSize + t.spaceBetween + "px"
                            }) : i.css({
                                height: this.virtualSize + t.spaceBetween + "px"
                            })), t.slidesPerColumn > 1 && (this.virtualSize = (E + t.spaceBetween) * T, this.virtualSize = Math.ceil(this.virtualSize / t.slidesPerColumn) - t.spaceBetween, this.isHorizontal() ? i.css({
                                width: this.virtualSize + t.spaceBetween + "px"
                            }) : i.css({
                                height: this.virtualSize + t.spaceBetween + "px"
                            }), t.centeredSlides)) {
                                S = [];
                                for (var J = 0; J < h.length; J += 1) {
                                    var Z = h[J];
                                    t.roundLengths && (Z = Math.floor(Z)), h[J] < this.virtualSize + h[0] && S.push(Z)
                                }
                                h = S
                            }
                            if (!t.centeredSlides) {
                                S = [];
                                for (var ee = 0; ee < h.length; ee += 1) {
                                    var te = h[ee];
                                    t.roundLengths && (te = Math.floor(te)), h[ee] <= this.virtualSize - s && S.push(te)
                                }
                                h = S, Math.floor(this.virtualSize - s) - Math.floor(h[h.length - 1]) > 1 && h.push(this.virtualSize - s)
                            }
                            if (0 === h.length && (h = [0]), 0 !== t.spaceBetween && (this.isHorizontal() ? a ? l.filter(e).css({
                                marginLeft: w + "px"
                            }) : l.filter(e).css({
                                marginRight: w + "px"
                            }) : l.filter(e).css({
                                marginBottom: w + "px"
                            })), t.centeredSlides && t.centeredSlidesBounds) {
                                var ie = 0;
                                u.forEach(function (e) {
                                    ie += e + (t.spaceBetween ? t.spaceBetween : 0)
                                });
                                var se = (ie -= t.spaceBetween) - s;
                                h = h.map(function (e) {
                                    return e < 0 ? -p : e > se ? se + v : e
                                })
                            }
                            if (t.centerInsufficientSlides) {
                                var ae = 0;
                                if (u.forEach(function (e) {
                                    ae += e + (t.spaceBetween ? t.spaceBetween : 0)
                                }), (ae -= t.spaceBetween) < s) {
                                    var ne = (s - ae) / 2;
                                    h.forEach(function (e, t) {
                                        h[t] = e - ne
                                    }), c.forEach(function (e, t) {
                                        c[t] = e + ne
                                    })
                                }
                            }
                            g.extend(this, {
                                slides: l,
                                snapGrid: h,
                                slidesGrid: c,
                                slidesSizesGrid: u
                            }), d !== o && this.emit("slidesLengthChange"), h.length !== m && (this.params.watchOverflow && this.checkOverflow(), this.emit("snapGridLengthChange")), c.length !== b && this.emit("slidesGridLengthChange"), (t.watchSlidesProgress || t.watchSlidesVisibility) && this.updateSlidesOffset()
                        }
                    }, updateAutoHeight: function (e) {
                        var t, i = [],
                            s = 0;
                        if ("number" == typeof e ? this.setTransition(e) : !0 === e && this.setTransition(this.params.speed), "auto" !== this.params.slidesPerView && this.params.slidesPerView > 1)
                            if (this.params.centeredSlides) this.visibleSlides.each(function (e, t) {
                                i.push(t)
                            });
                            else
                                for (t = 0; t < Math.ceil(this.params.slidesPerView); t += 1) {
                                    var a = this.activeIndex + t;
                                    if (a > this.slides.length) break;
                                    i.push(this.slides.eq(a)[0])
                                } else i.push(this.slides.eq(this.activeIndex)[0]);
                        for (t = 0; t < i.length; t += 1)
                            if (void 0 !== i[t]) {
                                var n = i[t].offsetHeight;
                                s = n > s ? n : s
                            }
                        s && this.$wrapperEl.css("height", s + "px")
                    }, updateSlidesOffset: function () {
                        for (var e = this.slides, t = 0; t < e.length; t += 1) e[t].swiperSlideOffset = this.isHorizontal() ? e[t].offsetLeft : e[t].offsetTop
                    }, updateSlidesProgress: function (e) {
                        void 0 === e && (e = this && this.translate || 0);
                        var t = this.params,
                            s = this.slides,
                            a = this.rtlTranslate;
                        if (0 !== s.length) {
                            void 0 === s[0].swiperSlideOffset && this.updateSlidesOffset();
                            var n = -e;
                            a && (n = e), s.removeClass(t.slideVisibleClass), this.visibleSlidesIndexes = [], this.visibleSlides = [];
                            for (var r = 0; r < s.length; r += 1) {
                                var o = s[r],
                                    l = (n + (t.centeredSlides ? this.minTranslate() : 0) - o.swiperSlideOffset) / (o.swiperSlideSize + t.spaceBetween);
                                if (t.watchSlidesVisibility || t.centeredSlides && t.autoHeight) {
                                    var d = -(n - o.swiperSlideOffset),
                                        h = d + this.slidesSizesGrid[r];
                                    (d >= 0 && d < this.size - 1 || h > 1 && h <= this.size || d <= 0 && h >= this.size) && (this.visibleSlides.push(o), this.visibleSlidesIndexes.push(r), s.eq(r).addClass(t.slideVisibleClass))
                                }
                                o.progress = a ? -l : l
                            }
                            this.visibleSlides = i(this.visibleSlides)
                        }
                    }, updateProgress: function (e) {
                        if (void 0 === e) {
                            var t = this.rtlTranslate ? -1 : 1;
                            e = this && this.translate && this.translate * t || 0
                        }
                        var i = this.params,
                            s = this.maxTranslate() - this.minTranslate(),
                            a = this.progress,
                            n = this.isBeginning,
                            r = this.isEnd,
                            o = n,
                            l = r;
                        0 === s ? (a = 0, n = !0, r = !0) : (n = (a = (e - this.minTranslate()) / s) <= 0, r = a >= 1), g.extend(this, {
                            progress: a,
                            isBeginning: n,
                            isEnd: r
                        }), (i.watchSlidesProgress || i.watchSlidesVisibility || i.centeredSlides && i.autoHeight) && this.updateSlidesProgress(e), n && !o && this.emit("reachBeginning toEdge"), r && !l && this.emit("reachEnd toEdge"), (o && !n || l && !r) && this.emit("fromEdge"), this.emit("progress", a)
                    }, updateSlidesClasses: function () {
                        var e, t = this.slides,
                            i = this.params,
                            s = this.$wrapperEl,
                            a = this.activeIndex,
                            n = this.realIndex,
                            r = this.virtual && i.virtual.enabled;
                        t.removeClass(i.slideActiveClass + " " + i.slideNextClass + " " + i.slidePrevClass + " " + i.slideDuplicateActiveClass + " " + i.slideDuplicateNextClass + " " + i.slideDuplicatePrevClass), (e = r ? this.$wrapperEl.find("." + i.slideClass + '[data-swiper-slide-index="' + a + '"]') : t.eq(a)).addClass(i.slideActiveClass), i.loop && (e.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + n + '"]').addClass(i.slideDuplicateActiveClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + n + '"]').addClass(i.slideDuplicateActiveClass));
                        var o = e.nextAll("." + i.slideClass).eq(0).addClass(i.slideNextClass);
                        i.loop && 0 === o.length && (o = t.eq(0)).addClass(i.slideNextClass);
                        var l = e.prevAll("." + i.slideClass).eq(0).addClass(i.slidePrevClass);
                        i.loop && 0 === l.length && (l = t.eq(-1)).addClass(i.slidePrevClass), i.loop && (o.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + o.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicateNextClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + o.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicateNextClass), l.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + l.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicatePrevClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + l.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicatePrevClass))
                    }, updateActiveIndex: function (e) {
                        var t, i = this.rtlTranslate ? this.translate : -this.translate,
                            s = this.slidesGrid,
                            a = this.snapGrid,
                            n = this.params,
                            r = this.activeIndex,
                            o = this.realIndex,
                            l = this.snapIndex,
                            d = e;
                        if (void 0 === d) {
                            for (var h = 0; h < s.length; h += 1) void 0 !== s[h + 1] ? i >= s[h] && i < s[h + 1] - (s[h + 1] - s[h]) / 2 ? d = h : i >= s[h] && i < s[h + 1] && (d = h + 1) : i >= s[h] && (d = h);
                            n.normalizeSlideIndex && (d < 0 || void 0 === d) && (d = 0)
                        }
                        if (a.indexOf(i) >= 0) t = a.indexOf(i);
                        else {
                            var c = Math.min(n.slidesPerGroupSkip, d);
                            t = c + Math.floor((d - c) / n.slidesPerGroup)
                        } if (t >= a.length && (t = a.length - 1), d !== r) {
                            var u = parseInt(this.slides.eq(d).attr("data-swiper-slide-index") || d, 10);
                            g.extend(this, {
                                snapIndex: t,
                                realIndex: u,
                                previousIndex: r,
                                activeIndex: d
                            }), this.emit("activeIndexChange"), this.emit("snapIndexChange"), o !== u && this.emit("realIndexChange"), (this.initialized || this.params.runCallbacksOnInit) && this.emit("slideChange")
                        } else t !== l && (this.snapIndex = t, this.emit("snapIndexChange"))
                    }, updateClickedSlide: function (e) {
                        var t = this.params,
                            s = i(e.target).closest("." + t.slideClass)[0],
                            a = !1;
                        if (s)
                            for (var n = 0; n < this.slides.length; n += 1) this.slides[n] === s && (a = !0);
                        if (!s || !a) return this.clickedSlide = void 0, void(this.clickedIndex = void 0);
                        this.clickedSlide = s, this.virtual && this.params.virtual.enabled ? this.clickedIndex = parseInt(i(s).attr("data-swiper-slide-index"), 10) : this.clickedIndex = i(s).index(), t.slideToClickedSlide && void 0 !== this.clickedIndex && this.clickedIndex !== this.activeIndex && this.slideToClickedSlide()
                    }
                },
                B = {
                    getTranslate: function (e) {
                        void 0 === e && (e = this.isHorizontal() ? "x" : "y");
                        var t = this.params,
                            i = this.rtlTranslate,
                            s = this.translate,
                            a = this.$wrapperEl;
                        if (t.virtualTranslate) return i ? -s : s;
                        if (t.cssMode) return s;
                        var n = g.getTranslate(a[0], e);
                        return i && (n = -n), n || 0
                    }, setTranslate: function (e, t) {
                        var i = this.rtlTranslate,
                            s = this.params,
                            a = this.$wrapperEl,
                            n = this.wrapperEl,
                            r = this.progress,
                            o = 0,
                            l = 0;
                        this.isHorizontal() ? o = i ? -e : e : l = e, s.roundLengths && (o = Math.floor(o), l = Math.floor(l)), s.cssMode ? n[this.isHorizontal() ? "scrollLeft" : "scrollTop"] = this.isHorizontal() ? -o : -l : s.virtualTranslate || a.transform("translate3d(" + o + "px, " + l + "px, 0px)"), this.previousTranslate = this.translate, this.translate = this.isHorizontal() ? o : l;
                        var d = this.maxTranslate() - this.minTranslate();
                        (0 === d ? 0 : (e - this.minTranslate()) / d) !== r && this.updateProgress(e), this.emit("setTranslate", this.translate, t)
                    }, minTranslate: function () {
                        return -this.snapGrid[0]
                    }, maxTranslate: function () {
                        return -this.snapGrid[this.snapGrid.length - 1]
                    }, translateTo: function (e, t, i, s, a) {
                        var n;
                        void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0), void 0 === s && (s = !0);
                        var r = this,
                            o = r.params,
                            l = r.wrapperEl;
                        if (r.animating && o.preventInteractionOnTransition) return !1;
                        var d, h = r.minTranslate(),
                            c = r.maxTranslate();
                        if (d = s && e > h ? h : s && e < c ? c : e, r.updateProgress(d), o.cssMode) {
                            var u = r.isHorizontal();
                            return 0 === t ? l[u ? "scrollLeft" : "scrollTop"] = -d : l.scrollTo ? l.scrollTo(((n = {})[u ? "left" : "top"] = -d, n.behavior = "smooth", n)) : l[u ? "scrollLeft" : "scrollTop"] = -d, !0
                        }
                        return 0 === t ? (r.setTransition(0), r.setTranslate(d), i && (r.emit("beforeTransitionStart", t, a), r.emit("transitionEnd"))) : (r.setTransition(t), r.setTranslate(d), i && (r.emit("beforeTransitionStart", t, a), r.emit("transitionStart")), r.animating || (r.animating = !0, r.onTranslateToWrapperTransitionEnd || (r.onTranslateToWrapperTransitionEnd = function (e) {
                            r && !r.destroyed && e.target === this && (r.$wrapperEl[0].removeEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].removeEventListener("webkitTransitionEnd", r.onTranslateToWrapperTransitionEnd), r.onTranslateToWrapperTransitionEnd = null, delete r.onTranslateToWrapperTransitionEnd, i && r.emit("transitionEnd"))
                        }), r.$wrapperEl[0].addEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].addEventListener("webkitTransitionEnd", r.onTranslateToWrapperTransitionEnd))), !0
                    }
                },
                N = {
                    setTransition: function (e, t) {
                        this.params.cssMode || this.$wrapperEl.transition(e), this.emit("setTransition", e, t)
                    }, transitionStart: function (e, t) {
                        void 0 === e && (e = !0);
                        var i = this.activeIndex,
                            s = this.params,
                            a = this.previousIndex;
                        if (!s.cssMode) {
                            s.autoHeight && this.updateAutoHeight();
                            var n = t;
                            if (n || (n = i > a ? "next" : i < a ? "prev" : "reset"), this.emit("transitionStart"), e && i !== a) {
                                if ("reset" === n) return void this.emit("slideResetTransitionStart");
                                this.emit("slideChangeTransitionStart"), "next" === n ? this.emit("slideNextTransitionStart") : this.emit("slidePrevTransitionStart")
                            }
                        }
                    }, transitionEnd: function (e, t) {
                        void 0 === e && (e = !0);
                        var i = this.activeIndex,
                            s = this.previousIndex,
                            a = this.params;
                        if (this.animating = !1, !a.cssMode) {
                            this.setTransition(0);
                            var n = t;
                            if (n || (n = i > s ? "next" : i < s ? "prev" : "reset"), this.emit("transitionEnd"), e && i !== s) {
                                if ("reset" === n) return void this.emit("slideResetTransitionEnd");
                                this.emit("slideChangeTransitionEnd"), "next" === n ? this.emit("slideNextTransitionEnd") : this.emit("slidePrevTransitionEnd")
                            }
                        }
                    }
                },
                G = {
                    slideTo: function (e, t, i, s) {
                        var a;
                        void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0);
                        var n = this,
                            r = e;
                        r < 0 && (r = 0);
                        var o = n.params,
                            l = n.snapGrid,
                            d = n.slidesGrid,
                            h = n.previousIndex,
                            c = n.activeIndex,
                            u = n.rtlTranslate,
                            p = n.wrapperEl;
                        if (n.animating && o.preventInteractionOnTransition) return !1;
                        var f = Math.min(n.params.slidesPerGroupSkip, r),
                            v = f + Math.floor((r - f) / n.params.slidesPerGroup);
                        v >= l.length && (v = l.length - 1), (c || o.initialSlide || 0) === (h || 0) && i && n.emit("beforeSlideChangeStart");
                        var m, g = -l[v];
                        if (n.updateProgress(g), o.normalizeSlideIndex)
                            for (var b = 0; b < d.length; b += 1) - Math.floor(100 * g) >= Math.floor(100 * d[b]) && (r = b);
                        if (n.initialized && r !== c) {
                            if (!n.allowSlideNext && g < n.translate && g < n.minTranslate()) return !1;
                            if (!n.allowSlidePrev && g > n.translate && g > n.maxTranslate() && (c || 0) !== r) return !1
                        }
                        if (m = r > c ? "next" : r < c ? "prev" : "reset", u && -g === n.translate || !u && g === n.translate) return n.updateActiveIndex(r), o.autoHeight && n.updateAutoHeight(), n.updateSlidesClasses(), "slide" !== o.effect && n.setTranslate(g), "reset" !== m && (n.transitionStart(i, m), n.transitionEnd(i, m)), !1;
                        if (o.cssMode) {
                            var w = n.isHorizontal(),
                                y = -g;
                            return u && (y = p.scrollWidth - p.offsetWidth - y), 0 === t ? p[w ? "scrollLeft" : "scrollTop"] = y : p.scrollTo ? p.scrollTo(((a = {})[w ? "left" : "top"] = y, a.behavior = "smooth", a)) : p[w ? "scrollLeft" : "scrollTop"] = y, !0
                        }
                        return 0 === t ? (n.setTransition(0), n.setTranslate(g), n.updateActiveIndex(r), n.updateSlidesClasses(), n.emit("beforeTransitionStart", t, s), n.transitionStart(i, m), n.transitionEnd(i, m)) : (n.setTransition(t), n.setTranslate(g), n.updateActiveIndex(r), n.updateSlidesClasses(), n.emit("beforeTransitionStart", t, s), n.transitionStart(i, m), n.animating || (n.animating = !0, n.onSlideToWrapperTransitionEnd || (n.onSlideToWrapperTransitionEnd = function (e) {
                            n && !n.destroyed && e.target === this && (n.$wrapperEl[0].removeEventListener("transitionend", n.onSlideToWrapperTransitionEnd), n.$wrapperEl[0].removeEventListener("webkitTransitionEnd", n.onSlideToWrapperTransitionEnd), n.onSlideToWrapperTransitionEnd = null, delete n.onSlideToWrapperTransitionEnd, n.transitionEnd(i, m))
                        }), n.$wrapperEl[0].addEventListener("transitionend", n.onSlideToWrapperTransitionEnd), n.$wrapperEl[0].addEventListener("webkitTransitionEnd", n.onSlideToWrapperTransitionEnd))), !0
                    }, slideToLoop: function (e, t, i, s) {
                        void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0);
                        var a = e;
                        return this.params.loop && (a += this.loopedSlides), this.slideTo(a, t, i, s)
                    }, slideNext: function (e, t, i) {
                        void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                        var s = this.params,
                            a = this.animating,
                            n = this.activeIndex < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup;
                        if (s.loop) {
                            if (a) return !1;
                            this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft
                        }
                        return this.slideTo(this.activeIndex + n, e, t, i)
                    }, slidePrev: function (e, t, i) {
                        function s(e) {
                            return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e)
                        }
                        void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                        var a = this.params,
                            n = this.animating,
                            r = this.snapGrid,
                            o = this.slidesGrid,
                            l = this.rtlTranslate;
                        if (a.loop) {
                            if (n) return !1;
                            this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft
                        }
                        var d, h = s(l ? this.translate : -this.translate),
                            c = r.map(function (e) {
                                return s(e)
                            }),
                            u = (o.map(function (e) {
                                return s(e)
                            }), r[c.indexOf(h)], r[c.indexOf(h) - 1]);
                        return void 0 === u && a.cssMode && r.forEach(function (e) {
                            !u && h >= e && (u = e)
                        }), void 0 !== u && (d = o.indexOf(u)) < 0 && (d = this.activeIndex - 1), this.slideTo(d, e, t, i)
                    }, slideReset: function (e, t, i) {
                        return void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), this.slideTo(this.activeIndex, e, t, i)
                    }, slideToClosest: function (e, t, i, s) {
                        void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), void 0 === s && (s = .5);
                        var a = this.activeIndex,
                            n = Math.min(this.params.slidesPerGroupSkip, a),
                            r = n + Math.floor((a - n) / this.params.slidesPerGroup),
                            o = this.rtlTranslate ? this.translate : -this.translate;
                        if (o >= this.snapGrid[r]) {
                            var l = this.snapGrid[r];
                            o - l > (this.snapGrid[r + 1] - l) * s && (a += this.params.slidesPerGroup)
                        } else {
                            var d = this.snapGrid[r - 1];
                            o - d <= (this.snapGrid[r] - d) * s && (a -= this.params.slidesPerGroup)
                        }
                        return a = Math.max(a, 0), a = Math.min(a, this.slidesGrid.length - 1), this.slideTo(a, e, t, i)
                    }, slideToClickedSlide: function () {
                        var e, t = this,
                            s = t.params,
                            a = t.$wrapperEl,
                            n = "auto" === s.slidesPerView ? t.slidesPerViewDynamic() : s.slidesPerView,
                            r = t.clickedIndex;
                        if (s.loop) {
                            if (t.animating) return;
                            e = parseInt(i(t.clickedSlide).attr("data-swiper-slide-index"), 10), s.centeredSlides ? r < t.loopedSlides - n / 2 || r > t.slides.length - t.loopedSlides + n / 2 ? (t.loopFix(), r = a.children("." + s.slideClass + '[data-swiper-slide-index="' + e + '"]:not(.' + s.slideDuplicateClass + ")").eq(0).index(), g.nextTick(function () {
                                t.slideTo(r)
                            })) : t.slideTo(r) : r > t.slides.length - n ? (t.loopFix(), r = a.children("." + s.slideClass + '[data-swiper-slide-index="' + e + '"]:not(.' + s.slideDuplicateClass + ")").eq(0).index(), g.nextTick(function () {
                                t.slideTo(r)
                            })) : t.slideTo(r)
                        } else t.slideTo(r)
                    }
                },
                V = {
                    loopCreate: function () {
                        var e = this,
                            t = e.params,
                            s = e.$wrapperEl;
                        s.children("." + t.slideClass + "." + t.slideDuplicateClass).remove();
                        var a = s.children("." + t.slideClass);
                        if (t.loopFillGroupWithBlank) {
                            var n = t.slidesPerGroup - a.length % t.slidesPerGroup;
                            if (n !== t.slidesPerGroup) {
                                for (var r = 0; r < n; r += 1) {
                                    var o = i(u.createElement("div")).addClass(t.slideClass + " " + t.slideBlankClass);
                                    s.append(o)
                                }
                                a = s.children("." + t.slideClass)
                            }
                        }
                        "auto" !== t.slidesPerView || t.loopedSlides || (t.loopedSlides = a.length), e.loopedSlides = Math.ceil(parseFloat(t.loopedSlides || t.slidesPerView, 10)), e.loopedSlides += t.loopAdditionalSlides, e.loopedSlides > a.length && (e.loopedSlides = a.length);
                        var l = [],
                            d = [];
                        a.each(function (t, s) {
                            var n = i(s);
                            t < e.loopedSlides && d.push(s), t < a.length && t >= a.length - e.loopedSlides && l.push(s), n.attr("data-swiper-slide-index", t)
                        });
                        for (var h = 0; h < d.length; h += 1) s.append(i(d[h].cloneNode(!0)).addClass(t.slideDuplicateClass));
                        for (var c = l.length - 1; c >= 0; c -= 1) s.prepend(i(l[c].cloneNode(!0)).addClass(t.slideDuplicateClass))
                    }, loopFix: function () {
                        this.emit("beforeLoopFix");
                        var e, t = this.activeIndex,
                            i = this.slides,
                            s = this.loopedSlides,
                            a = this.allowSlidePrev,
                            n = this.allowSlideNext,
                            r = this.snapGrid,
                            o = this.rtlTranslate;
                        this.allowSlidePrev = !0, this.allowSlideNext = !0;
                        var l = -r[t] - this.getTranslate();
                        t < s ? (e = i.length - 3 * s + t, e += s, this.slideTo(e, 0, !1, !0) && 0 !== l && this.setTranslate((o ? -this.translate : this.translate) - l)) : t >= i.length - s && (e = -i.length + t + s, e += s, this.slideTo(e, 0, !1, !0) && 0 !== l && this.setTranslate((o ? -this.translate : this.translate) - l)), this.allowSlidePrev = a, this.allowSlideNext = n, this.emit("loopFix")
                    }, loopDestroy: function () {
                        var e = this.$wrapperEl,
                            t = this.params,
                            i = this.slides;
                        e.children("." + t.slideClass + "." + t.slideDuplicateClass + ",." + t.slideClass + "." + t.slideBlankClass).remove(), i.removeAttr("data-swiper-slide-index")
                    }
                },
                F = {
                    setGrabCursor: function (e) {
                        if (!(b.touch || !this.params.simulateTouch || this.params.watchOverflow && this.isLocked || this.params.cssMode)) {
                            var t = this.el;
                            t.style.cursor = "move", t.style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", t.style.cursor = e ? "-moz-grabbin" : "-moz-grab", t.style.cursor = e ? "grabbing" : "grab"
                        }
                    }, unsetGrabCursor: function () {
                        b.touch || this.params.watchOverflow && this.isLocked || this.params.cssMode || (this.el.style.cursor = "")
                    }
                },
                R = {
                    appendSlide: function (e) {
                        var t = this.$wrapperEl,
                            i = this.params;
                        if (i.loop && this.loopDestroy(), "object" == (void 0 === e ? "undefined" : n(e)) && "length" in e)
                            for (var s = 0; s < e.length; s += 1) e[s] && t.append(e[s]);
                        else t.append(e);
                        i.loop && this.loopCreate(), i.observer && b.observer || this.update()
                    }, prependSlide: function (e) {
                        var t = this.params,
                            i = this.$wrapperEl,
                            s = this.activeIndex;
                        t.loop && this.loopDestroy();
                        var a = s + 1;
                        if ("object" == (void 0 === e ? "undefined" : n(e)) && "length" in e) {
                            for (var r = 0; r < e.length; r += 1) e[r] && i.prepend(e[r]);
                            a = s + e.length
                        } else i.prepend(e);
                        t.loop && this.loopCreate(), t.observer && b.observer || this.update(), this.slideTo(a, 0, !1)
                    }, addSlide: function (e, t) {
                        var i = this.$wrapperEl,
                            s = this.params,
                            a = this.activeIndex;
                        s.loop && (a -= this.loopedSlides, this.loopDestroy(), this.slides = i.children("." + s.slideClass));
                        var r = this.slides.length;
                        if (e <= 0) this.prependSlide(t);
                        else if (e >= r) this.appendSlide(t);
                        else {
                            for (var o = a > e ? a + 1 : a, l = [], d = r - 1; d >= e; d -= 1) {
                                var h = this.slides.eq(d);
                                h.remove(), l.unshift(h)
                            }
                            if ("object" == (void 0 === t ? "undefined" : n(t)) && "length" in t) {
                                for (var c = 0; c < t.length; c += 1) t[c] && i.append(t[c]);
                                o = a > e ? a + t.length : a
                            } else i.append(t);
                            for (var u = 0; u < l.length; u += 1) i.append(l[u]);
                            s.loop && this.loopCreate(), s.observer && b.observer || this.update(), s.loop ? this.slideTo(o + this.loopedSlides, 0, !1) : this.slideTo(o, 0, !1)
                        }
                    }, removeSlide: function (e) {
                        var t = this.params,
                            i = this.$wrapperEl,
                            s = this.activeIndex;
                        t.loop && (s -= this.loopedSlides, this.loopDestroy(), this.slides = i.children("." + t.slideClass));
                        var a, r = s;
                        if ("object" == (void 0 === e ? "undefined" : n(e)) && "length" in e) {
                            for (var o = 0; o < e.length; o += 1) a = e[o], this.slides[a] && this.slides.eq(a).remove(), a < r && (r -= 1);
                            r = Math.max(r, 0)
                        } else a = e, this.slides[a] && this.slides.eq(a).remove(), a < r && (r -= 1), r = Math.max(r, 0);
                        t.loop && this.loopCreate(), t.observer && b.observer || this.update(), t.loop ? this.slideTo(r + this.loopedSlides, 0, !1) : this.slideTo(r, 0, !1)
                    }, removeAllSlides: function () {
                        for (var e = [], t = 0; t < this.slides.length; t += 1) e.push(t);
                        this.removeSlide(e)
                    }
                },
                X = (x = f.navigator.platform, C = f.navigator.userAgent, T = {
                    ios: !1,
                    android: !1,
                    androidChrome: !1,
                    desktop: !1,
                    iphone: !1,
                    ipod: !1,
                    ipad: !1,
                    edge: !1,
                    ie: !1,
                    firefox: !1,
                    macos: !1,
                    windows: !1,
                    cordova: !(!f.cordova && !f.phonegap),
                    phonegap: !(!f.cordova && !f.phonegap),
                    electron: !1
                }, E = f.screen.width, S = f.screen.height, M = C.match(/(Android);?[\s\/]+([\d.]+)?/), k = C.match(/(iPad).*OS\s([\d_]+)/), P = C.match(/(iPod)(.*OS\s([\d_]+))?/), z = !k && C.match(/(iPhone\sOS|iOS)\s([\d_]+)/), L = C.indexOf("MSIE ") >= 0 || C.indexOf("Trident/") >= 0, $ = C.indexOf("Edge/") >= 0, I = C.indexOf("Gecko/") >= 0 && C.indexOf("Firefox/") >= 0, O = "Win32" === x, D = C.toLowerCase().indexOf("electron") >= 0, A = "MacIntel" === x, !k && A && b.touch && (1024 === E && 1366 === S || 834 === E && 1194 === S || 834 === E && 1112 === S || 768 === E && 1024 === S) && (k = C.match(/(Version)\/([\d.]+)/), A = !1), T.ie = L, T.edge = $, T.firefox = I, M && !O && (T.os = "android", T.osVersion = M[2], T.android = !0, T.androidChrome = C.toLowerCase().indexOf("chrome") >= 0), (k || z || P) && (T.os = "ios", T.ios = !0), z && !P && (T.osVersion = z[2].replace(/_/g, "."), T.iphone = !0), k && (T.osVersion = k[2].replace(/_/g, "."), T.ipad = !0), P && (T.osVersion = P[3] ? P[3].replace(/_/g, ".") : null, T.ipod = !0), T.ios && T.osVersion && C.indexOf("Version/") >= 0 && "10" === T.osVersion.split(".")[0] && (T.osVersion = C.toLowerCase().split("version/")[1].split(" ")[0]), T.webView = !(!(z || k || P) || !C.match(/.*AppleWebKit(?!.*Safari)/i) && !f.navigator.standalone) || f.matchMedia && f.matchMedia("(display-mode: standalone)").matches, T.webview = T.webView, T.standalone = T.webView, T.desktop = !(T.ios || T.android) || D, T.desktop && (T.electron = D, T.macos = A, T.windows = O, T.macos && (T.os = "macos"), T.windows && (T.os = "windows")), T.pixelRatio = f.devicePixelRatio || 1, T),
                Y = !1,
                W = {
                    init: !0,
                    direction: "horizontal",
                    touchEventsTarget: "container",
                    initialSlide: 0,
                    speed: 300,
                    cssMode: !1,
                    updateOnWindowResize: !0,
                    preventInteractionOnTransition: !1,
                    edgeSwipeDetection: !1,
                    edgeSwipeThreshold: 20,
                    freeMode: !1,
                    freeModeMomentum: !0,
                    freeModeMomentumRatio: 1,
                    freeModeMomentumBounce: !0,
                    freeModeMomentumBounceRatio: 1,
                    freeModeMomentumVelocityRatio: 1,
                    freeModeSticky: !1,
                    freeModeMinimumVelocity: .02,
                    autoHeight: !1,
                    setWrapperSize: !1,
                    virtualTranslate: !1,
                    effect: "slide",
                    breakpoints: void 0,
                    spaceBetween: 0,
                    slidesPerView: 1,
                    slidesPerColumn: 1,
                    slidesPerColumnFill: "column",
                    slidesPerGroup: 1,
                    slidesPerGroupSkip: 0,
                    centeredSlides: !1,
                    centeredSlidesBounds: !1,
                    slidesOffsetBefore: 0,
                    slidesOffsetAfter: 0,
                    normalizeSlideIndex: !0,
                    centerInsufficientSlides: !1,
                    watchOverflow: !1,
                    roundLengths: !1,
                    touchRatio: 1,
                    touchAngle: 45,
                    simulateTouch: !0,
                    shortSwipes: !0,
                    longSwipes: !0,
                    longSwipesRatio: .5,
                    longSwipesMs: 300,
                    followFinger: !0,
                    allowTouchMove: !0,
                    threshold: 0,
                    touchMoveStopPropagation: !1,
                    touchStartPreventDefault: !0,
                    touchStartForcePreventDefault: !1,
                    touchReleaseOnEdges: !1,
                    uniqueNavElements: !0,
                    resistance: !0,
                    resistanceRatio: .85,
                    watchSlidesProgress: !1,
                    watchSlidesVisibility: !1,
                    grabCursor: !1,
                    preventClicks: !0,
                    preventClicksPropagation: !0,
                    slideToClickedSlide: !1,
                    preloadImages: !0,
                    updateOnImagesReady: !0,
                    loop: !1,
                    loopAdditionalSlides: 0,
                    loopedSlides: null,
                    loopFillGroupWithBlank: !1,
                    allowSlidePrev: !0,
                    allowSlideNext: !0,
                    swipeHandler: null,
                    noSwiping: !0,
                    noSwipingClass: "swiper-no-swiping",
                    noSwipingSelector: null,
                    passiveListeners: !0,
                    containerModifierClass: "swiper-container-",
                    slideClass: "swiper-slide",
                    slideBlankClass: "swiper-slide-invisible-blank",
                    slideActiveClass: "swiper-slide-active",
                    slideDuplicateActiveClass: "swiper-slide-duplicate-active",
                    slideVisibleClass: "swiper-slide-visible",
                    slideDuplicateClass: "swiper-slide-duplicate",
                    slideNextClass: "swiper-slide-next",
                    slideDuplicateNextClass: "swiper-slide-duplicate-next",
                    slidePrevClass: "swiper-slide-prev",
                    slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
                    wrapperClass: "swiper-wrapper",
                    runCallbacksOnInit: !0
                },
                q = {
                    update: H,
                    translate: B,
                    transition: N,
                    slide: G,
                    loop: V,
                    grabCursor: F,
                    manipulation: R,
                    events: {
                        attachEvents: function () {
                            var e = this.params,
                                t = this.touchEvents,
                                i = this.el,
                                s = this.wrapperEl;
                            this.onTouchStart = a.bind(this), this.onTouchMove = r.bind(this), this.onTouchEnd = o.bind(this), e.cssMode && (this.onScroll = h.bind(this)), this.onClick = d.bind(this);
                            var n = !!e.nested;
                            if (!b.touch && b.pointerEvents) i.addEventListener(t.start, this.onTouchStart, !1), u.addEventListener(t.move, this.onTouchMove, n), u.addEventListener(t.end, this.onTouchEnd, !1);
                            else {
                                if (b.touch) {
                                    var p = !("touchstart" !== t.start || !b.passiveListener || !e.passiveListeners) && {
                                        passive: !0,
                                        capture: !1
                                    };
                                    i.addEventListener(t.start, this.onTouchStart, p), i.addEventListener(t.move, this.onTouchMove, b.passiveListener ? {
                                        passive: !1,
                                        capture: n
                                    } : n), i.addEventListener(t.end, this.onTouchEnd, p), t.cancel && i.addEventListener(t.cancel, this.onTouchEnd, p), Y || (u.addEventListener("touchstart", c), Y = !0)
                                }(e.simulateTouch && !X.ios && !X.android || e.simulateTouch && !b.touch && X.ios) && (i.addEventListener("mousedown", this.onTouchStart, !1), u.addEventListener("mousemove", this.onTouchMove, n), u.addEventListener("mouseup", this.onTouchEnd, !1))
                            }(e.preventClicks || e.preventClicksPropagation) && i.addEventListener("click", this.onClick, !0), e.cssMode && s.addEventListener("scroll", this.onScroll), e.updateOnWindowResize ? this.on(X.ios || X.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", l, !0) : this.on("observerUpdate", l, !0)
                        }, detachEvents: function () {
                            var e = this.params,
                                t = this.touchEvents,
                                i = this.el,
                                s = this.wrapperEl,
                                a = !!e.nested;
                            if (!b.touch && b.pointerEvents) i.removeEventListener(t.start, this.onTouchStart, !1), u.removeEventListener(t.move, this.onTouchMove, a), u.removeEventListener(t.end, this.onTouchEnd, !1);
                            else {
                                if (b.touch) {
                                    var n = !("onTouchStart" !== t.start || !b.passiveListener || !e.passiveListeners) && {
                                        passive: !0,
                                        capture: !1
                                    };
                                    i.removeEventListener(t.start, this.onTouchStart, n), i.removeEventListener(t.move, this.onTouchMove, a), i.removeEventListener(t.end, this.onTouchEnd, n), t.cancel && i.removeEventListener(t.cancel, this.onTouchEnd, n)
                                }(e.simulateTouch && !X.ios && !X.android || e.simulateTouch && !b.touch && X.ios) && (i.removeEventListener("mousedown", this.onTouchStart, !1), u.removeEventListener("mousemove", this.onTouchMove, a), u.removeEventListener("mouseup", this.onTouchEnd, !1))
                            }(e.preventClicks || e.preventClicksPropagation) && i.removeEventListener("click", this.onClick, !0), e.cssMode && s.removeEventListener("scroll", this.onScroll), this.off(X.ios || X.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", l)
                        }
                    },
                    breakpoints: {
                        setBreakpoint: function () {
                            var e = this.activeIndex,
                                t = this.initialized,
                                i = this.loopedSlides;
                            void 0 === i && (i = 0);
                            var s = this.params,
                                a = this.$el,
                                n = s.breakpoints;
                            if (n && (!n || 0 !== Object.keys(n).length)) {
                                var r = this.getBreakpoint(n);
                                if (r && this.currentBreakpoint !== r) {
                                    var o = r in n ? n[r] : void 0;
                                    o && ["slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn"].forEach(function (e) {
                                        var t = o[e];
                                        void 0 !== t && (o[e] = "slidesPerView" !== e || "AUTO" !== t && "auto" !== t ? "slidesPerView" === e ? parseFloat(t) : parseInt(t, 10) : "auto")
                                    });
                                    var l = o || this.originalParams,
                                        d = s.slidesPerColumn > 1,
                                        h = l.slidesPerColumn > 1;
                                    d && !h ? a.removeClass(s.containerModifierClass + "multirow " + s.containerModifierClass + "multirow-column") : !d && h && (a.addClass(s.containerModifierClass + "multirow"), "column" === l.slidesPerColumnFill && a.addClass(s.containerModifierClass + "multirow-column"));
                                    var c = l.direction && l.direction !== s.direction,
                                        u = s.loop && (l.slidesPerView !== s.slidesPerView || c);
                                    c && t && this.changeDirection(), g.extend(this.params, l), g.extend(this, {
                                        allowTouchMove: this.params.allowTouchMove,
                                        allowSlideNext: this.params.allowSlideNext,
                                        allowSlidePrev: this.params.allowSlidePrev
                                    }), this.currentBreakpoint = r, u && t && (this.loopDestroy(), this.loopCreate(), this.updateSlides(), this.slideTo(e - i + this.loopedSlides, 0, !1)), this.emit("breakpoint", l)
                                }
                            }
                        }, getBreakpoint: function (e) {
                            if (e) {
                                var t = !1,
                                    i = Object.keys(e).map(function (e) {
                                        if ("string" == typeof e && 0 === e.indexOf("@")) {
                                            var t = parseFloat(e.substr(1));
                                            return {
                                                value: f.innerHeight * t,
                                                point: e
                                            }
                                        }
                                        return {
                                            value: e,
                                            point: e
                                        }
                                    });
                                i.sort(function (e, t) {
                                    return parseInt(e.value, 10) - parseInt(t.value, 10)
                                });
                                for (var s = 0; s < i.length; s += 1) {
                                    var a = i[s],
                                        n = a.point;
                                    a.value <= f.innerWidth && (t = n)
                                }
                                return t || "max"
                            }
                        }
                    },
                    checkOverflow: {
                        checkOverflow: function () {
                            var e = this.params,
                                t = this.isLocked,
                                i = this.slides.length > 0 && e.slidesOffsetBefore + e.spaceBetween * (this.slides.length - 1) + this.slides[0].offsetWidth * this.slides.length;
                            e.slidesOffsetBefore && e.slidesOffsetAfter && i ? this.isLocked = i <= this.size : this.isLocked = 1 === this.snapGrid.length, this.allowSlideNext = !this.isLocked, this.allowSlidePrev = !this.isLocked, t !== this.isLocked && this.emit(this.isLocked ? "lock" : "unlock"), t && t !== this.isLocked && (this.isEnd = !1, this.navigation && this.navigation.update())
                        }
                    },
                    classes: {
                        addClasses: function () {
                            var e = this.classNames,
                                t = this.params,
                                i = this.rtl,
                                s = this.$el,
                                a = [];
                            a.push("initialized"), a.push(t.direction), t.freeMode && a.push("free-mode"), t.autoHeight && a.push("autoheight"), i && a.push("rtl"), t.slidesPerColumn > 1 && (a.push("multirow"), "column" === t.slidesPerColumnFill && a.push("multirow-column")), X.android && a.push("android"), X.ios && a.push("ios"), t.cssMode && a.push("css-mode"), a.forEach(function (i) {
                                e.push(t.containerModifierClass + i)
                            }), s.addClass(e.join(" "))
                        }, removeClasses: function () {
                            var e = this.$el,
                                t = this.classNames;
                            e.removeClass(t.join(" "))
                        }
                    },
                    images: {
                        loadImage: function (e, t, s, a, n, r) {
                            function o() {
                                r && r()
                            }
                            var l;
                            i(e).parent("picture")[0] || e.complete && n ? o() : t ? ((l = new f.Image).onload = o, l.onerror = o, a && (l.sizes = a), s && (l.srcset = s), t && (l.src = t)) : o()
                        }, preloadImages: function () {
                            function e() {
                                null != t && t && !t.destroyed && (void 0 !== t.imagesLoaded && (t.imagesLoaded += 1), t.imagesLoaded === t.imagesToLoad.length && (t.params.updateOnImagesReady && t.update(), t.emit("imagesReady")))
                            }
                            var t = this;
                            t.imagesToLoad = t.$el.find("img");
                            for (var i = 0; i < t.imagesToLoad.length; i += 1) {
                                var s = t.imagesToLoad[i];
                                t.loadImage(s, s.currentSrc || s.getAttribute("src"), s.srcset || s.getAttribute("srcset"), s.sizes || s.getAttribute("sizes"), !0, e)
                            }
                        }
                    }
                },
                j = {},
                U = function (e) {
                    function t() {
                        for (var s, a, r, o = [], l = arguments.length; l--;) o[l] = arguments[l];
                        1 === o.length && o[0].constructor && o[0].constructor === Object ? r = o[0] : (a = (s = o)[0], r = s[1]), r || (r = {}), r = g.extend({}, r), a && !r.el && (r.el = a), e.call(this, r), Object.keys(q).forEach(function (e) {
                            Object.keys(q[e]).forEach(function (i) {
                                t.prototype[i] || (t.prototype[i] = q[e][i])
                            })
                        });
                        var d = this;
                        void 0 === d.modules && (d.modules = {}), Object.keys(d.modules).forEach(function (e) {
                            var t = d.modules[e];
                            if (t.params) {
                                var i = Object.keys(t.params)[0],
                                    s = t.params[i];
                                if ("object" != (void 0 === s ? "undefined" : n(s)) || null === s) return;
                                if (!(i in r && "enabled" in s)) return;
                                !0 === r[i] && (r[i] = {
                                    enabled: !0
                                }), "object" != n(r[i]) || "enabled" in r[i] || (r[i].enabled = !0), r[i] || (r[i] = {
                                    enabled: !1
                                })
                            }
                        });
                        var h = g.extend({}, W);
                        d.useModulesParams(h), d.params = g.extend({}, h, j, r), d.originalParams = g.extend({}, d.params), d.passedParams = g.extend({}, r), d.$ = i;
                        var c = i(d.params.el);
                        if (a = c[0]) {
                            if (c.length > 1) {
                                var u = [];
                                return c.each(function (e, i) {
                                    var s = g.extend({}, r, {
                                        el: i
                                    });
                                    u.push(new t(s))
                                }), u
                            }
                            var p, f, v;
                            return a.swiper = d, c.data("swiper", d), a && a.shadowRoot && a.shadowRoot.querySelector ? (p = i(a.shadowRoot.querySelector("." + d.params.wrapperClass))).children = function (e) {
                                return c.children(e)
                            } : p = c.children("." + d.params.wrapperClass), g.extend(d, {
                                $el: c,
                                el: a,
                                $wrapperEl: p,
                                wrapperEl: p[0],
                                classNames: [],
                                slides: i(),
                                slidesGrid: [],
                                snapGrid: [],
                                slidesSizesGrid: [],
                                isHorizontal: function () {
                                    return "horizontal" === d.params.direction
                                }, isVertical: function () {
                                    return "vertical" === d.params.direction
                                }, rtl: "rtl" === a.dir.toLowerCase() || "rtl" === c.css("direction"),
                                rtlTranslate: "horizontal" === d.params.direction && ("rtl" === a.dir.toLowerCase() || "rtl" === c.css("direction")),
                                wrongRTL: "-webkit-box" === p.css("display"),
                                activeIndex: 0,
                                realIndex: 0,
                                isBeginning: !0,
                                isEnd: !1,
                                translate: 0,
                                previousTranslate: 0,
                                progress: 0,
                                velocity: 0,
                                animating: !1,
                                allowSlideNext: d.params.allowSlideNext,
                                allowSlidePrev: d.params.allowSlidePrev,
                                touchEvents: (f = ["touchstart", "touchmove", "touchend", "touchcancel"], v = ["mousedown", "mousemove", "mouseup"], b.pointerEvents && (v = ["pointerdown", "pointermove", "pointerup"]), d.touchEventsTouch = {
                                    start: f[0],
                                    move: f[1],
                                    end: f[2],
                                    cancel: f[3]
                                }, d.touchEventsDesktop = {
                                    start: v[0],
                                    move: v[1],
                                    end: v[2]
                                }, b.touch || !d.params.simulateTouch ? d.touchEventsTouch : d.touchEventsDesktop),
                                touchEventsData: {
                                    isTouched: void 0,
                                    isMoved: void 0,
                                    allowTouchCallbacks: void 0,
                                    touchStartTime: void 0,
                                    isScrolling: void 0,
                                    currentTranslate: void 0,
                                    startTranslate: void 0,
                                    allowThresholdMove: void 0,
                                    formElements: "input, select, option, textarea, button, video, label",
                                    lastClickTime: g.now(),
                                    clickTimeout: void 0,
                                    velocities: [],
                                    allowMomentumBounce: void 0,
                                    isTouchEvent: void 0,
                                    startMoving: void 0
                                },
                                allowClick: !0,
                                allowTouchMove: d.params.allowTouchMove,
                                touches: {
                                    startX: 0,
                                    startY: 0,
                                    currentX: 0,
                                    currentY: 0,
                                    diff: 0
                                },
                                imagesToLoad: [],
                                imagesLoaded: 0
                            }), d.useModules(), d.params.init && d.init(), d
                        }
                    }
                    e && (t.__proto__ = e), t.prototype = Object.create(e && e.prototype), t.prototype.constructor = t;
                    var s = {
                        extendedDefaults: {
                            configurable: !0
                        },
                        defaults: {
                            configurable: !0
                        },
                        Class: {
                            configurable: !0
                        },
                        $: {
                            configurable: !0
                        }
                    };
                    return t.prototype.slidesPerViewDynamic = function () {
                        var e = this.params,
                            t = this.slides,
                            i = this.slidesGrid,
                            s = this.size,
                            a = this.activeIndex,
                            n = 1;
                        if (e.centeredSlides) {
                            for (var r, o = t[a].swiperSlideSize, l = a + 1; l < t.length; l += 1) t[l] && !r && (n += 1, (o += t[l].swiperSlideSize) > s && (r = !0));
                            for (var d = a - 1; d >= 0; d -= 1) t[d] && !r && (n += 1, (o += t[d].swiperSlideSize) > s && (r = !0))
                        } else
                            for (var h = a + 1; h < t.length; h += 1) i[h] - i[a] < s && (n += 1);
                        return n
                    }, t.prototype.update = function () {
                        function e() {
                            var e = t.rtlTranslate ? -1 * t.translate : t.translate,
                                i = Math.min(Math.max(e, t.maxTranslate()), t.minTranslate());
                            t.setTranslate(i), t.updateActiveIndex(), t.updateSlidesClasses()
                        }
                        var t = this;
                        if (t && !t.destroyed) {
                            var i = t.snapGrid,
                                s = t.params;
                            s.breakpoints && t.setBreakpoint(), t.updateSize(), t.updateSlides(), t.updateProgress(), t.updateSlidesClasses(), t.params.freeMode ? (e(), t.params.autoHeight && t.updateAutoHeight()) : (("auto" === t.params.slidesPerView || t.params.slidesPerView > 1) && t.isEnd && !t.params.centeredSlides ? t.slideTo(t.slides.length - 1, 0, !1, !0) : t.slideTo(t.activeIndex, 0, !1, !0)) || e(), s.watchOverflow && i !== t.snapGrid && t.checkOverflow(), t.emit("update")
                        }
                    }, t.prototype.changeDirection = function (e, t) {
                        void 0 === t && (t = !0);
                        var i = this.params.direction;
                        return e || (e = "horizontal" === i ? "vertical" : "horizontal"), e === i || "horizontal" !== e && "vertical" !== e || (this.$el.removeClass("" + this.params.containerModifierClass + i).addClass("" + this.params.containerModifierClass + e), this.params.direction = e, this.slides.each(function (t, i) {
                            "vertical" === e ? i.style.width = "" : i.style.height = ""
                        }), this.emit("changeDirection"), t && this.update()), this
                    }, t.prototype.init = function () {
                        this.initialized || (this.emit("beforeInit"), this.params.breakpoints && this.setBreakpoint(), this.addClasses(), this.params.loop && this.loopCreate(), this.updateSize(), this.updateSlides(), this.params.watchOverflow && this.checkOverflow(), this.params.grabCursor && this.setGrabCursor(), this.params.preloadImages && this.preloadImages(), this.params.loop ? this.slideTo(this.params.initialSlide + this.loopedSlides, 0, this.params.runCallbacksOnInit) : this.slideTo(this.params.initialSlide, 0, this.params.runCallbacksOnInit), this.attachEvents(), this.initialized = !0, this.emit("init"))
                    }, t.prototype.destroy = function (e, t) {
                        void 0 === e && (e = !0), void 0 === t && (t = !0);
                        var i = this,
                            s = i.params,
                            a = i.$el,
                            n = i.$wrapperEl,
                            r = i.slides;
                        return void 0 === i.params || i.destroyed || (i.emit("beforeDestroy"), i.initialized = !1, i.detachEvents(), s.loop && i.loopDestroy(), t && (i.removeClasses(), a.removeAttr("style"), n.removeAttr("style"), r && r.length && r.removeClass([s.slideVisibleClass, s.slideActiveClass, s.slideNextClass, s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")), i.emit("destroy"), Object.keys(i.eventsListeners).forEach(function (e) {
                            i.off(e)
                        }), !1 !== e && (i.$el[0].swiper = null, i.$el.data("swiper", null), g.deleteProps(i)), i.destroyed = !0), null
                    }, t.extendDefaults = function (e) {
                        g.extend(j, e)
                    }, s.extendedDefaults.get = function () {
                        return j
                    }, s.defaults.get = function () {
                        return W
                    }, s.Class.get = function () {
                        return e
                    }, s.$.get = function () {
                        return i
                    }, Object.defineProperties(t, s), t
                }(w),
                _ = {
                    name: "device",
                    proto: {
                        device: X
                    },
                    static: {
                        device: X
                    }
                },
                K = {
                    name: "support",
                    proto: {
                        support: b
                    },
                    static: {
                        support: b
                    }
                },
                Q = {
                    isEdge: !!f.navigator.userAgent.match(/Edge/g),
                    isSafari: function () {
                        var e = f.navigator.userAgent.toLowerCase();
                        return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0
                    }(),
                    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(f.navigator.userAgent)
                },
                J = {
                    name: "browser",
                    proto: {
                        browser: Q
                    },
                    static: {
                        browser: Q
                    }
                },
                Z = {
                    name: "resize",
                    create: function () {
                        var e = this;
                        g.extend(e, {
                            resize: {
                                resizeHandler: function () {
                                    e && !e.destroyed && e.initialized && (e.emit("beforeResize"), e.emit("resize"))
                                }, orientationChangeHandler: function () {
                                    e && !e.destroyed && e.initialized && e.emit("orientationchange")
                                }
                            }
                        })
                    }, on: {
                        init: function () {
                            f.addEventListener("resize", this.resize.resizeHandler), f.addEventListener("orientationchange", this.resize.orientationChangeHandler)
                        }, destroy: function () {
                            f.removeEventListener("resize", this.resize.resizeHandler), f.removeEventListener("orientationchange", this.resize.orientationChangeHandler)
                        }
                    }
                },
                ee = {
                    func: f.MutationObserver || f.WebkitMutationObserver,
                    attach: function (e, t) {
                        void 0 === t && (t = {});
                        var i = this,
                            s = new(0, ee.func)(function (e) {
                                if (1 !== e.length) {
                                    var t = function () {
                                        i.emit("observerUpdate", e[0])
                                    };
                                    f.requestAnimationFrame ? f.requestAnimationFrame(t) : f.setTimeout(t, 0)
                                } else i.emit("observerUpdate", e[0])
                            });
                        s.observe(e, {
                            attributes: void 0 === t.attributes || t.attributes,
                            childList: void 0 === t.childList || t.childList,
                            characterData: void 0 === t.characterData || t.characterData
                        }), i.observer.observers.push(s)
                    }, init: function () {
                        if (b.observer && this.params.observer) {
                            if (this.params.observeParents)
                                for (var e = this.$el.parents(), t = 0; t < e.length; t += 1) this.observer.attach(e[t]);
                            this.observer.attach(this.$el[0], {
                                childList: this.params.observeSlideChildren
                            }), this.observer.attach(this.$wrapperEl[0], {
                                attributes: !1
                            })
                        }
                    }, destroy: function () {
                        this.observer.observers.forEach(function (e) {
                            e.disconnect()
                        }), this.observer.observers = []
                    }
                },
                te = {
                    name: "observer",
                    params: {
                        observer: !1,
                        observeParents: !1,
                        observeSlideChildren: !1
                    },
                    create: function () {
                        g.extend(this, {
                            observer: {
                                init: ee.init.bind(this),
                                attach: ee.attach.bind(this),
                                destroy: ee.destroy.bind(this),
                                observers: []
                            }
                        })
                    }, on: {
                        init: function () {
                            this.observer.init()
                        }, destroy: function () {
                            this.observer.destroy()
                        }
                    }
                },
                ie = {
                    update: function (e) {
                        function t() {
                            i.updateSlides(), i.updateProgress(), i.updateSlidesClasses(), i.lazy && i.params.lazy.enabled && i.lazy.load()
                        }
                        var i = this,
                            s = i.params,
                            a = s.slidesPerView,
                            n = s.slidesPerGroup,
                            r = s.centeredSlides,
                            o = i.params.virtual,
                            l = o.addSlidesBefore,
                            d = o.addSlidesAfter,
                            h = i.virtual,
                            c = h.from,
                            u = h.to,
                            p = h.slides,
                            f = h.slidesGrid,
                            v = h.renderSlide,
                            m = h.offset;
                        i.updateActiveIndex();
                        var b, w, y, x = i.activeIndex || 0;
                        b = i.rtlTranslate ? "right" : i.isHorizontal() ? "left" : "top", r ? (w = Math.floor(a / 2) + n + l, y = Math.floor(a / 2) + n + d) : (w = a + (n - 1) + l, y = n + d);
                        var C = Math.max((x || 0) - y, 0),
                            T = Math.min((x || 0) + w, p.length - 1),
                            E = (i.slidesGrid[C] || 0) - (i.slidesGrid[0] || 0);
                        if (g.extend(i.virtual, {
                            from: C,
                            to: T,
                            offset: E,
                            slidesGrid: i.slidesGrid
                        }), c === C && u === T && !e) return i.slidesGrid !== f && E !== m && i.slides.css(b, E + "px"), void i.updateProgress();
                        if (i.params.virtual.renderExternal) return i.params.virtual.renderExternal.call(i, {
                            offset: E,
                            from: C,
                            to: T,
                            slides: function () {
                                for (var e = [], t = C; t <= T; t += 1) e.push(p[t]);
                                return e
                            }()
                        }), void t();
                        var S = [],
                            M = [];
                        if (e) i.$wrapperEl.find("." + i.params.slideClass).remove();
                        else
                            for (var k = c; k <= u; k += 1)(k < C || k > T) && i.$wrapperEl.find("." + i.params.slideClass + '[data-swiper-slide-index="' + k + '"]').remove();
                        for (var P = 0; P < p.length; P += 1) P >= C && P <= T && (void 0 === u || e ? M.push(P) : (P > u && M.push(P), P < c && S.push(P)));
                        M.forEach(function (e) {
                            i.$wrapperEl.append(v(p[e], e))
                        }), S.sort(function (e, t) {
                            return t - e
                        }).forEach(function (e) {
                            i.$wrapperEl.prepend(v(p[e], e))
                        }), i.$wrapperEl.children(".swiper-slide").css(b, E + "px"), t()
                    }, renderSlide: function (e, t) {
                        var s = this.params.virtual;
                        if (s.cache && this.virtual.cache[t]) return this.virtual.cache[t];
                        var a = i(s.renderSlide ? s.renderSlide.call(this, e, t) : '<div class="' + this.params.slideClass + '" data-swiper-slide-index="' + t + '">' + e + "</div>");
                        return a.attr("data-swiper-slide-index") || a.attr("data-swiper-slide-index", t), s.cache && (this.virtual.cache[t] = a), a
                    }, appendSlide: function (e) {
                        if ("object" == (void 0 === e ? "undefined" : n(e)) && "length" in e)
                            for (var t = 0; t < e.length; t += 1) e[t] && this.virtual.slides.push(e[t]);
                        else this.virtual.slides.push(e);
                        this.virtual.update(!0)
                    }, prependSlide: function (e) {
                        var t = this.activeIndex,
                            i = t + 1,
                            s = 1;
                        if (Array.isArray(e)) {
                            for (var a = 0; a < e.length; a += 1) e[a] && this.virtual.slides.unshift(e[a]);
                            i = t + e.length, s = e.length
                        } else this.virtual.slides.unshift(e); if (this.params.virtual.cache) {
                            var n = this.virtual.cache,
                                r = {};
                            Object.keys(n).forEach(function (e) {
                                var t = n[e],
                                    i = t.attr("data-swiper-slide-index");
                                i && t.attr("data-swiper-slide-index", parseInt(i, 10) + 1), r[parseInt(e, 10) + s] = t
                            }), this.virtual.cache = r
                        }
                        this.virtual.update(!0), this.slideTo(i, 0)
                    }, removeSlide: function (e) {
                        if (null != e) {
                            var t = this.activeIndex;
                            if (Array.isArray(e))
                                for (var i = e.length - 1; i >= 0; i -= 1) this.virtual.slides.splice(e[i], 1), this.params.virtual.cache && delete this.virtual.cache[e[i]], e[i] < t && (t -= 1), t = Math.max(t, 0);
                            else this.virtual.slides.splice(e, 1), this.params.virtual.cache && delete this.virtual.cache[e], e < t && (t -= 1), t = Math.max(t, 0);
                            this.virtual.update(!0), this.slideTo(t, 0)
                        }
                    }, removeAllSlides: function () {
                        this.virtual.slides = [], this.params.virtual.cache && (this.virtual.cache = {}), this.virtual.update(!0), this.slideTo(0, 0)
                    }
                },
                se = {
                    name: "virtual",
                    params: {
                        virtual: {
                            enabled: !1,
                            slides: [],
                            cache: !0,
                            renderSlide: null,
                            renderExternal: null,
                            addSlidesBefore: 0,
                            addSlidesAfter: 0
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            virtual: {
                                update: ie.update.bind(this),
                                appendSlide: ie.appendSlide.bind(this),
                                prependSlide: ie.prependSlide.bind(this),
                                removeSlide: ie.removeSlide.bind(this),
                                removeAllSlides: ie.removeAllSlides.bind(this),
                                renderSlide: ie.renderSlide.bind(this),
                                slides: this.params.virtual.slides,
                                cache: {}
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            if (this.params.virtual.enabled) {
                                this.classNames.push(this.params.containerModifierClass + "virtual");
                                var e = {
                                    watchSlidesProgress: !0
                                };
                                g.extend(this.params, e), g.extend(this.originalParams, e), this.params.initialSlide || this.virtual.update()
                            }
                        }, setTranslate: function () {
                            this.params.virtual.enabled && this.virtual.update()
                        }
                    }
                },
                ae = {
                    handle: function (e) {
                        var t = this.rtlTranslate,
                            i = e;
                        i.originalEvent && (i = i.originalEvent);
                        var s = i.keyCode || i.charCode,
                            a = this.params.keyboard.pageUpDown,
                            n = a && 33 === s,
                            r = a && 34 === s,
                            o = 37 === s,
                            l = 39 === s,
                            d = 38 === s,
                            h = 40 === s;
                        if (!this.allowSlideNext && (this.isHorizontal() && l || this.isVertical() && h || r)) return !1;
                        if (!this.allowSlidePrev && (this.isHorizontal() && o || this.isVertical() && d || n)) return !1;
                        if (!(i.shiftKey || i.altKey || i.ctrlKey || i.metaKey || u.activeElement && u.activeElement.nodeName && ("input" === u.activeElement.nodeName.toLowerCase() || "textarea" === u.activeElement.nodeName.toLowerCase()))) {
                            if (this.params.keyboard.onlyInViewport && (n || r || o || l || d || h)) {
                                var c = !1;
                                if (this.$el.parents("." + this.params.slideClass).length > 0 && 0 === this.$el.parents("." + this.params.slideActiveClass).length) return;
                                var p = f.innerWidth,
                                    v = f.innerHeight,
                                    m = this.$el.offset();
                                t && (m.left -= this.$el[0].scrollLeft);
                                for (var g = [
                                    [m.left, m.top],
                                    [m.left + this.width, m.top],
                                    [m.left, m.top + this.height],
                                    [m.left + this.width, m.top + this.height]
                                ], b = 0; b < g.length; b += 1) {
                                    var w = g[b];
                                    w[0] >= 0 && w[0] <= p && w[1] >= 0 && w[1] <= v && (c = !0)
                                }
                                if (!c) return
                            }
                            this.isHorizontal() ? ((n || r || o || l) && (i.preventDefault ? i.preventDefault() : i.returnValue = !1), ((r || l) && !t || (n || o) && t) && this.slideNext(), ((n || o) && !t || (r || l) && t) && this.slidePrev()) : ((n || r || d || h) && (i.preventDefault ? i.preventDefault() : i.returnValue = !1), (r || h) && this.slideNext(), (n || d) && this.slidePrev()), this.emit("keyPress", s)
                        }
                    }, enable: function () {
                        this.keyboard.enabled || (i(u).on("keydown", this.keyboard.handle), this.keyboard.enabled = !0)
                    }, disable: function () {
                        this.keyboard.enabled && (i(u).off("keydown", this.keyboard.handle), this.keyboard.enabled = !1)
                    }
                },
                ne = {
                    name: "keyboard",
                    params: {
                        keyboard: {
                            enabled: !1,
                            onlyInViewport: !0,
                            pageUpDown: !0
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            keyboard: {
                                enabled: !1,
                                enable: ae.enable.bind(this),
                                disable: ae.disable.bind(this),
                                handle: ae.handle.bind(this)
                            }
                        })
                    }, on: {
                        init: function () {
                            this.params.keyboard.enabled && this.keyboard.enable()
                        }, destroy: function () {
                            this.keyboard.enabled && this.keyboard.disable()
                        }
                    }
                },
                re = {
                    lastScrollTime: g.now(),
                    lastEventBeforeSnap: void 0,
                    recentWheelEvents: [],
                    event: function () {
                        return f.navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : function () {
                            var e = "onwheel" in u;
                            if (!e) {
                                var t = u.createElement("div");
                                t.setAttribute("onwheel", "return;"), e = "function" == typeof t.onwheel
                            }
                            return !e && u.implementation && u.implementation.hasFeature && !0 !== u.implementation.hasFeature("", "") && (e = u.implementation.hasFeature("Events.wheel", "3.0")), e
                        }() ? "wheel" : "mousewheel"
                    }, normalize: function (e) {
                        var t = 0,
                            i = 0,
                            s = 0,
                            a = 0;
                        return "detail" in e && (i = e.detail), "wheelDelta" in e && (i = -e.wheelDelta / 120), "wheelDeltaY" in e && (i = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = i, i = 0), s = 10 * t, a = 10 * i, "deltaY" in e && (a = e.deltaY), "deltaX" in e && (s = e.deltaX), e.shiftKey && !s && (s = a, a = 0), (s || a) && e.deltaMode && (1 === e.deltaMode ? (s *= 40, a *= 40) : (s *= 800, a *= 800)), s && !t && (t = s < 1 ? -1 : 1), a && !i && (i = a < 1 ? -1 : 1), {
                            spinX: t,
                            spinY: i,
                            pixelX: s,
                            pixelY: a
                        }
                    }, handleMouseEnter: function () {
                        this.mouseEntered = !0
                    }, handleMouseLeave: function () {
                        this.mouseEntered = !1
                    }, handle: function (e) {
                        var t = e,
                            s = this,
                            a = s.params.mousewheel;
                        s.params.cssMode && t.preventDefault();
                        var n = s.$el;
                        if ("container" !== s.params.mousewheel.eventsTarged && (n = i(s.params.mousewheel.eventsTarged)), !s.mouseEntered && !n[0].contains(t.target) && !a.releaseOnEdges) return !0;
                        t.originalEvent && (t = t.originalEvent);
                        var r = 0,
                            o = s.rtlTranslate ? -1 : 1,
                            l = re.normalize(t);
                        if (a.forceToAxis)
                            if (s.isHorizontal()) {
                                if (!(Math.abs(l.pixelX) > Math.abs(l.pixelY))) return !0;
                                r = -l.pixelX * o
                            } else {
                                if (!(Math.abs(l.pixelY) > Math.abs(l.pixelX))) return !0;
                                r = -l.pixelY
                            } else r = Math.abs(l.pixelX) > Math.abs(l.pixelY) ? -l.pixelX * o : -l.pixelY; if (0 === r) return !0;
                        if (a.invert && (r = -r), s.params.freeMode) {
                            var d = {
                                    time: g.now(),
                                    delta: Math.abs(r),
                                    direction: Math.sign(r)
                                },
                                h = s.mousewheel.lastEventBeforeSnap,
                                c = h && d.time < h.time + 500 && d.delta <= h.delta && d.direction === h.direction;
                            if (!c) {
                                s.mousewheel.lastEventBeforeSnap = void 0, s.params.loop && s.loopFix();
                                var u = s.getTranslate() + r * a.sensitivity,
                                    p = s.isBeginning,
                                    f = s.isEnd;
                                if (u >= s.minTranslate() && (u = s.minTranslate()), u <= s.maxTranslate() && (u = s.maxTranslate()), s.setTransition(0), s.setTranslate(u), s.updateProgress(), s.updateActiveIndex(), s.updateSlidesClasses(), (!p && s.isBeginning || !f && s.isEnd) && s.updateSlidesClasses(), s.params.freeModeSticky) {
                                    clearTimeout(s.mousewheel.timeout), s.mousewheel.timeout = void 0;
                                    var v = s.mousewheel.recentWheelEvents;
                                    v.length >= 15 && v.shift();
                                    var m = v.length ? v[v.length - 1] : void 0,
                                        b = v[0];
                                    if (v.push(d), m && (d.delta > m.delta || d.direction !== m.direction)) v.splice(0);
                                    else if (v.length >= 15 && d.time - b.time < 500 && b.delta - d.delta >= 1 && d.delta <= 6) {
                                        var w = r > 0 ? .8 : .2;
                                        s.mousewheel.lastEventBeforeSnap = d, v.splice(0), s.mousewheel.timeout = g.nextTick(function () {
                                            s.slideToClosest(s.params.speed, !0, void 0, w)
                                        }, 0)
                                    }
                                    s.mousewheel.timeout || (s.mousewheel.timeout = g.nextTick(function () {
                                        s.mousewheel.lastEventBeforeSnap = d, v.splice(0), s.slideToClosest(s.params.speed, !0, void 0, .5)
                                    }, 500))
                                }
                                if (c || s.emit("scroll", t), s.params.autoplay && s.params.autoplayDisableOnInteraction && s.autoplay.stop(), u === s.minTranslate() || u === s.maxTranslate()) return !0
                            }
                        } else {
                            var y = {
                                    time: g.now(),
                                    delta: Math.abs(r),
                                    direction: Math.sign(r),
                                    raw: e
                                },
                                x = s.mousewheel.recentWheelEvents;
                            x.length >= 2 && x.shift();
                            var C = x.length ? x[x.length - 1] : void 0;
                            if (x.push(y), C ? (y.direction !== C.direction || y.delta > C.delta || y.time > C.time + 150) && s.mousewheel.animateSlider(y) : s.mousewheel.animateSlider(y), s.mousewheel.releaseScroll(y)) return !0
                        }
                        return t.preventDefault ? t.preventDefault() : t.returnValue = !1, !1
                    }, animateSlider: function (e) {
                        return e.delta >= 6 && g.now() - this.mousewheel.lastScrollTime < 60 || (e.direction < 0 ? this.isEnd && !this.params.loop || this.animating || (this.slideNext(), this.emit("scroll", e.raw)) : this.isBeginning && !this.params.loop || this.animating || (this.slidePrev(), this.emit("scroll", e.raw)), this.mousewheel.lastScrollTime = (new f.Date).getTime(), !1)
                    }, releaseScroll: function (e) {
                        var t = this.params.mousewheel;
                        if (e.direction < 0) {
                            if (this.isEnd && !this.params.loop && t.releaseOnEdges) return !0
                        } else if (this.isBeginning && !this.params.loop && t.releaseOnEdges) return !0;
                        return !1
                    }, enable: function () {
                        var e = re.event();
                        if (this.params.cssMode) return this.wrapperEl.removeEventListener(e, this.mousewheel.handle), !0;
                        if (!e) return !1;
                        if (this.mousewheel.enabled) return !1;
                        var t = this.$el;
                        return "container" !== this.params.mousewheel.eventsTarged && (t = i(this.params.mousewheel.eventsTarged)), t.on("mouseenter", this.mousewheel.handleMouseEnter), t.on("mouseleave", this.mousewheel.handleMouseLeave), t.on(e, this.mousewheel.handle), this.mousewheel.enabled = !0, !0
                    }, disable: function () {
                        var e = re.event();
                        if (this.params.cssMode) return this.wrapperEl.addEventListener(e, this.mousewheel.handle), !0;
                        if (!e) return !1;
                        if (!this.mousewheel.enabled) return !1;
                        var t = this.$el;
                        return "container" !== this.params.mousewheel.eventsTarged && (t = i(this.params.mousewheel.eventsTarged)), t.off(e, this.mousewheel.handle), this.mousewheel.enabled = !1, !0
                    }
                },
                oe = {
                    update: function () {
                        var e = this.params.navigation;
                        if (!this.params.loop) {
                            var t = this.navigation,
                                i = t.$nextEl,
                                s = t.$prevEl;
                            s && s.length > 0 && (this.isBeginning ? s.addClass(e.disabledClass) : s.removeClass(e.disabledClass), s[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](e.lockClass)), i && i.length > 0 && (this.isEnd ? i.addClass(e.disabledClass) : i.removeClass(e.disabledClass), i[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](e.lockClass))
                        }
                    }, onPrevClick: function (e) {
                        e.preventDefault(), this.isBeginning && !this.params.loop || this.slidePrev()
                    }, onNextClick: function (e) {
                        e.preventDefault(), this.isEnd && !this.params.loop || this.slideNext()
                    }, init: function () {
                        var e, t, s = this.params.navigation;
                        (s.nextEl || s.prevEl) && (s.nextEl && (e = i(s.nextEl), this.params.uniqueNavElements && "string" == typeof s.nextEl && e.length > 1 && 1 === this.$el.find(s.nextEl).length && (e = this.$el.find(s.nextEl))), s.prevEl && (t = i(s.prevEl), this.params.uniqueNavElements && "string" == typeof s.prevEl && t.length > 1 && 1 === this.$el.find(s.prevEl).length && (t = this.$el.find(s.prevEl))), e && e.length > 0 && e.on("click", this.navigation.onNextClick), t && t.length > 0 && t.on("click", this.navigation.onPrevClick), g.extend(this.navigation, {
                            $nextEl: e,
                            nextEl: e && e[0],
                            $prevEl: t,
                            prevEl: t && t[0]
                        }))
                    }, destroy: function () {
                        var e = this.navigation,
                            t = e.$nextEl,
                            i = e.$prevEl;
                        t && t.length && (t.off("click", this.navigation.onNextClick), t.removeClass(this.params.navigation.disabledClass)), i && i.length && (i.off("click", this.navigation.onPrevClick), i.removeClass(this.params.navigation.disabledClass))
                    }
                },
                le = {
                    update: function () {
                        var e = this.rtl,
                            t = this.params.pagination;
                        if (t.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
                            var s, a = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length,
                                n = this.pagination.$el,
                                r = this.params.loop ? Math.ceil((a - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length;
                            if (this.params.loop ? ((s = Math.ceil((this.activeIndex - this.loopedSlides) / this.params.slidesPerGroup)) > a - 1 - 2 * this.loopedSlides && (s -= a - 2 * this.loopedSlides), s > r - 1 && (s -= r), s < 0 && "bullets" !== this.params.paginationType && (s = r + s)) : s = void 0 !== this.snapIndex ? this.snapIndex : this.activeIndex || 0, "bullets" === t.type && this.pagination.bullets && this.pagination.bullets.length > 0) {
                                var o, l, d, h = this.pagination.bullets;
                                if (t.dynamicBullets && (this.pagination.bulletSize = h.eq(0)[this.isHorizontal() ? "outerWidth" : "outerHeight"](!0), n.css(this.isHorizontal() ? "width" : "height", this.pagination.bulletSize * (t.dynamicMainBullets + 4) + "px"), t.dynamicMainBullets > 1 && void 0 !== this.previousIndex && (this.pagination.dynamicBulletIndex += s - this.previousIndex, this.pagination.dynamicBulletIndex > t.dynamicMainBullets - 1 ? this.pagination.dynamicBulletIndex = t.dynamicMainBullets - 1 : this.pagination.dynamicBulletIndex < 0 && (this.pagination.dynamicBulletIndex = 0)), o = s - this.pagination.dynamicBulletIndex, d = ((l = o + (Math.min(h.length, t.dynamicMainBullets) - 1)) + o) / 2), h.removeClass(t.bulletActiveClass + " " + t.bulletActiveClass + "-next " + t.bulletActiveClass + "-next-next " + t.bulletActiveClass + "-prev " + t.bulletActiveClass + "-prev-prev " + t.bulletActiveClass + "-main"), n.length > 1) h.each(function (e, a) {
                                    var n = i(a),
                                        r = n.index();
                                    r === s && n.addClass(t.bulletActiveClass), t.dynamicBullets && (r >= o && r <= l && n.addClass(t.bulletActiveClass + "-main"), r === o && n.prev().addClass(t.bulletActiveClass + "-prev").prev().addClass(t.bulletActiveClass + "-prev-prev"), r === l && n.next().addClass(t.bulletActiveClass + "-next").next().addClass(t.bulletActiveClass + "-next-next"))
                                });
                                else {
                                    var c = h.eq(s),
                                        u = c.index();
                                    if (c.addClass(t.bulletActiveClass), t.dynamicBullets) {
                                        for (var p = h.eq(o), f = h.eq(l), v = o; v <= l; v += 1) h.eq(v).addClass(t.bulletActiveClass + "-main");
                                        if (this.params.loop)
                                            if (u >= h.length - t.dynamicMainBullets) {
                                                for (var m = t.dynamicMainBullets; m >= 0; m -= 1) h.eq(h.length - m).addClass(t.bulletActiveClass + "-main");
                                                h.eq(h.length - t.dynamicMainBullets - 1).addClass(t.bulletActiveClass + "-prev")
                                            } else p.prev().addClass(t.bulletActiveClass + "-prev").prev().addClass(t.bulletActiveClass + "-prev-prev"), f.next().addClass(t.bulletActiveClass + "-next").next().addClass(t.bulletActiveClass + "-next-next");
                                        else p.prev().addClass(t.bulletActiveClass + "-prev").prev().addClass(t.bulletActiveClass + "-prev-prev"), f.next().addClass(t.bulletActiveClass + "-next").next().addClass(t.bulletActiveClass + "-next-next")
                                    }
                                } if (t.dynamicBullets) {
                                    var g = Math.min(h.length, t.dynamicMainBullets + 4),
                                        b = (this.pagination.bulletSize * g - this.pagination.bulletSize) / 2 - d * this.pagination.bulletSize,
                                        w = e ? "right" : "left";
                                    h.css(this.isHorizontal() ? w : "top", b + "px")
                                }
                            }
                            if ("fraction" === t.type && (n.find("." + t.currentClass).text(t.formatFractionCurrent(s + 1)), n.find("." + t.totalClass).text(t.formatFractionTotal(r))), "progressbar" === t.type) {
                                var y;
                                y = t.progressbarOpposite ? this.isHorizontal() ? "vertical" : "horizontal" : this.isHorizontal() ? "horizontal" : "vertical";
                                var x = (s + 1) / r,
                                    C = 1,
                                    T = 1;
                                "horizontal" === y ? C = x : T = x, n.find("." + t.progressbarFillClass).transform("translate3d(0,0,0) scaleX(" + C + ") scaleY(" + T + ")").transition(this.params.speed)
                            }
                            "custom" === t.type && t.renderCustom ? (n.html(t.renderCustom(this, s + 1, r)), this.emit("paginationRender", this, n[0])) : this.emit("paginationUpdate", this, n[0]), n[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](t.lockClass)
                        }
                    }, render: function () {
                        var e = this.params.pagination;
                        if (e.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
                            var t = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length,
                                i = this.pagination.$el,
                                s = "";
                            if ("bullets" === e.type) {
                                for (var a = this.params.loop ? Math.ceil((t - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length, n = 0; n < a; n += 1) e.renderBullet ? s += e.renderBullet.call(this, n, e.bulletClass) : s += "<" + e.bulletElement + ' class="' + e.bulletClass + '"></' + e.bulletElement + ">";
                                i.html(s), this.pagination.bullets = i.find("." + e.bulletClass)
                            }
                            "fraction" === e.type && (s = e.renderFraction ? e.renderFraction.call(this, e.currentClass, e.totalClass) : '<span class="' + e.currentClass + '"></span> / <span class="' + e.totalClass + '"></span>', i.html(s)), "progressbar" === e.type && (s = e.renderProgressbar ? e.renderProgressbar.call(this, e.progressbarFillClass) : '<span class="' + e.progressbarFillClass + '"></span>', i.html(s)), "custom" !== e.type && this.emit("paginationRender", this.pagination.$el[0])
                        }
                    }, init: function () {
                        var e = this,
                            t = e.params.pagination;
                        if (t.el) {
                            var s = i(t.el);
                            0 !== s.length && (e.params.uniqueNavElements && "string" == typeof t.el && s.length > 1 && (s = e.$el.find(t.el)), "bullets" === t.type && t.clickable && s.addClass(t.clickableClass), s.addClass(t.modifierClass + t.type), "bullets" === t.type && t.dynamicBullets && (s.addClass("" + t.modifierClass + t.type + "-dynamic"), e.pagination.dynamicBulletIndex = 0, t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)), "progressbar" === t.type && t.progressbarOpposite && s.addClass(t.progressbarOppositeClass), t.clickable && s.on("click", "." + t.bulletClass, function (t) {
                                t.preventDefault();
                                var s = i(this).index() * e.params.slidesPerGroup;
                                e.params.loop && (s += e.loopedSlides), e.slideTo(s)
                            }), g.extend(e.pagination, {
                                $el: s,
                                el: s[0]
                            }))
                        }
                    }, destroy: function () {
                        var e = this.params.pagination;
                        if (e.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
                            var t = this.pagination.$el;
                            t.removeClass(e.hiddenClass), t.removeClass(e.modifierClass + e.type), this.pagination.bullets && this.pagination.bullets.removeClass(e.bulletActiveClass), e.clickable && t.off("click", "." + e.bulletClass)
                        }
                    }
                },
                de = {
                    setTranslate: function () {
                        if (this.params.scrollbar.el && this.scrollbar.el) {
                            var e = this.scrollbar,
                                t = this.rtlTranslate,
                                i = this.progress,
                                s = e.dragSize,
                                a = e.trackSize,
                                n = e.$dragEl,
                                r = e.$el,
                                o = this.params.scrollbar,
                                l = s,
                                d = (a - s) * i;
                            t ? (d = -d) > 0 ? (l = s - d, d = 0) : -d + s > a && (l = a + d) : d < 0 ? (l = s + d, d = 0) : d + s > a && (l = a - d), this.isHorizontal() ? (n.transform("translate3d(" + d + "px, 0, 0)"), n[0].style.width = l + "px") : (n.transform("translate3d(0px, " + d + "px, 0)"), n[0].style.height = l + "px"), o.hide && (clearTimeout(this.scrollbar.timeout), r[0].style.opacity = 1, this.scrollbar.timeout = setTimeout(function () {
                                r[0].style.opacity = 0, r.transition(400)
                            }, 1e3))
                        }
                    }, setTransition: function (e) {
                        this.params.scrollbar.el && this.scrollbar.el && this.scrollbar.$dragEl.transition(e)
                    }, updateSize: function () {
                        if (this.params.scrollbar.el && this.scrollbar.el) {
                            var e = this.scrollbar,
                                t = e.$dragEl,
                                i = e.$el;
                            t[0].style.width = "", t[0].style.height = "";
                            var s, a = this.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight,
                                n = this.size / this.virtualSize,
                                r = n * (a / this.size);
                            s = "auto" === this.params.scrollbar.dragSize ? a * n : parseInt(this.params.scrollbar.dragSize, 10), this.isHorizontal() ? t[0].style.width = s + "px" : t[0].style.height = s + "px", i[0].style.display = n >= 1 ? "none" : "", this.params.scrollbar.hide && (i[0].style.opacity = 0), g.extend(e, {
                                trackSize: a,
                                divider: n,
                                moveDivider: r,
                                dragSize: s
                            }), e.$el[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](this.params.scrollbar.lockClass)
                        }
                    }, getPointerPosition: function (e) {
                        return this.isHorizontal() ? "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientX : e.clientX : "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientY : e.clientY
                    }, setDragPosition: function (e) {
                        var t, i = this.scrollbar,
                            s = this.rtlTranslate,
                            a = i.$el,
                            n = i.dragSize,
                            r = i.trackSize,
                            o = i.dragStartPos;
                        t = (i.getPointerPosition(e) - a.offset()[this.isHorizontal() ? "left" : "top"] - (null !== o ? o : n / 2)) / (r - n), t = Math.max(Math.min(t, 1), 0), s && (t = 1 - t);
                        var l = this.minTranslate() + (this.maxTranslate() - this.minTranslate()) * t;
                        this.updateProgress(l), this.setTranslate(l), this.updateActiveIndex(), this.updateSlidesClasses()
                    }, onDragStart: function (e) {
                        var t = this.params.scrollbar,
                            i = this.scrollbar,
                            s = this.$wrapperEl,
                            a = i.$el,
                            n = i.$dragEl;
                        this.scrollbar.isTouched = !0, this.scrollbar.dragStartPos = e.target === n[0] || e.target === n ? i.getPointerPosition(e) - e.target.getBoundingClientRect()[this.isHorizontal() ? "left" : "top"] : null, e.preventDefault(), e.stopPropagation(), s.transition(100), n.transition(100), i.setDragPosition(e), clearTimeout(this.scrollbar.dragTimeout), a.transition(0), t.hide && a.css("opacity", 1), this.params.cssMode && this.$wrapperEl.css("scroll-snap-type", "none"), this.emit("scrollbarDragStart", e)
                    }, onDragMove: function (e) {
                        var t = this.scrollbar,
                            i = this.$wrapperEl,
                            s = t.$el,
                            a = t.$dragEl;
                        this.scrollbar.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, t.setDragPosition(e), i.transition(0), s.transition(0), a.transition(0), this.emit("scrollbarDragMove", e))
                    }, onDragEnd: function (e) {
                        var t = this.params.scrollbar,
                            i = this.scrollbar,
                            s = this.$wrapperEl,
                            a = i.$el;
                        this.scrollbar.isTouched && (this.scrollbar.isTouched = !1, this.params.cssMode && (this.$wrapperEl.css("scroll-snap-type", ""), s.transition("")), t.hide && (clearTimeout(this.scrollbar.dragTimeout), this.scrollbar.dragTimeout = g.nextTick(function () {
                            a.css("opacity", 0), a.transition(400)
                        }, 1e3)), this.emit("scrollbarDragEnd", e), t.snapOnRelease && this.slideToClosest())
                    }, enableDraggable: function () {
                        if (this.params.scrollbar.el) {
                            var e = this.scrollbar,
                                t = this.touchEventsTouch,
                                i = this.touchEventsDesktop,
                                s = this.params,
                                a = e.$el[0],
                                n = !(!b.passiveListener || !s.passiveListeners) && {
                                    passive: !1,
                                    capture: !1
                                },
                                r = !(!b.passiveListener || !s.passiveListeners) && {
                                    passive: !0,
                                    capture: !1
                                };
                            b.touch ? (a.addEventListener(t.start, this.scrollbar.onDragStart, n), a.addEventListener(t.move, this.scrollbar.onDragMove, n), a.addEventListener(t.end, this.scrollbar.onDragEnd, r)) : (a.addEventListener(i.start, this.scrollbar.onDragStart, n), u.addEventListener(i.move, this.scrollbar.onDragMove, n), u.addEventListener(i.end, this.scrollbar.onDragEnd, r))
                        }
                    }, disableDraggable: function () {
                        if (this.params.scrollbar.el) {
                            var e = this.scrollbar,
                                t = this.touchEventsTouch,
                                i = this.touchEventsDesktop,
                                s = this.params,
                                a = e.$el[0],
                                n = !(!b.passiveListener || !s.passiveListeners) && {
                                    passive: !1,
                                    capture: !1
                                },
                                r = !(!b.passiveListener || !s.passiveListeners) && {
                                    passive: !0,
                                    capture: !1
                                };
                            b.touch ? (a.removeEventListener(t.start, this.scrollbar.onDragStart, n), a.removeEventListener(t.move, this.scrollbar.onDragMove, n), a.removeEventListener(t.end, this.scrollbar.onDragEnd, r)) : (a.removeEventListener(i.start, this.scrollbar.onDragStart, n), u.removeEventListener(i.move, this.scrollbar.onDragMove, n), u.removeEventListener(i.end, this.scrollbar.onDragEnd, r))
                        }
                    }, init: function () {
                        if (this.params.scrollbar.el) {
                            var e = this.scrollbar,
                                t = this.$el,
                                s = this.params.scrollbar,
                                a = i(s.el);
                            this.params.uniqueNavElements && "string" == typeof s.el && a.length > 1 && 1 === t.find(s.el).length && (a = t.find(s.el));
                            var n = a.find("." + this.params.scrollbar.dragClass);
                            0 === n.length && (n = i('<div class="' + this.params.scrollbar.dragClass + '"></div>'), a.append(n)), g.extend(e, {
                                $el: a,
                                el: a[0],
                                $dragEl: n,
                                dragEl: n[0]
                            }), s.draggable && e.enableDraggable()
                        }
                    }, destroy: function () {
                        this.scrollbar.disableDraggable()
                    }
                },
                he = {
                    setTransform: function (e, t) {
                        var s = this.rtl,
                            a = i(e),
                            n = s ? -1 : 1,
                            r = a.attr("data-swiper-parallax") || "0",
                            o = a.attr("data-swiper-parallax-x"),
                            l = a.attr("data-swiper-parallax-y"),
                            d = a.attr("data-swiper-parallax-scale"),
                            h = a.attr("data-swiper-parallax-opacity");
                        if (o || l ? (o = o || "0", l = l || "0") : this.isHorizontal() ? (o = r, l = "0") : (l = r, o = "0"), o = o.indexOf("%") >= 0 ? parseInt(o, 10) * t * n + "%" : o * t * n + "px", l = l.indexOf("%") >= 0 ? parseInt(l, 10) * t + "%" : l * t + "px", null != h) {
                            var c = h - (h - 1) * (1 - Math.abs(t));
                            a[0].style.opacity = c
                        }
                        if (null == d) a.transform("translate3d(" + o + ", " + l + ", 0px)");
                        else {
                            var u = d - (d - 1) * (1 - Math.abs(t));
                            a.transform("translate3d(" + o + ", " + l + ", 0px) scale(" + u + ")")
                        }
                    }, setTranslate: function () {
                        var e = this,
                            t = e.$el,
                            s = e.slides,
                            a = e.progress,
                            n = e.snapGrid;
                        t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, i) {
                            e.parallax.setTransform(i, a)
                        }), s.each(function (t, s) {
                            var r = s.progress;
                            e.params.slidesPerGroup > 1 && "auto" !== e.params.slidesPerView && (r += Math.ceil(t / 2) - a * (n.length - 1)), r = Math.min(Math.max(r, -1), 1), i(s).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, i) {
                                e.parallax.setTransform(i, r)
                            })
                        })
                    }, setTransition: function (e) {
                        void 0 === e && (e = this.params.speed), this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, s) {
                            var a = i(s),
                                n = parseInt(a.attr("data-swiper-parallax-duration"), 10) || e;
                            0 === e && (n = 0), a.transition(n)
                        })
                    }
                },
                ce = {
                    getDistanceBetweenTouches: function (e) {
                        if (e.targetTouches.length < 2) return 1;
                        var t = e.targetTouches[0].pageX,
                            i = e.targetTouches[0].pageY,
                            s = e.targetTouches[1].pageX,
                            a = e.targetTouches[1].pageY;
                        return Math.sqrt(Math.pow(s - t, 2) + Math.pow(a - i, 2))
                    }, onGestureStart: function (e) {
                        var t = this.params.zoom,
                            s = this.zoom,
                            a = s.gesture;
                        if (s.fakeGestureTouched = !1, s.fakeGestureMoved = !1, !b.gestures) {
                            if ("touchstart" !== e.type || "touchstart" === e.type && e.targetTouches.length < 2) return;
                            s.fakeGestureTouched = !0, a.scaleStart = ce.getDistanceBetweenTouches(e)
                        }
                        a.$slideEl && a.$slideEl.length || (a.$slideEl = i(e.target).closest("." + this.params.slideClass), 0 === a.$slideEl.length && (a.$slideEl = this.slides.eq(this.activeIndex)), a.$imageEl = a.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), a.$imageWrapEl = a.$imageEl.parent("." + t.containerClass), a.maxRatio = a.$imageWrapEl.attr("data-swiper-zoom") || t.maxRatio, 0 !== a.$imageWrapEl.length) ? (a.$imageEl && a.$imageEl.transition(0), this.zoom.isScaling = !0) : a.$imageEl = void 0
                    }, onGestureChange: function (e) {
                        var t = this.params.zoom,
                            i = this.zoom,
                            s = i.gesture;
                        if (!b.gestures) {
                            if ("touchmove" !== e.type || "touchmove" === e.type && e.targetTouches.length < 2) return;
                            i.fakeGestureMoved = !0, s.scaleMove = ce.getDistanceBetweenTouches(e)
                        }
                        s.$imageEl && 0 !== s.$imageEl.length && (i.scale = b.gestures ? e.scale * i.currentScale : s.scaleMove / s.scaleStart * i.currentScale, i.scale > s.maxRatio && (i.scale = s.maxRatio - 1 + Math.pow(i.scale - s.maxRatio + 1, .5)), i.scale < t.minRatio && (i.scale = t.minRatio + 1 - Math.pow(t.minRatio - i.scale + 1, .5)), s.$imageEl.transform("translate3d(0,0,0) scale(" + i.scale + ")"))
                    }, onGestureEnd: function (e) {
                        var t = this.params.zoom,
                            i = this.zoom,
                            s = i.gesture;
                        if (!b.gestures) {
                            if (!i.fakeGestureTouched || !i.fakeGestureMoved) return;
                            if ("touchend" !== e.type || "touchend" === e.type && e.changedTouches.length < 2 && !X.android) return;
                            i.fakeGestureTouched = !1, i.fakeGestureMoved = !1
                        }
                        s.$imageEl && 0 !== s.$imageEl.length && (i.scale = Math.max(Math.min(i.scale, s.maxRatio), t.minRatio), s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale(" + i.scale + ")"), i.currentScale = i.scale, i.isScaling = !1, 1 === i.scale && (s.$slideEl = void 0))
                    }, onTouchStart: function (e) {
                        var t = this.zoom,
                            i = t.gesture,
                            s = t.image;
                        i.$imageEl && 0 !== i.$imageEl.length && (s.isTouched || (X.android && e.cancelable && e.preventDefault(), s.isTouched = !0, s.touchesStart.x = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesStart.y = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY))
                    }, onTouchMove: function (e) {
                        var t = this.zoom,
                            i = t.gesture,
                            s = t.image,
                            a = t.velocity;
                        if (i.$imageEl && 0 !== i.$imageEl.length && (this.allowClick = !1, s.isTouched && i.$slideEl)) {
                            s.isMoved || (s.width = i.$imageEl[0].offsetWidth, s.height = i.$imageEl[0].offsetHeight, s.startX = g.getTranslate(i.$imageWrapEl[0], "x") || 0, s.startY = g.getTranslate(i.$imageWrapEl[0], "y") || 0, i.slideWidth = i.$slideEl[0].offsetWidth, i.slideHeight = i.$slideEl[0].offsetHeight, i.$imageWrapEl.transition(0), this.rtl && (s.startX = -s.startX, s.startY = -s.startY));
                            var n = s.width * t.scale,
                                r = s.height * t.scale;
                            if (!(n < i.slideWidth && r < i.slideHeight)) {
                                if (s.minX = Math.min(i.slideWidth / 2 - n / 2, 0), s.maxX = -s.minX, s.minY = Math.min(i.slideHeight / 2 - r / 2, 0), s.maxY = -s.minY, s.touchesCurrent.x = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesCurrent.y = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, !s.isMoved && !t.isScaling) {
                                    if (this.isHorizontal() && (Math.floor(s.minX) === Math.floor(s.startX) && s.touchesCurrent.x < s.touchesStart.x || Math.floor(s.maxX) === Math.floor(s.startX) && s.touchesCurrent.x > s.touchesStart.x)) return void(s.isTouched = !1);
                                    if (!this.isHorizontal() && (Math.floor(s.minY) === Math.floor(s.startY) && s.touchesCurrent.y < s.touchesStart.y || Math.floor(s.maxY) === Math.floor(s.startY) && s.touchesCurrent.y > s.touchesStart.y)) return void(s.isTouched = !1)
                                }
                                e.cancelable && e.preventDefault(), e.stopPropagation(), s.isMoved = !0, s.currentX = s.touchesCurrent.x - s.touchesStart.x + s.startX, s.currentY = s.touchesCurrent.y - s.touchesStart.y + s.startY, s.currentX < s.minX && (s.currentX = s.minX + 1 - Math.pow(s.minX - s.currentX + 1, .8)), s.currentX > s.maxX && (s.currentX = s.maxX - 1 + Math.pow(s.currentX - s.maxX + 1, .8)), s.currentY < s.minY && (s.currentY = s.minY + 1 - Math.pow(s.minY - s.currentY + 1, .8)), s.currentY > s.maxY && (s.currentY = s.maxY - 1 + Math.pow(s.currentY - s.maxY + 1, .8)), a.prevPositionX || (a.prevPositionX = s.touchesCurrent.x), a.prevPositionY || (a.prevPositionY = s.touchesCurrent.y), a.prevTime || (a.prevTime = Date.now()), a.x = (s.touchesCurrent.x - a.prevPositionX) / (Date.now() - a.prevTime) / 2, a.y = (s.touchesCurrent.y - a.prevPositionY) / (Date.now() - a.prevTime) / 2, Math.abs(s.touchesCurrent.x - a.prevPositionX) < 2 && (a.x = 0), Math.abs(s.touchesCurrent.y - a.prevPositionY) < 2 && (a.y = 0), a.prevPositionX = s.touchesCurrent.x, a.prevPositionY = s.touchesCurrent.y, a.prevTime = Date.now(), i.$imageWrapEl.transform("translate3d(" + s.currentX + "px, " + s.currentY + "px,0)")
                            }
                        }
                    }, onTouchEnd: function () {
                        var e = this.zoom,
                            t = e.gesture,
                            i = e.image,
                            s = e.velocity;
                        if (t.$imageEl && 0 !== t.$imageEl.length) {
                            if (!i.isTouched || !i.isMoved) return i.isTouched = !1, void(i.isMoved = !1);
                            i.isTouched = !1, i.isMoved = !1;
                            var a = 300,
                                n = 300,
                                r = s.x * a,
                                o = i.currentX + r,
                                l = s.y * n,
                                d = i.currentY + l;
                            0 !== s.x && (a = Math.abs((o - i.currentX) / s.x)), 0 !== s.y && (n = Math.abs((d - i.currentY) / s.y));
                            var h = Math.max(a, n);
                            i.currentX = o, i.currentY = d;
                            var c = i.width * e.scale,
                                u = i.height * e.scale;
                            i.minX = Math.min(t.slideWidth / 2 - c / 2, 0), i.maxX = -i.minX, i.minY = Math.min(t.slideHeight / 2 - u / 2, 0), i.maxY = -i.minY, i.currentX = Math.max(Math.min(i.currentX, i.maxX), i.minX), i.currentY = Math.max(Math.min(i.currentY, i.maxY), i.minY), t.$imageWrapEl.transition(h).transform("translate3d(" + i.currentX + "px, " + i.currentY + "px,0)")
                        }
                    }, onTransitionEnd: function () {
                        var e = this.zoom,
                            t = e.gesture;
                        t.$slideEl && this.previousIndex !== this.activeIndex && (t.$imageEl && t.$imageEl.transform("translate3d(0,0,0) scale(1)"), t.$imageWrapEl && t.$imageWrapEl.transform("translate3d(0,0,0)"), e.scale = 1, e.currentScale = 1, t.$slideEl = void 0, t.$imageEl = void 0, t.$imageWrapEl = void 0)
                    }, toggle: function (e) {
                        var t = this.zoom;
                        t.scale && 1 !== t.scale ? t.out() : t.in(e)
                    }, in : function (e) {
                        var t, i, s, a, n, r, o, l, d, h, c, u, p, f, v, m, g = this.zoom,
                            b = this.params.zoom,
                            w = g.gesture,
                            y = g.image;
                        w.$slideEl || (this.params.virtual && this.params.virtual.enabled && this.virtual ? w.$slideEl = this.$wrapperEl.children("." + this.params.slideActiveClass) : w.$slideEl = this.slides.eq(this.activeIndex), w.$imageEl = w.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), w.$imageWrapEl = w.$imageEl.parent("." + b.containerClass)), w.$imageEl && 0 !== w.$imageEl.length && (w.$slideEl.addClass("" + b.zoomedSlideClass), void 0 === y.touchesStart.x && e ? (t = "touchend" === e.type ? e.changedTouches[0].pageX : e.pageX, i = "touchend" === e.type ? e.changedTouches[0].pageY : e.pageY) : (t = y.touchesStart.x, i = y.touchesStart.y), g.scale = w.$imageWrapEl.attr("data-swiper-zoom") || b.maxRatio, g.currentScale = w.$imageWrapEl.attr("data-swiper-zoom") || b.maxRatio, e ? (v = w.$slideEl[0].offsetWidth, m = w.$slideEl[0].offsetHeight, s = w.$slideEl.offset().left + v / 2 - t, a = w.$slideEl.offset().top + m / 2 - i, o = w.$imageEl[0].offsetWidth, l = w.$imageEl[0].offsetHeight, d = o * g.scale, h = l * g.scale, p = -(c = Math.min(v / 2 - d / 2, 0)), f = -(u = Math.min(m / 2 - h / 2, 0)), (n = s * g.scale) < c && (n = c), n > p && (n = p), (r = a * g.scale) < u && (r = u), r > f && (r = f)) : (n = 0, r = 0), w.$imageWrapEl.transition(300).transform("translate3d(" + n + "px, " + r + "px,0)"), w.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + g.scale + ")"))
                    }, out: function () {
                        var e = this.zoom,
                            t = this.params.zoom,
                            i = e.gesture;
                        i.$slideEl || (this.params.virtual && this.params.virtual.enabled && this.virtual ? i.$slideEl = this.$wrapperEl.children("." + this.params.slideActiveClass) : i.$slideEl = this.slides.eq(this.activeIndex), i.$imageEl = i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), i.$imageWrapEl = i.$imageEl.parent("." + t.containerClass)), i.$imageEl && 0 !== i.$imageEl.length && (e.scale = 1, e.currentScale = 1, i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), i.$slideEl.removeClass("" + t.zoomedSlideClass), i.$slideEl = void 0)
                    }, enable: function () {
                        var e = this.zoom;
                        if (!e.enabled) {
                            e.enabled = !0;
                            var t = !("touchstart" !== this.touchEvents.start || !b.passiveListener || !this.params.passiveListeners) && {
                                    passive: !0,
                                    capture: !1
                                },
                                i = !b.passiveListener || {
                                    passive: !1,
                                    capture: !0
                                },
                                s = "." + this.params.slideClass;
                            b.gestures ? (this.$wrapperEl.on("gesturestart", s, e.onGestureStart, t), this.$wrapperEl.on("gesturechange", s, e.onGestureChange, t), this.$wrapperEl.on("gestureend", s, e.onGestureEnd, t)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.on(this.touchEvents.start, s, e.onGestureStart, t), this.$wrapperEl.on(this.touchEvents.move, s, e.onGestureChange, i), this.$wrapperEl.on(this.touchEvents.end, s, e.onGestureEnd, t), this.touchEvents.cancel && this.$wrapperEl.on(this.touchEvents.cancel, s, e.onGestureEnd, t)), this.$wrapperEl.on(this.touchEvents.move, "." + this.params.zoom.containerClass, e.onTouchMove, i)
                        }
                    }, disable: function () {
                        var e = this.zoom;
                        if (e.enabled) {
                            this.zoom.enabled = !1;
                            var t = !("touchstart" !== this.touchEvents.start || !b.passiveListener || !this.params.passiveListeners) && {
                                    passive: !0,
                                    capture: !1
                                },
                                i = !b.passiveListener || {
                                    passive: !1,
                                    capture: !0
                                },
                                s = "." + this.params.slideClass;
                            b.gestures ? (this.$wrapperEl.off("gesturestart", s, e.onGestureStart, t), this.$wrapperEl.off("gesturechange", s, e.onGestureChange, t), this.$wrapperEl.off("gestureend", s, e.onGestureEnd, t)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.off(this.touchEvents.start, s, e.onGestureStart, t), this.$wrapperEl.off(this.touchEvents.move, s, e.onGestureChange, i), this.$wrapperEl.off(this.touchEvents.end, s, e.onGestureEnd, t), this.touchEvents.cancel && this.$wrapperEl.off(this.touchEvents.cancel, s, e.onGestureEnd, t)), this.$wrapperEl.off(this.touchEvents.move, "." + this.params.zoom.containerClass, e.onTouchMove, i)
                        }
                    }
                },
                ue = {
                    loadInSlide: function (e, t) {
                        void 0 === t && (t = !0);
                        var s = this,
                            a = s.params.lazy;
                        if (void 0 !== e && 0 !== s.slides.length) {
                            var n = s.virtual && s.params.virtual.enabled ? s.$wrapperEl.children("." + s.params.slideClass + '[data-swiper-slide-index="' + e + '"]') : s.slides.eq(e),
                                r = n.find("." + a.elementClass + ":not(." + a.loadedClass + "):not(." + a.loadingClass + ")");
                            !n.hasClass(a.elementClass) || n.hasClass(a.loadedClass) || n.hasClass(a.loadingClass) || (r = r.add(n[0])), 0 !== r.length && r.each(function (e, r) {
                                var o = i(r);
                                o.addClass(a.loadingClass);
                                var l = o.attr("data-background"),
                                    d = o.attr("data-src"),
                                    h = o.attr("data-srcset"),
                                    c = o.attr("data-sizes"),
                                    u = o.parent("picture");
                                s.loadImage(o[0], d || l, h, c, !1, function () {
                                    if (null != s && s && (!s || s.params) && !s.destroyed) {
                                        if (l ? (o.css("background-image", 'url("' + l + '")'), o.removeAttr("data-background")) : (h && (o.attr("srcset", h), o.removeAttr("data-srcset")), c && (o.attr("sizes", c), o.removeAttr("data-sizes")), u.length && u.children("source").each(function (e, t) {
                                            var s = i(t);
                                            s.attr("data-srcset") && (s.attr("srcset", s.attr("data-srcset")), s.removeAttr("data-srcset"))
                                        }), d && (o.attr("src", d), o.removeAttr("data-src"))), o.addClass(a.loadedClass).removeClass(a.loadingClass), n.find("." + a.preloaderClass).remove(), s.params.loop && t) {
                                            var e = n.attr("data-swiper-slide-index");
                                            if (n.hasClass(s.params.slideDuplicateClass)) {
                                                var r = s.$wrapperEl.children('[data-swiper-slide-index="' + e + '"]:not(.' + s.params.slideDuplicateClass + ")");
                                                s.lazy.loadInSlide(r.index(), !1)
                                            } else {
                                                var p = s.$wrapperEl.children("." + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + e + '"]');
                                                s.lazy.loadInSlide(p.index(), !1)
                                            }
                                        }
                                        s.emit("lazyImageReady", n[0], o[0]), s.params.autoHeight && s.updateAutoHeight()
                                    }
                                }), s.emit("lazyImageLoad", n[0], o[0])
                            })
                        }
                    }, load: function () {
                        function e(e) {
                            if (l) {
                                if (a.children("." + n.slideClass + '[data-swiper-slide-index="' + e + '"]').length) return !0
                            } else if (r[e]) return !0;
                            return !1
                        }

                        function t(e) {
                            return l ? i(e).attr("data-swiper-slide-index") : i(e).index()
                        }
                        var s = this,
                            a = s.$wrapperEl,
                            n = s.params,
                            r = s.slides,
                            o = s.activeIndex,
                            l = s.virtual && n.virtual.enabled,
                            d = n.lazy,
                            h = n.slidesPerView;
                        if ("auto" === h && (h = 0), s.lazy.initialImageLoaded || (s.lazy.initialImageLoaded = !0), s.params.watchSlidesVisibility) a.children("." + n.slideVisibleClass).each(function (e, t) {
                            var a = l ? i(t).attr("data-swiper-slide-index") : i(t).index();
                            s.lazy.loadInSlide(a)
                        });
                        else if (h > 1)
                            for (var c = o; c < o + h; c += 1) e(c) && s.lazy.loadInSlide(c);
                        else s.lazy.loadInSlide(o); if (d.loadPrevNext)
                            if (h > 1 || d.loadPrevNextAmount && d.loadPrevNextAmount > 1) {
                                for (var u = d.loadPrevNextAmount, p = h, f = Math.min(o + p + Math.max(u, p), r.length), v = Math.max(o - Math.max(p, u), 0), m = o + h; m < f; m += 1) e(m) && s.lazy.loadInSlide(m);
                                for (var g = v; g < o; g += 1) e(g) && s.lazy.loadInSlide(g)
                            } else {
                                var b = a.children("." + n.slideNextClass);
                                b.length > 0 && s.lazy.loadInSlide(t(b));
                                var w = a.children("." + n.slidePrevClass);
                                w.length > 0 && s.lazy.loadInSlide(t(w))
                            }
                    }
                },
                pe = {
                    LinearSpline: function (e, t) {
                        var i, s, a, n, r, o = function (e, t) {
                            for (s = -1, i = e.length; i - s > 1;) e[a = i + s >> 1] <= t ? s = a : i = a;
                            return i
                        };
                        return this.x = e, this.y = t, this.lastIndex = e.length - 1, this.interpolate = function (e) {
                            return e ? (r = o(this.x, e), n = r - 1, (e - this.x[n]) * (this.y[r] - this.y[n]) / (this.x[r] - this.x[n]) + this.y[n]) : 0
                        }, this
                    }, getInterpolateFunction: function (e) {
                        this.controller.spline || (this.controller.spline = this.params.loop ? new pe.LinearSpline(this.slidesGrid, e.slidesGrid) : new pe.LinearSpline(this.snapGrid, e.snapGrid))
                    }, setTranslate: function (e, t) {
                        function i(e) {
                            var t = n.rtlTranslate ? -n.translate : n.translate;
                            "slide" === n.params.controller.by && (n.controller.getInterpolateFunction(e), a = -n.controller.spline.interpolate(-t)), a && "container" !== n.params.controller.by || (s = (e.maxTranslate() - e.minTranslate()) / (n.maxTranslate() - n.minTranslate()), a = (t - n.minTranslate()) * s + e.minTranslate()), n.params.controller.inverse && (a = e.maxTranslate() - a), e.updateProgress(a), e.setTranslate(a, n), e.updateActiveIndex(), e.updateSlidesClasses()
                        }
                        var s, a, n = this,
                            r = n.controller.control;
                        if (Array.isArray(r))
                            for (var o = 0; o < r.length; o += 1) r[o] !== t && r[o] instanceof U && i(r[o]);
                        else r instanceof U && t !== r && i(r)
                    }, setTransition: function (e, t) {
                        function i(t) {
                            t.setTransition(e, a), 0 !== e && (t.transitionStart(), t.params.autoHeight && g.nextTick(function () {
                                t.updateAutoHeight()
                            }), t.$wrapperEl.transitionEnd(function () {
                                n && (t.params.loop && "slide" === a.params.controller.by && t.loopFix(), t.transitionEnd())
                            }))
                        }
                        var s, a = this,
                            n = a.controller.control;
                        if (Array.isArray(n))
                            for (s = 0; s < n.length; s += 1) n[s] !== t && n[s] instanceof U && i(n[s]);
                        else n instanceof U && t !== n && i(n)
                    }
                },
                fe = {
                    makeElFocusable: function (e) {
                        return e.attr("tabIndex", "0"), e
                    }, makeElNotFocusable: function (e) {
                        return e.attr("tabIndex", "-1"), e
                    }, addElRole: function (e, t) {
                        return e.attr("role", t), e
                    }, addElLabel: function (e, t) {
                        return e.attr("aria-label", t), e
                    }, disableEl: function (e) {
                        return e.attr("aria-disabled", !0), e
                    }, enableEl: function (e) {
                        return e.attr("aria-disabled", !1), e
                    }, onEnterKey: function (e) {
                        var t = this.params.a11y;
                        if (13 === e.keyCode) {
                            var s = i(e.target);
                            this.navigation && this.navigation.$nextEl && s.is(this.navigation.$nextEl) && (this.isEnd && !this.params.loop || this.slideNext(), this.isEnd ? this.a11y.notify(t.lastSlideMessage) : this.a11y.notify(t.nextSlideMessage)), this.navigation && this.navigation.$prevEl && s.is(this.navigation.$prevEl) && (this.isBeginning && !this.params.loop || this.slidePrev(), this.isBeginning ? this.a11y.notify(t.firstSlideMessage) : this.a11y.notify(t.prevSlideMessage)), this.pagination && s.is("." + this.params.pagination.bulletClass) && s[0].click()
                        }
                    }, notify: function (e) {
                        var t = this.a11y.liveRegion;
                        0 !== t.length && (t.html(""), t.html(e))
                    }, updateNavigation: function () {
                        if (!this.params.loop && this.navigation) {
                            var e = this.navigation,
                                t = e.$nextEl,
                                i = e.$prevEl;
                            i && i.length > 0 && (this.isBeginning ? (this.a11y.disableEl(i), this.a11y.makeElNotFocusable(i)) : (this.a11y.enableEl(i), this.a11y.makeElFocusable(i))), t && t.length > 0 && (this.isEnd ? (this.a11y.disableEl(t), this.a11y.makeElNotFocusable(t)) : (this.a11y.enableEl(t), this.a11y.makeElFocusable(t)))
                        }
                    }, updatePagination: function () {
                        var e = this,
                            t = e.params.a11y;
                        e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.bullets.each(function (s, a) {
                            var n = i(a);
                            e.a11y.makeElFocusable(n), e.a11y.addElRole(n, "button"), e.a11y.addElLabel(n, t.paginationBulletMessage.replace(/\{\{index\}\}/, n.index() + 1))
                        })
                    }, init: function () {
                        this.$el.append(this.a11y.liveRegion);
                        var e, t, i = this.params.a11y;
                        this.navigation && this.navigation.$nextEl && (e = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (t = this.navigation.$prevEl), e && (this.a11y.makeElFocusable(e), this.a11y.addElRole(e, "button"), this.a11y.addElLabel(e, i.nextSlideMessage), e.on("keydown", this.a11y.onEnterKey)), t && (this.a11y.makeElFocusable(t), this.a11y.addElRole(t, "button"), this.a11y.addElLabel(t, i.prevSlideMessage), t.on("keydown", this.a11y.onEnterKey)), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.on("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey)
                    }, destroy: function () {
                        var e, t;
                        this.a11y.liveRegion && this.a11y.liveRegion.length > 0 && this.a11y.liveRegion.remove(), this.navigation && this.navigation.$nextEl && (e = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (t = this.navigation.$prevEl), e && e.off("keydown", this.a11y.onEnterKey), t && t.off("keydown", this.a11y.onEnterKey), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.off("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey)
                    }
                },
                ve = {
                    init: function () {
                        if (this.params.history) {
                            if (!f.history || !f.history.pushState) return this.params.history.enabled = !1, void(this.params.hashNavigation.enabled = !0);
                            var e = this.history;
                            e.initialized = !0, e.paths = ve.getPathValues(), (e.paths.key || e.paths.value) && (e.scrollToSlide(0, e.paths.value, this.params.runCallbacksOnInit), this.params.history.replaceState || f.addEventListener("popstate", this.history.setHistoryPopState))
                        }
                    }, destroy: function () {
                        this.params.history.replaceState || f.removeEventListener("popstate", this.history.setHistoryPopState)
                    }, setHistoryPopState: function () {
                        this.history.paths = ve.getPathValues(), this.history.scrollToSlide(this.params.speed, this.history.paths.value, !1)
                    }, getPathValues: function () {
                        var e = f.location.pathname.slice(1).split("/").filter(function (e) {
                                return "" !== e
                            }),
                            t = e.length;
                        return {
                            key: e[t - 2],
                            value: e[t - 1]
                        }
                    }, setHistory: function (e, t) {
                        if (this.history.initialized && this.params.history.enabled) {
                            var i = this.slides.eq(t),
                                s = ve.slugify(i.attr("data-history"));
                            f.location.pathname.includes(e) || (s = e + "/" + s);
                            var a = f.history.state;
                            a && a.value === s || (this.params.history.replaceState ? f.history.replaceState({
                                value: s
                            }, null, s) : f.history.pushState({
                                value: s
                            }, null, s))
                        }
                    }, slugify: function (e) {
                        return e.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "")
                    }, scrollToSlide: function (e, t, i) {
                        if (t)
                            for (var s = 0, a = this.slides.length; s < a; s += 1) {
                                var n = this.slides.eq(s);
                                if (ve.slugify(n.attr("data-history")) === t && !n.hasClass(this.params.slideDuplicateClass)) {
                                    var r = n.index();
                                    this.slideTo(r, e, i)
                                }
                            } else this.slideTo(0, e, i)
                    }
                },
                me = {
                    onHashCange: function () {
                        this.emit("hashChange");
                        var e = u.location.hash.replace("#", "");
                        if (e !== this.slides.eq(this.activeIndex).attr("data-hash")) {
                            var t = this.$wrapperEl.children("." + this.params.slideClass + '[data-hash="' + e + '"]').index();
                            if (void 0 === t) return;
                            this.slideTo(t)
                        }
                    }, setHash: function () {
                        if (this.hashNavigation.initialized && this.params.hashNavigation.enabled)
                            if (this.params.hashNavigation.replaceState && f.history && f.history.replaceState) f.history.replaceState(null, null, "#" + this.slides.eq(this.activeIndex).attr("data-hash") || ""), this.emit("hashSet");
                            else {
                                var e = this.slides.eq(this.activeIndex),
                                    t = e.attr("data-hash") || e.attr("data-history");
                                u.location.hash = t || "", this.emit("hashSet")
                            }
                    }, init: function () {
                        if (!(!this.params.hashNavigation.enabled || this.params.history && this.params.history.enabled)) {
                            this.hashNavigation.initialized = !0;
                            var e = u.location.hash.replace("#", "");
                            if (e)
                                for (var t = 0, s = this.slides.length; t < s; t += 1) {
                                    var a = this.slides.eq(t);
                                    if ((a.attr("data-hash") || a.attr("data-history")) === e && !a.hasClass(this.params.slideDuplicateClass)) {
                                        var n = a.index();
                                        this.slideTo(n, 0, this.params.runCallbacksOnInit, !0)
                                    }
                                }
                            this.params.hashNavigation.watchState && i(f).on("hashchange", this.hashNavigation.onHashCange)
                        }
                    }, destroy: function () {
                        this.params.hashNavigation.watchState && i(f).off("hashchange", this.hashNavigation.onHashCange)
                    }
                },
                ge = {
                    run: function () {
                        var e = this,
                            t = e.slides.eq(e.activeIndex),
                            i = e.params.autoplay.delay;
                        t.attr("data-swiper-autoplay") && (i = t.attr("data-swiper-autoplay") || e.params.autoplay.delay), clearTimeout(e.autoplay.timeout), e.autoplay.timeout = g.nextTick(function () {
                            e.params.autoplay.reverseDirection ? e.params.loop ? (e.loopFix(), e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.isBeginning ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(e.slides.length - 1, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.params.loop ? (e.loopFix(), e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")) : e.isEnd ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(0, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")), e.params.cssMode && e.autoplay.running && e.autoplay.run()
                        }, i)
                    }, start: function () {
                        return void 0 === this.autoplay.timeout && !this.autoplay.running && (this.autoplay.running = !0, this.emit("autoplayStart"), this.autoplay.run(), !0)
                    }, stop: function () {
                        return !!this.autoplay.running && void 0 !== this.autoplay.timeout && (this.autoplay.timeout && (clearTimeout(this.autoplay.timeout), this.autoplay.timeout = void 0), this.autoplay.running = !1, this.emit("autoplayStop"), !0)
                    }, pause: function (e) {
                        this.autoplay.running && (this.autoplay.paused || (this.autoplay.timeout && clearTimeout(this.autoplay.timeout), this.autoplay.paused = !0, 0 !== e && this.params.autoplay.waitForTransition ? (this.$wrapperEl[0].addEventListener("transitionend", this.autoplay.onTransitionEnd), this.$wrapperEl[0].addEventListener("webkitTransitionEnd", this.autoplay.onTransitionEnd)) : (this.autoplay.paused = !1, this.autoplay.run())))
                    }
                },
                be = {
                    setTranslate: function () {
                        for (var e = this.slides, t = 0; t < e.length; t += 1) {
                            var i = this.slides.eq(t),
                                s = -i[0].swiperSlideOffset;
                            this.params.virtualTranslate || (s -= this.translate);
                            var a = 0;
                            this.isHorizontal() || (a = s, s = 0);
                            var n = this.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(i[0].progress), 0) : 1 + Math.min(Math.max(i[0].progress, -1), 0);
                            i.css({
                                opacity: n
                            }).transform("translate3d(" + s + "px, " + a + "px, 0px)")
                        }
                    }, setTransition: function (e) {
                        var t = this,
                            i = t.slides,
                            s = t.$wrapperEl;
                        if (i.transition(e), t.params.virtualTranslate && 0 !== e) {
                            var a = !1;
                            i.transitionEnd(function () {
                                if (!a && t && !t.destroyed) {
                                    a = !0, t.animating = !1;
                                    for (var e = ["webkitTransitionEnd", "transitionend"], i = 0; i < e.length; i += 1) s.trigger(e[i])
                                }
                            })
                        }
                    }
                },
                we = {
                    setTranslate: function () {
                        var e, t = this.$el,
                            s = this.$wrapperEl,
                            a = this.slides,
                            n = this.width,
                            r = this.height,
                            o = this.rtlTranslate,
                            l = this.size,
                            d = this.params.cubeEffect,
                            h = this.isHorizontal(),
                            c = this.virtual && this.params.virtual.enabled,
                            u = 0;
                        d.shadow && (h ? (0 === (e = s.find(".swiper-cube-shadow")).length && (e = i('<div class="swiper-cube-shadow"></div>'), s.append(e)), e.css({
                            height: n + "px"
                        })) : 0 === (e = t.find(".swiper-cube-shadow")).length && (e = i('<div class="swiper-cube-shadow"></div>'), t.append(e)));
                        for (var p = 0; p < a.length; p += 1) {
                            var f = a.eq(p),
                                v = p;
                            c && (v = parseInt(f.attr("data-swiper-slide-index"), 10));
                            var m = 90 * v,
                                g = Math.floor(m / 360);
                            o && (m = -m, g = Math.floor(-m / 360));
                            var b = Math.max(Math.min(f[0].progress, 1), -1),
                                w = 0,
                                y = 0,
                                x = 0;
                            v % 4 == 0 ? (w = 4 * -g * l, x = 0) : (v - 1) % 4 == 0 ? (w = 0, x = 4 * -g * l) : (v - 2) % 4 == 0 ? (w = l + 4 * g * l, x = l) : (v - 3) % 4 == 0 && (w = -l, x = 3 * l + 4 * l * g), o && (w = -w), h || (y = w, w = 0);
                            var C = "rotateX(" + (h ? 0 : -m) + "deg) rotateY(" + (h ? m : 0) + "deg) translate3d(" + w + "px, " + y + "px, " + x + "px)";
                            if (b <= 1 && b > -1 && (u = 90 * v + 90 * b, o && (u = 90 * -v - 90 * b)), f.transform(C), d.slideShadows) {
                                var T = h ? f.find(".swiper-slide-shadow-left") : f.find(".swiper-slide-shadow-top"),
                                    E = h ? f.find(".swiper-slide-shadow-right") : f.find(".swiper-slide-shadow-bottom");
                                0 === T.length && (T = i('<div class="swiper-slide-shadow-' + (h ? "left" : "top") + '"></div>'), f.append(T)), 0 === E.length && (E = i('<div class="swiper-slide-shadow-' + (h ? "right" : "bottom") + '"></div>'), f.append(E)), T.length && (T[0].style.opacity = Math.max(-b, 0)), E.length && (E[0].style.opacity = Math.max(b, 0))
                            }
                        }
                        if (s.css({
                            "-webkit-transform-origin": "50% 50% -" + l / 2 + "px",
                            "-moz-transform-origin": "50% 50% -" + l / 2 + "px",
                            "-ms-transform-origin": "50% 50% -" + l / 2 + "px",
                            "transform-origin": "50% 50% -" + l / 2 + "px"
                        }), d.shadow)
                            if (h) e.transform("translate3d(0px, " + (n / 2 + d.shadowOffset) + "px, " + -n / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + d.shadowScale + ")");
                            else {
                                var S = Math.abs(u) - 90 * Math.floor(Math.abs(u) / 90),
                                    M = 1.5 - (Math.sin(2 * S * Math.PI / 360) / 2 + Math.cos(2 * S * Math.PI / 360) / 2),
                                    k = d.shadowScale,
                                    P = d.shadowScale / M,
                                    z = d.shadowOffset;
                                e.transform("scale3d(" + k + ", 1, " + P + ") translate3d(0px, " + (r / 2 + z) + "px, " + -r / 2 / P + "px) rotateX(-90deg)")
                            }
                        var L = Q.isSafari || Q.isWebView ? -l / 2 : 0;
                        s.transform("translate3d(0px,0," + L + "px) rotateX(" + (this.isHorizontal() ? 0 : u) + "deg) rotateY(" + (this.isHorizontal() ? -u : 0) + "deg)")
                    }, setTransition: function (e) {
                        var t = this.$el;
                        this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), this.params.cubeEffect.shadow && !this.isHorizontal() && t.find(".swiper-cube-shadow").transition(e)
                    }
                },
                ye = {
                    setTranslate: function () {
                        for (var e = this.slides, t = this.rtlTranslate, s = 0; s < e.length; s += 1) {
                            var a = e.eq(s),
                                n = a[0].progress;
                            this.params.flipEffect.limitRotation && (n = Math.max(Math.min(a[0].progress, 1), -1));
                            var r = -180 * n,
                                o = 0,
                                l = -a[0].swiperSlideOffset,
                                d = 0;
                            if (this.isHorizontal() ? t && (r = -r) : (d = l, l = 0, o = -r, r = 0), a[0].style.zIndex = -Math.abs(Math.round(n)) + e.length, this.params.flipEffect.slideShadows) {
                                var h = this.isHorizontal() ? a.find(".swiper-slide-shadow-left") : a.find(".swiper-slide-shadow-top"),
                                    c = this.isHorizontal() ? a.find(".swiper-slide-shadow-right") : a.find(".swiper-slide-shadow-bottom");
                                0 === h.length && (h = i('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "left" : "top") + '"></div>'), a.append(h)), 0 === c.length && (c = i('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "right" : "bottom") + '"></div>'), a.append(c)), h.length && (h[0].style.opacity = Math.max(-n, 0)), c.length && (c[0].style.opacity = Math.max(n, 0))
                            }
                            a.transform("translate3d(" + l + "px, " + d + "px, 0px) rotateX(" + o + "deg) rotateY(" + r + "deg)")
                        }
                    }, setTransition: function (e) {
                        var t = this,
                            i = t.slides,
                            s = t.activeIndex,
                            a = t.$wrapperEl;
                        if (i.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), t.params.virtualTranslate && 0 !== e) {
                            var n = !1;
                            i.eq(s).transitionEnd(function () {
                                if (!n && t && !t.destroyed) {
                                    n = !0, t.animating = !1;
                                    for (var e = ["webkitTransitionEnd", "transitionend"], i = 0; i < e.length; i += 1) a.trigger(e[i])
                                }
                            })
                        }
                    }
                },
                xe = {
                    setTranslate: function () {
                        for (var e = this.width, t = this.height, s = this.slides, a = this.$wrapperEl, n = this.slidesSizesGrid, r = this.params.coverflowEffect, o = this.isHorizontal(), l = this.translate, d = o ? e / 2 - l : t / 2 - l, h = o ? r.rotate : -r.rotate, c = r.depth, u = 0, p = s.length; u < p; u += 1) {
                            var f = s.eq(u),
                                v = n[u],
                                m = (d - f[0].swiperSlideOffset - v / 2) / v * r.modifier,
                                g = o ? h * m : 0,
                                w = o ? 0 : h * m,
                                y = -c * Math.abs(m),
                                x = r.stretch;
                            "string" == typeof x && -1 !== x.indexOf("%") && (x = parseFloat(r.stretch) / 100 * v);
                            var C = o ? 0 : x * m,
                                T = o ? x * m : 0,
                                E = 1 - (1 - r.scale) * Math.abs(m);
                            Math.abs(T) < .001 && (T = 0), Math.abs(C) < .001 && (C = 0), Math.abs(y) < .001 && (y = 0), Math.abs(g) < .001 && (g = 0), Math.abs(w) < .001 && (w = 0), Math.abs(E) < .001 && (E = 0);
                            var S = "translate3d(" + T + "px," + C + "px," + y + "px)  rotateX(" + w + "deg) rotateY(" + g + "deg) scale(" + E + ")";
                            if (f.transform(S), f[0].style.zIndex = 1 - Math.abs(Math.round(m)), r.slideShadows) {
                                var M = o ? f.find(".swiper-slide-shadow-left") : f.find(".swiper-slide-shadow-top"),
                                    k = o ? f.find(".swiper-slide-shadow-right") : f.find(".swiper-slide-shadow-bottom");
                                0 === M.length && (M = i('<div class="swiper-slide-shadow-' + (o ? "left" : "top") + '"></div>'), f.append(M)), 0 === k.length && (k = i('<div class="swiper-slide-shadow-' + (o ? "right" : "bottom") + '"></div>'), f.append(k)), M.length && (M[0].style.opacity = m > 0 ? m : 0), k.length && (k[0].style.opacity = -m > 0 ? -m : 0)
                            }
                        }(b.pointerEvents || b.prefixedPointerEvents) && (a[0].style.perspectiveOrigin = d + "px 50%")
                    }, setTransition: function (e) {
                        this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)
                    }
                },
                Ce = {
                    init: function () {
                        var e = this.params.thumbs,
                            t = this.constructor;
                        e.swiper instanceof t ? (this.thumbs.swiper = e.swiper, g.extend(this.thumbs.swiper.originalParams, {
                            watchSlidesProgress: !0,
                            slideToClickedSlide: !1
                        }), g.extend(this.thumbs.swiper.params, {
                            watchSlidesProgress: !0,
                            slideToClickedSlide: !1
                        })) : g.isObject(e.swiper) && (this.thumbs.swiper = new t(g.extend({}, e.swiper, {
                            watchSlidesVisibility: !0,
                            watchSlidesProgress: !0,
                            slideToClickedSlide: !1
                        })), this.thumbs.swiperCreated = !0), this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass), this.thumbs.swiper.on("tap", this.thumbs.onThumbClick)
                    }, onThumbClick: function () {
                        var e = this.thumbs.swiper;
                        if (e) {
                            var t = e.clickedIndex,
                                s = e.clickedSlide;
                            if (!(s && i(s).hasClass(this.params.thumbs.slideThumbActiveClass) || null == t)) {
                                var a;
                                if (a = e.params.loop ? parseInt(i(e.clickedSlide).attr("data-swiper-slide-index"), 10) : t, this.params.loop) {
                                    var n = this.activeIndex;
                                    this.slides.eq(n).hasClass(this.params.slideDuplicateClass) && (this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft, n = this.activeIndex);
                                    var r = this.slides.eq(n).prevAll('[data-swiper-slide-index="' + a + '"]').eq(0).index(),
                                        o = this.slides.eq(n).nextAll('[data-swiper-slide-index="' + a + '"]').eq(0).index();
                                    a = void 0 === r ? o : void 0 === o ? r : o - n < n - r ? o : r
                                }
                                this.slideTo(a)
                            }
                        }
                    }, update: function (e) {
                        var t = this.thumbs.swiper;
                        if (t) {
                            var i = "auto" === t.params.slidesPerView ? t.slidesPerViewDynamic() : t.params.slidesPerView,
                                s = this.params.thumbs.autoScrollOffset,
                                a = s && !t.params.loop;
                            if (this.realIndex !== t.realIndex || a) {
                                var n, r, o = t.activeIndex;
                                if (t.params.loop) {
                                    t.slides.eq(o).hasClass(t.params.slideDuplicateClass) && (t.loopFix(), t._clientLeft = t.$wrapperEl[0].clientLeft, o = t.activeIndex);
                                    var l = t.slides.eq(o).prevAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index(),
                                        d = t.slides.eq(o).nextAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index();
                                    n = void 0 === l ? d : void 0 === d ? l : d - o == o - l ? o : d - o < o - l ? d : l, r = this.activeIndex > this.previousIndex ? "next" : "prev"
                                } else r = (n = this.realIndex) > this.previousIndex ? "next" : "prev";
                                a && (n += "next" === r ? s : -1 * s), t.visibleSlidesIndexes && t.visibleSlidesIndexes.indexOf(n) < 0 && (t.params.centeredSlides ? n = n > o ? n - Math.floor(i / 2) + 1 : n + Math.floor(i / 2) - 1 : n > o && (n = n - i + 1), t.slideTo(n, e ? 0 : void 0))
                            }
                            var h = 1,
                                c = this.params.thumbs.slideThumbActiveClass;
                            if (this.params.slidesPerView > 1 && !this.params.centeredSlides && (h = this.params.slidesPerView), this.params.thumbs.multipleActiveThumbs || (h = 1), h = Math.floor(h), t.slides.removeClass(c), t.params.loop || t.params.virtual && t.params.virtual.enabled)
                                for (var u = 0; u < h; u += 1) t.$wrapperEl.children('[data-swiper-slide-index="' + (this.realIndex + u) + '"]').addClass(c);
                            else
                                for (var p = 0; p < h; p += 1) t.slides.eq(this.realIndex + p).addClass(c)
                        }
                    }
                },
                Te = [_, K, J, Z, te, se, ne, {
                    name: "mousewheel",
                    params: {
                        mousewheel: {
                            enabled: !1,
                            releaseOnEdges: !1,
                            invert: !1,
                            forceToAxis: !1,
                            sensitivity: 1,
                            eventsTarged: "container"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            mousewheel: {
                                enabled: !1,
                                enable: re.enable.bind(this),
                                disable: re.disable.bind(this),
                                handle: re.handle.bind(this),
                                handleMouseEnter: re.handleMouseEnter.bind(this),
                                handleMouseLeave: re.handleMouseLeave.bind(this),
                                animateSlider: re.animateSlider.bind(this),
                                releaseScroll: re.releaseScroll.bind(this),
                                lastScrollTime: g.now(),
                                lastEventBeforeSnap: void 0,
                                recentWheelEvents: []
                            }
                        })
                    }, on: {
                        init: function () {
                            !this.params.mousewheel.enabled && this.params.cssMode && this.mousewheel.disable(), this.params.mousewheel.enabled && this.mousewheel.enable()
                        }, destroy: function () {
                            this.params.cssMode && this.mousewheel.enable(), this.mousewheel.enabled && this.mousewheel.disable()
                        }
                    }
                }, {
                    name: "navigation",
                    params: {
                        navigation: {
                            nextEl: null,
                            prevEl: null,
                            hideOnClick: !1,
                            disabledClass: "swiper-button-disabled",
                            hiddenClass: "swiper-button-hidden",
                            lockClass: "swiper-button-lock"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            navigation: {
                                init: oe.init.bind(this),
                                update: oe.update.bind(this),
                                destroy: oe.destroy.bind(this),
                                onNextClick: oe.onNextClick.bind(this),
                                onPrevClick: oe.onPrevClick.bind(this)
                            }
                        })
                    }, on: {
                        init: function () {
                            this.navigation.init(), this.navigation.update()
                        }, toEdge: function () {
                            this.navigation.update()
                        }, fromEdge: function () {
                            this.navigation.update()
                        }, destroy: function () {
                            this.navigation.destroy()
                        }, click: function (e) {
                            var t, s = this.navigation,
                                a = s.$nextEl,
                                n = s.$prevEl;
                            !this.params.navigation.hideOnClick || i(e.target).is(n) || i(e.target).is(a) || (a ? t = a.hasClass(this.params.navigation.hiddenClass) : n && (t = n.hasClass(this.params.navigation.hiddenClass)), !0 === t ? this.emit("navigationShow", this) : this.emit("navigationHide", this), a && a.toggleClass(this.params.navigation.hiddenClass), n && n.toggleClass(this.params.navigation.hiddenClass))
                        }
                    }
                }, {
                    name: "pagination",
                    params: {
                        pagination: {
                            el: null,
                            bulletElement: "span",
                            clickable: !1,
                            hideOnClick: !1,
                            renderBullet: null,
                            renderProgressbar: null,
                            renderFraction: null,
                            renderCustom: null,
                            progressbarOpposite: !1,
                            type: "bullets",
                            dynamicBullets: !1,
                            dynamicMainBullets: 1,
                            formatFractionCurrent: function (e) {
                                return e
                            }, formatFractionTotal: function (e) {
                                return e
                            }, bulletClass: "swiper-pagination-bullet",
                            bulletActiveClass: "swiper-pagination-bullet-active",
                            modifierClass: "swiper-pagination-",
                            currentClass: "swiper-pagination-current",
                            totalClass: "swiper-pagination-total",
                            hiddenClass: "swiper-pagination-hidden",
                            progressbarFillClass: "swiper-pagination-progressbar-fill",
                            progressbarOppositeClass: "swiper-pagination-progressbar-opposite",
                            clickableClass: "swiper-pagination-clickable",
                            lockClass: "swiper-pagination-lock"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            pagination: {
                                init: le.init.bind(this),
                                render: le.render.bind(this),
                                update: le.update.bind(this),
                                destroy: le.destroy.bind(this),
                                dynamicBulletIndex: 0
                            }
                        })
                    }, on: {
                        init: function () {
                            this.pagination.init(), this.pagination.render(), this.pagination.update()
                        }, activeIndexChange: function () {
                            (this.params.loop || void 0 === this.snapIndex) && this.pagination.update()
                        }, snapIndexChange: function () {
                            this.params.loop || this.pagination.update()
                        }, slidesLengthChange: function () {
                            this.params.loop && (this.pagination.render(), this.pagination.update())
                        }, snapGridLengthChange: function () {
                            this.params.loop || (this.pagination.render(), this.pagination.update())
                        }, destroy: function () {
                            this.pagination.destroy()
                        }, click: function (e) {
                            this.params.pagination.el && this.params.pagination.hideOnClick && this.pagination.$el.length > 0 && !i(e.target).hasClass(this.params.pagination.bulletClass) && (!0 === this.pagination.$el.hasClass(this.params.pagination.hiddenClass) ? this.emit("paginationShow", this) : this.emit("paginationHide", this), this.pagination.$el.toggleClass(this.params.pagination.hiddenClass))
                        }
                    }
                }, {
                    name: "scrollbar",
                    params: {
                        scrollbar: {
                            el: null,
                            dragSize: "auto",
                            hide: !1,
                            draggable: !1,
                            snapOnRelease: !0,
                            lockClass: "swiper-scrollbar-lock",
                            dragClass: "swiper-scrollbar-drag"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            scrollbar: {
                                init: de.init.bind(this),
                                destroy: de.destroy.bind(this),
                                updateSize: de.updateSize.bind(this),
                                setTranslate: de.setTranslate.bind(this),
                                setTransition: de.setTransition.bind(this),
                                enableDraggable: de.enableDraggable.bind(this),
                                disableDraggable: de.disableDraggable.bind(this),
                                setDragPosition: de.setDragPosition.bind(this),
                                getPointerPosition: de.getPointerPosition.bind(this),
                                onDragStart: de.onDragStart.bind(this),
                                onDragMove: de.onDragMove.bind(this),
                                onDragEnd: de.onDragEnd.bind(this),
                                isTouched: !1,
                                timeout: null,
                                dragTimeout: null
                            }
                        })
                    }, on: {
                        init: function () {
                            this.scrollbar.init(), this.scrollbar.updateSize(), this.scrollbar.setTranslate()
                        }, update: function () {
                            this.scrollbar.updateSize()
                        }, resize: function () {
                            this.scrollbar.updateSize()
                        }, observerUpdate: function () {
                            this.scrollbar.updateSize()
                        }, setTranslate: function () {
                            this.scrollbar.setTranslate()
                        }, setTransition: function (e) {
                            this.scrollbar.setTransition(e)
                        }, destroy: function () {
                            this.scrollbar.destroy()
                        }
                    }
                }, {
                    name: "parallax",
                    params: {
                        parallax: {
                            enabled: !1
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            parallax: {
                                setTransform: he.setTransform.bind(this),
                                setTranslate: he.setTranslate.bind(this),
                                setTransition: he.setTransition.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            this.params.parallax.enabled && (this.params.watchSlidesProgress = !0, this.originalParams.watchSlidesProgress = !0)
                        }, init: function () {
                            this.params.parallax.enabled && this.parallax.setTranslate()
                        }, setTranslate: function () {
                            this.params.parallax.enabled && this.parallax.setTranslate()
                        }, setTransition: function (e) {
                            this.params.parallax.enabled && this.parallax.setTransition(e)
                        }
                    }
                }, {
                    name: "zoom",
                    params: {
                        zoom: {
                            enabled: !1,
                            maxRatio: 3,
                            minRatio: 1,
                            toggle: !0,
                            containerClass: "swiper-zoom-container",
                            zoomedSlideClass: "swiper-slide-zoomed"
                        }
                    },
                    create: function () {
                        var e = this,
                            t = {
                                enabled: !1,
                                scale: 1,
                                currentScale: 1,
                                isScaling: !1,
                                gesture: {
                                    $slideEl: void 0,
                                    slideWidth: void 0,
                                    slideHeight: void 0,
                                    $imageEl: void 0,
                                    $imageWrapEl: void 0,
                                    maxRatio: 3
                                },
                                image: {
                                    isTouched: void 0,
                                    isMoved: void 0,
                                    currentX: void 0,
                                    currentY: void 0,
                                    minX: void 0,
                                    minY: void 0,
                                    maxX: void 0,
                                    maxY: void 0,
                                    width: void 0,
                                    height: void 0,
                                    startX: void 0,
                                    startY: void 0,
                                    touchesStart: {},
                                    touchesCurrent: {}
                                },
                                velocity: {
                                    x: void 0,
                                    y: void 0,
                                    prevPositionX: void 0,
                                    prevPositionY: void 0,
                                    prevTime: void 0
                                }
                            };
                        "onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function (i) {
                            t[i] = ce[i].bind(e)
                        }), g.extend(e, {
                            zoom: t
                        });
                        var i = 1;
                        Object.defineProperty(e.zoom, "scale", {
                            get: function () {
                                return i
                            }, set: function (t) {
                                if (i !== t) {
                                    var s = e.zoom.gesture.$imageEl ? e.zoom.gesture.$imageEl[0] : void 0,
                                        a = e.zoom.gesture.$slideEl ? e.zoom.gesture.$slideEl[0] : void 0;
                                    e.emit("zoomChange", t, s, a)
                                }
                                i = t
                            }
                        })
                    }, on: {
                        init: function () {
                            this.params.zoom.enabled && this.zoom.enable()
                        }, destroy: function () {
                            this.zoom.disable()
                        }, touchStart: function (e) {
                            this.zoom.enabled && this.zoom.onTouchStart(e)
                        }, touchEnd: function (e) {
                            this.zoom.enabled && this.zoom.onTouchEnd(e)
                        }, doubleTap: function (e) {
                            this.params.zoom.enabled && this.zoom.enabled && this.params.zoom.toggle && this.zoom.toggle(e)
                        }, transitionEnd: function () {
                            this.zoom.enabled && this.params.zoom.enabled && this.zoom.onTransitionEnd()
                        }, slideChange: function () {
                            this.zoom.enabled && this.params.zoom.enabled && this.params.cssMode && this.zoom.onTransitionEnd()
                        }
                    }
                }, {
                    name: "lazy",
                    params: {
                        lazy: {
                            enabled: !1,
                            loadPrevNext: !1,
                            loadPrevNextAmount: 1,
                            loadOnTransitionStart: !1,
                            elementClass: "swiper-lazy",
                            loadingClass: "swiper-lazy-loading",
                            loadedClass: "swiper-lazy-loaded",
                            preloaderClass: "swiper-lazy-preloader"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            lazy: {
                                initialImageLoaded: !1,
                                load: ue.load.bind(this),
                                loadInSlide: ue.loadInSlide.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            this.params.lazy.enabled && this.params.preloadImages && (this.params.preloadImages = !1)
                        }, init: function () {
                            this.params.lazy.enabled && !this.params.loop && 0 === this.params.initialSlide && this.lazy.load()
                        }, scroll: function () {
                            this.params.freeMode && !this.params.freeModeSticky && this.lazy.load()
                        }, resize: function () {
                            this.params.lazy.enabled && this.lazy.load()
                        }, scrollbarDragMove: function () {
                            this.params.lazy.enabled && this.lazy.load()
                        }, transitionStart: function () {
                            this.params.lazy.enabled && (this.params.lazy.loadOnTransitionStart || !this.params.lazy.loadOnTransitionStart && !this.lazy.initialImageLoaded) && this.lazy.load()
                        }, transitionEnd: function () {
                            this.params.lazy.enabled && !this.params.lazy.loadOnTransitionStart && this.lazy.load()
                        }, slideChange: function () {
                            this.params.lazy.enabled && this.params.cssMode && this.lazy.load()
                        }
                    }
                }, {
                    name: "controller",
                    params: {
                        controller: {
                            control: void 0,
                            inverse: !1,
                            by: "slide"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            controller: {
                                control: this.params.controller.control,
                                getInterpolateFunction: pe.getInterpolateFunction.bind(this),
                                setTranslate: pe.setTranslate.bind(this),
                                setTransition: pe.setTransition.bind(this)
                            }
                        })
                    }, on: {
                        update: function () {
                            this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline)
                        }, resize: function () {
                            this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline)
                        }, observerUpdate: function () {
                            this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline)
                        }, setTranslate: function (e, t) {
                            this.controller.control && this.controller.setTranslate(e, t)
                        }, setTransition: function (e, t) {
                            this.controller.control && this.controller.setTransition(e, t)
                        }
                    }
                }, {
                    name: "a11y",
                    params: {
                        a11y: {
                            enabled: !0,
                            notificationClass: "swiper-notification",
                            prevSlideMessage: "Previous slide",
                            nextSlideMessage: "Next slide",
                            firstSlideMessage: "This is the first slide",
                            lastSlideMessage: "This is the last slide",
                            paginationBulletMessage: "Go to slide {{index}}"
                        }
                    },
                    create: function () {
                        var e = this;
                        g.extend(e, {
                            a11y: {
                                liveRegion: i('<span class="' + e.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>')
                            }
                        }), Object.keys(fe).forEach(function (t) {
                            e.a11y[t] = fe[t].bind(e)
                        })
                    }, on: {
                        init: function () {
                            this.params.a11y.enabled && (this.a11y.init(), this.a11y.updateNavigation())
                        }, toEdge: function () {
                            this.params.a11y.enabled && this.a11y.updateNavigation()
                        }, fromEdge: function () {
                            this.params.a11y.enabled && this.a11y.updateNavigation()
                        }, paginationUpdate: function () {
                            this.params.a11y.enabled && this.a11y.updatePagination()
                        }, destroy: function () {
                            this.params.a11y.enabled && this.a11y.destroy()
                        }
                    }
                }, {
                    name: "history",
                    params: {
                        history: {
                            enabled: !1,
                            replaceState: !1,
                            key: "slides"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            history: {
                                init: ve.init.bind(this),
                                setHistory: ve.setHistory.bind(this),
                                setHistoryPopState: ve.setHistoryPopState.bind(this),
                                scrollToSlide: ve.scrollToSlide.bind(this),
                                destroy: ve.destroy.bind(this)
                            }
                        })
                    }, on: {
                        init: function () {
                            this.params.history.enabled && this.history.init()
                        }, destroy: function () {
                            this.params.history.enabled && this.history.destroy()
                        }, transitionEnd: function () {
                            this.history.initialized && this.history.setHistory(this.params.history.key, this.activeIndex)
                        }, slideChange: function () {
                            this.history.initialized && this.params.cssMode && this.history.setHistory(this.params.history.key, this.activeIndex)
                        }
                    }
                }, {
                    name: "hash-navigation",
                    params: {
                        hashNavigation: {
                            enabled: !1,
                            replaceState: !1,
                            watchState: !1
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            hashNavigation: {
                                initialized: !1,
                                init: me.init.bind(this),
                                destroy: me.destroy.bind(this),
                                setHash: me.setHash.bind(this),
                                onHashCange: me.onHashCange.bind(this)
                            }
                        })
                    }, on: {
                        init: function () {
                            this.params.hashNavigation.enabled && this.hashNavigation.init()
                        }, destroy: function () {
                            this.params.hashNavigation.enabled && this.hashNavigation.destroy()
                        }, transitionEnd: function () {
                            this.hashNavigation.initialized && this.hashNavigation.setHash()
                        }, slideChange: function () {
                            this.hashNavigation.initialized && this.params.cssMode && this.hashNavigation.setHash()
                        }
                    }
                }, {
                    name: "autoplay",
                    params: {
                        autoplay: {
                            enabled: !1,
                            delay: 3e3,
                            waitForTransition: !0,
                            disableOnInteraction: !0,
                            stopOnLastSlide: !1,
                            reverseDirection: !1
                        }
                    },
                    create: function () {
                        var e = this;
                        g.extend(e, {
                            autoplay: {
                                running: !1,
                                paused: !1,
                                run: ge.run.bind(e),
                                start: ge.start.bind(e),
                                stop: ge.stop.bind(e),
                                pause: ge.pause.bind(e),
                                onVisibilityChange: function () {
                                    "hidden" === document.visibilityState && e.autoplay.running && e.autoplay.pause(), "visible" === document.visibilityState && e.autoplay.paused && (e.autoplay.run(), e.autoplay.paused = !1)
                                }, onTransitionEnd: function (t) {
                                    e && !e.destroyed && e.$wrapperEl && t.target === this && (e.$wrapperEl[0].removeEventListener("transitionend", e.autoplay.onTransitionEnd), e.$wrapperEl[0].removeEventListener("webkitTransitionEnd", e.autoplay.onTransitionEnd), e.autoplay.paused = !1, e.autoplay.running ? e.autoplay.run() : e.autoplay.stop())
                                }
                            }
                        })
                    }, on: {
                        init: function () {
                            this.params.autoplay.enabled && (this.autoplay.start(), document.addEventListener("visibilitychange", this.autoplay.onVisibilityChange))
                        }, beforeTransitionStart: function (e, t) {
                            this.autoplay.running && (t || !this.params.autoplay.disableOnInteraction ? this.autoplay.pause(e) : this.autoplay.stop())
                        }, sliderFirstMove: function () {
                            this.autoplay.running && (this.params.autoplay.disableOnInteraction ? this.autoplay.stop() : this.autoplay.pause())
                        }, touchEnd: function () {
                            this.params.cssMode && this.autoplay.paused && !this.params.autoplay.disableOnInteraction && this.autoplay.run()
                        }, destroy: function () {
                            this.autoplay.running && this.autoplay.stop(), document.removeEventListener("visibilitychange", this.autoplay.onVisibilityChange)
                        }
                    }
                }, {
                    name: "effect-fade",
                    params: {
                        fadeEffect: {
                            crossFade: !1
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            fadeEffect: {
                                setTranslate: be.setTranslate.bind(this),
                                setTransition: be.setTransition.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            if ("fade" === this.params.effect) {
                                this.classNames.push(this.params.containerModifierClass + "fade");
                                var e = {
                                    slidesPerView: 1,
                                    slidesPerColumn: 1,
                                    slidesPerGroup: 1,
                                    watchSlidesProgress: !0,
                                    spaceBetween: 0,
                                    virtualTranslate: !0
                                };
                                g.extend(this.params, e), g.extend(this.originalParams, e)
                            }
                        }, setTranslate: function () {
                            "fade" === this.params.effect && this.fadeEffect.setTranslate()
                        }, setTransition: function (e) {
                            "fade" === this.params.effect && this.fadeEffect.setTransition(e)
                        }
                    }
                }, {
                    name: "effect-cube",
                    params: {
                        cubeEffect: {
                            slideShadows: !0,
                            shadow: !0,
                            shadowOffset: 20,
                            shadowScale: .94
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            cubeEffect: {
                                setTranslate: we.setTranslate.bind(this),
                                setTransition: we.setTransition.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            if ("cube" === this.params.effect) {
                                this.classNames.push(this.params.containerModifierClass + "cube"), this.classNames.push(this.params.containerModifierClass + "3d");
                                var e = {
                                    slidesPerView: 1,
                                    slidesPerColumn: 1,
                                    slidesPerGroup: 1,
                                    watchSlidesProgress: !0,
                                    resistanceRatio: 0,
                                    spaceBetween: 0,
                                    centeredSlides: !1,
                                    virtualTranslate: !0
                                };
                                g.extend(this.params, e), g.extend(this.originalParams, e)
                            }
                        }, setTranslate: function () {
                            "cube" === this.params.effect && this.cubeEffect.setTranslate()
                        }, setTransition: function (e) {
                            "cube" === this.params.effect && this.cubeEffect.setTransition(e)
                        }
                    }
                }, {
                    name: "effect-flip",
                    params: {
                        flipEffect: {
                            slideShadows: !0,
                            limitRotation: !0
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            flipEffect: {
                                setTranslate: ye.setTranslate.bind(this),
                                setTransition: ye.setTransition.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            if ("flip" === this.params.effect) {
                                this.classNames.push(this.params.containerModifierClass + "flip"), this.classNames.push(this.params.containerModifierClass + "3d");
                                var e = {
                                    slidesPerView: 1,
                                    slidesPerColumn: 1,
                                    slidesPerGroup: 1,
                                    watchSlidesProgress: !0,
                                    spaceBetween: 0,
                                    virtualTranslate: !0
                                };
                                g.extend(this.params, e), g.extend(this.originalParams, e)
                            }
                        }, setTranslate: function () {
                            "flip" === this.params.effect && this.flipEffect.setTranslate()
                        }, setTransition: function (e) {
                            "flip" === this.params.effect && this.flipEffect.setTransition(e)
                        }
                    }
                }, {
                    name: "effect-coverflow",
                    params: {
                        coverflowEffect: {
                            rotate: 50,
                            stretch: 0,
                            depth: 100,
                            scale: 1,
                            modifier: 1,
                            slideShadows: !0
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            coverflowEffect: {
                                setTranslate: xe.setTranslate.bind(this),
                                setTransition: xe.setTransition.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            "coverflow" === this.params.effect && (this.classNames.push(this.params.containerModifierClass + "coverflow"), this.classNames.push(this.params.containerModifierClass + "3d"), this.params.watchSlidesProgress = !0, this.originalParams.watchSlidesProgress = !0)
                        }, setTranslate: function () {
                            "coverflow" === this.params.effect && this.coverflowEffect.setTranslate()
                        }, setTransition: function (e) {
                            "coverflow" === this.params.effect && this.coverflowEffect.setTransition(e)
                        }
                    }
                }, {
                    name: "thumbs",
                    params: {
                        thumbs: {
                            swiper: null,
                            multipleActiveThumbs: !0,
                            autoScrollOffset: 0,
                            slideThumbActiveClass: "swiper-slide-thumb-active",
                            thumbsContainerClass: "swiper-container-thumbs"
                        }
                    },
                    create: function () {
                        g.extend(this, {
                            thumbs: {
                                swiper: null,
                                init: Ce.init.bind(this),
                                update: Ce.update.bind(this),
                                onThumbClick: Ce.onThumbClick.bind(this)
                            }
                        })
                    }, on: {
                        beforeInit: function () {
                            var e = this.params.thumbs;
                            e && e.swiper && (this.thumbs.init(), this.thumbs.update(!0))
                        }, slideChange: function () {
                            this.thumbs.swiper && this.thumbs.update()
                        }, update: function () {
                            this.thumbs.swiper && this.thumbs.update()
                        }, resize: function () {
                            this.thumbs.swiper && this.thumbs.update()
                        }, observerUpdate: function () {
                            this.thumbs.swiper && this.thumbs.update()
                        }, setTransition: function (e) {
                            var t = this.thumbs.swiper;
                            t && t.setTransition(e)
                        }, beforeDestroy: function () {
                            var e = this.thumbs.swiper;
                            e && this.thumbs.swiperCreated && e && e.destroy()
                        }
                    }
                }];
            return void 0 === U.use && (U.use = U.Class.use, U.installModule = U.Class.installModule), U.use(Te), U
        })
    },
    function (e, t) {}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
    function (e, t, i) {
        "use strict";
        i(15);
        var s = i(0);
        i(1);
        var a = i(17);
        i(18), i(2), i(63), i(3), i(13), {
            bannerSwiper: null,
            photoSwiper: null,
            init: function () {
                var e = s(window).width();
                if (e < 800) {
                    var t = s(".home-banner").height() + s(".header").height();
                    s(".index-page").css({
                        top: t,
                        "padding-bottom": t + "px"
                    })
                }
                s(window).resize(function () {
                    if (s(window).width() < 800) {
                        var e = s(".home-banner").height() + s(".header").height();
                        s(".index-page").css({
                            top: e,
                            "padding-bottom": e + "px"
                        })
                    } else s(".index-page").css({
                        top: 0,
                        "padding-bottom": 0
                    })
                }), this.initBannerSwiper(), this.initPhotoSwiper(e), this.bindEvents(e)
            }, initBannerSwiper: function () {
                // this.bannerSwiper = new a(".banner-swiper", {
                //     loop: !0,
                //     autoplay: 0,
                //     pagination: {
                //         el: ".banner-pagination",
                //         clickable: !0
                //     }
                // })
            }, initPhotoSwiper: function (e) {
                var t = 0,
                    i = 0;
                e > 800 ? (t = .15 * e, i = 35) : (t = .0535 * e, i = 18), this.photoSwiper = new a(".design-box", {
                    navigation: {
                        nextEl: ".swiper-button-next",
                        prevEl: ".swiper-button-prev"
                    },
                    slidesPerView: "auto",
                    slidesOffsetBefore: t,
                    slidesOffsetAfter: 35,
                    spaceBetween: i
                })
            }, bindEvents: function (e) {
                var t = s(".header");
                s(window).outerHeight();
                e > 800 ? s(window).scroll(function () {
                    s(window).scrollTop() > 0 ? t.removeClass("opacity-header") : t.addClass("opacity-header")
                }) : t.removeClass("opacity-header")
            }
        }.init()
    },
    function (e, t) {}
], [62]);